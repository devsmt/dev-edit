
# Define SciTE settings for CSS files
# Jakub Vrána - jakub@vrana.cz

filter.css=CSS (css)|*.css|
lexer.*.css=css

indent.size.*.css=4
tab.size.*.css=4
use.tabs.*.css=1

keywordclass.css=\
color background-color background-image background-repeat background-attachment background-position background \
font-family font-style font-variant font-weight font-size font \
word-spacing letter-spacing text-decoration vertical-align text-transform text-align text-indent line-height \
margin-top margin-right margin-bottom margin-left margin \
padding-top padding-right padding-bottom padding-left padding \
border-top-width border-right-width border-bottom-width border-left-width border-width \
border-top border-right border-bottom border-left border \
border-color border-style width height float clear \
display white-space list-style-type list-style-image list-style-position list-style

keywordclass.values=\
auto none normal italic oblique small-caps bold bolder lighter \
xx-small x-small small medium large x-large xx-large larger smaller \
transparent repeat repeat-x repeat-y no-repeat scroll fixed \
top bottom left center right justify both \
underline overline line-through blink \
baseline sub super text-top middle text-bottom \
capitalize uppercase lowercase thin medium thick \
dotted dashed solid double groove ridge inset outset \
block inline list-item pre no-wrap inside outside \
disc circle square decimal lower-roman upper-roman lower-alpha upper-alpha \
aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal white yellow

# rgb(i1, i2, i3) rgb(p1, p2, p3) #xxx #xxxxxx url(path)
# path: in optional single or double quotes. If quotes, inside quotes must be backslashed.
# length: [+-][0-9]+<unit>
# unit: % pt mm cm pc in px em ex

# at-rule: import

# CSS2

keywordclass.css2=\
border-top-color border-right-color border-bottom-color border-left-color border-color \
border-top-style border-right-style border-bottom-style border-left-style border-style \
top right bottom left position z-index direction unicode-bidi \
min-width max-width min-height max-height overflow clip visibility content quotes \
counter-reset counter-increment marker-offset \
size marks page-break-before page-break-after page-break-inside page orphans widows \
font-stretch font-size-adjust unicode-range units-per-em src \
panose-1 stemv stemh slope cap-height x-height ascent descent widths bbox definition-src \
baseline centerline mathline topline text-shadow \
caption-side table-layout border-collapse border-spacing empty-cells speak-header \
cursor outline outline-width outline-style outline-color \
volume speak pause-before pause-after pause cue-before cue-after cue \
play-during azimuth elevation speech-rate voice-family pitch pitch-range stress richness \
speak-punctuation speak-numeral

keywordclass.values2=\
inherit \
run-in compact marker table inline-table table-row-group table-header-group table-footer-group \
table-row table-column-group table-column table-cell table-caption \
static relative absolute fixed ltr rtl embed bidi-override \
visible hidden scroll collapse open-quote close-quote no-open-quote no-close-quote \
decimal-leading-zero lower-greek lower-latin upper-latin hebrew armenian georgian \
cjk-ideographic hiragana katakana hiragana-iroha katakana-iroha \
landscape portrait crop cross always avoid \
wider narrower ultra-condensed extra-condensed condensed semi-condensed \
semi-expanded expanded extra-expanded ultra-expanded \
caption icon menu message-box small-caption status-bar \
separate show hide once crosshair default pointer move text wait help \
e-resize ne-resize nw-resize n-resize se-resize sw-resize s-resize w-resize \
ActiveBorder ActiveCaption AppWorkspace Background ButtonFace ButtonHighlight ButtonShadow \
InactiveCaptionText ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder \
InactiveCaption InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow \
ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText \
silent x-soft soft medium loud x-loud spell-out mix \
left-side far-left center-left center-right far-right right-side behind leftwards rightwards \
below level above higher lower x-slow slow medium fast x-fast faster slower \
male female child x-low low high x-high code digits continous

# counter(id) counter(id, style) attr(X) local("name)" format("string")
# angle: [+-][0-9]+<unit>
# angle unit: deg grad rad
# time: [0-9]+<unit>
# time unit: ms s
# frequency: [0-9]+<unit>
# frequency unit: Hz kHz
# Unicode range: U+x??-yyy

# at-rule: media, values: all aural braille embossed handheld print projection screen tty tv
# at-rule: page font-face charset

keywords.*.css=$(keywordclass.css)

# Pseudo classes
keywords2.*.css=first-letter first-line link active visited \
first-child focus hover lang before after left right first
# Second line is CSS2

keywords3.*.css=$(keywordclass.css2)

word.characters.*.css=$(chars.alpha)$(chars.numeric)-

comment.stream.start.css=/*
comment.stream.end.css=*/

# Default
style.css.32=$(font.code.base)
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.css.0=fore:#FF0080
# Selector (HTML tag)
style.css.1=$(colour.keyword),bold
# Class selector ([HtmlTag].classSelector)
style.css.2=fore:#66cc00
# Pseudo class (HtmlTag:pseudoClass)
style.css.3=fore:#800000
# Unknown Pseudo class
style.css.4=fore:#FF0000
# Operator
style.css.5=$(colour.operator)
# CSS1 Property
style.css.6=fore:#0040E0
# Unknown Property
style.css.7=fore:#FF0000
# Value
style.css.8=$(colour.string)
# Comment
style.css.9=$(colour.code.comment.box),$(font.code.comment.box)
# ID selector (#IdSel)
style.css.10=$(colour.number),italics
# Important
style.css.11=fore:#FF8000,bold
# At-rule (@)
style.css.12=$(colour.preproc),bold
# Double quoted strings
style.css.13=$(colour.string)
# Single quoted strings
style.css.14=$(colour.string)
# CSS2 Property
style.css.15=fore:#00A0E0
# Attribute selection ([att='val'])
style.css.16=fore:#800000

block.start.*.css=5 {
block.end.*.css=5 }

 
autocomplete.css.ignorecase=0
 
autocomplete.css.start.characters=$(chars.alpha)-
 
 
comment.block.css=/*
comment.block.at.line.start.css=1
comment.stream.start.css=/*
comment.stream.end.css=*/
comment.box.start.css=/*
comment.box.middle.css=
comment.box.end.css=*/


file.patterns.css=*.css
filter.css=Css (*.css)|$(file.patterns.css)|

abbreviations.$(file.patterns.css)=$(SciteDefaultHome)/lang/css/css.abbrev

api.$(file.patterns.css)=$(SciteDefaultHome)/lang/css/css.api

lexer.$(file.patterns.css)=css
keywords.$(file.patterns.css)=$(keywordclass.css)
keywords2.$(file.patterns.css)=$(keywordclass2.css)
#keywords3.$(file.patterns.css)=
#keywords4.$(file.patterns.css)=
#keywords5.$(file.patterns.css)=
#keywords6.$(file.patterns.css)=
#keywords7.$(file.patterns.css)=
#keywords8.$(file.patterns.css)=
#keywords9.$(file.patterns.css)=
 
#preprocessor.symbol.$(file.patterns.css)
#preprocessor.start.$(file.patterns.css)
#preprocessor.middle.$(file.patterns.css)
#preprocessor.end.$(file.patterns.css)
 
#command.compile.$(file.patterns.css)=
#command.compile.subsystem.$(file.patterns.css)=
#command.build.$(file.patterns.css)=
#command.build.subsystem.$(file.patterns.css)=
#command.build.directory.$(file.patterns.css)=
#command.go.$(file.patterns.css)=
#command.go.subsystem.$(file.patterns.css)=
#command.go.needs.$(file.patterns.css)=
#command.go.needs.subsystem.$(file.patterns.css)=
 
#command.name.{number}.$(file.patterns.css)=
 
#command.{number}.$(file.patterns.css)=
#command.is.filter.{number}.$(file.patterns.css)=
 
#command.subsystem.{number}.$(file.patterns.css)=
 
#command.save.before.{number}.$(file.patterns.css)=
#command.input.{number}.$(file.patterns.css)=
#command.replace.selection.{number}.$(file.patterns.css)=
#command.quiet.{number}.$(file.patterns.css)=
#command.mode.{number}.$(file.patterns.css)=
 
#command.shortcut.{number}.$(file.patterns.css)=
#command.help.$(file.patterns.css)=
#command.help.subsystem.$(file.patterns.css)=
 
tab.size.$(file.patterns.css)=4
indent.size.$(file.patterns.css)=4
use.tabs.$(file.patterns.css)=0
indent.maintain.$(file.patterns.css)=0

extension.$(file.patterns.css)=$(SciteDefaultHome)/lang/css/css.lua

 

# Alt+P
#command.name.1.$(file.patterns.css)=Open PHP
#command.subsystem.1.$(file.patterns.css)=3
#command.1.$(file.patterns.css)=css_open_php
#command.mode.1.$(file.patterns.css)=savebefore:no
#command.shortcut.1.$(file.patterns.css)=Alt+P

# Alt+T
#command.name.2.$(file.patterns.css)=Open TPL
#command.subsystem.2.$(file.patterns.css)=3
#command.2.$(file.patterns.css)=css_open_tpl
#command.mode.2.$(file.patterns.css)=savebefore:no
#command.shortcut.2.$(file.patterns.css)=Alt+T

# Alt+S
#command.name.3.$(file.patterns.css)=Open JS
#command.subsystem.3.$(file.patterns.css)=3
#command.3.$(file.patterns.css)=css_open_js
#command.mode.3.$(file.patterns.css)=savebefore:no
#command.shortcut.3.$(file.patterns.css)=Alt+S




#--------------------------------------------------------------------------------
# Commands
#--------------------------------------------------------------------------------


# [PHP Code Beautifier]
# command.name.4.$(file.patterns.php)=PHP Code Beautifier
# command.subsystem.4.$(file.patterns.php)=0
# phpcb.args=--space-after-if --optimize-eol --space-after-switch --space-after-while --space-before-start-angle-bracket --space-after-end-angle-bracket --extra-padding-for-case-statement --one-true-brace-function-declaration --align-equal-statements --force-large-php-code-tag --glue-amperscore --change-shell-comment-to-double-slashes-comment --indent-with-tab --force-large-php-code-tag --force-true-false-null-contant-lowercase --comment-rendering-style PEAR --padding-char-count 1
# command.4.$(file.patterns.php)=$(SciteDefaultHome)/lang/php/phpcb.exe $(phpcb.args) "$(FilePath)"
# command.is.filter.4.$(file.patterns.php)=1
# command.replace.selection.4.$(file.patterns.php)=2
# command.quiet.4.$(file.patterns.php)=1
# command.shortcut.4.$(file.patterns.php)=Ctrl+F11
# command.save.before.4.$(file.patterns.php)=1


# inserire LESS compiler
command.name.21.$(file.patterns.css)=LESS compile
lessc.args=
command.21.$(file.patterns.css).properties=lessc "$(FileNameExt)"
command.21.$(file.patterns.css)=$(SciteDefaultHome)/lang/css/lessc $(lessc.args) "$(FilePath)"
command.is.filter.21.$(file.patterns.css)=1
command.replace.selection.21.$(file.patterns.css)=2
command.quiet.21.$(file.patterns.css)=1
command.shortcut.21.$(file.patterns.css)=Ctrl+F11
command.save.before.21.$(file.patterns.css)=1

#validatore CSS
# http://www.emacswiki.org/emacs/FlymakeCSS
command.name.22.$(file.patterns.css).properties=CSS validate
command.22.$(file.patterns.css).properties=java -jar "$(SciteDefaultHome)/lang/css/css-validator.jar" "file:$(FilePath)"
