[global]
twb_table_|<div class="table-responsive">\n  <table class="table table-striped  table-bordered table-hover table-condensed">\n    ...\n  </table>\n</div>
twb_popover_|<span  \n  data-toggle="popover" \n  title="Popover title" \n  onclick="$(this).popover({html:true});"  \n  data-content="And here`s some amazing content.</br> <a href=#>It`s very engaging.</a> </br> Right? " \n> %s </span>
input_file_|<input type="file" accept=".someext,image/*">
li_|<li>\|</li>
include_js_|js_
twb3_grid_|<div class="container">     \n    <div class="row">\n            <div class="col-md-8">\n                test content\n            </div>\n            <div class="col-md-4">\n                test content\n            </div>\n    </div>\n</div>\n 
<!|html_comment_
javascript_|js_
twb_btn_dropdowns_|<!-- v2.2.2 -->\n<div class="input-append">\n  <input class="span2" id="appendedDropdownButton" type="text">\n  <div class="btn-group">\n    <button class="btn dropdown-toggle" data-toggle="dropdown">\n      Action\n      <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n      ...\n    </ul>\n  </div>\n</div>
table_|\|<table id="" border="0" cellpadding="0" cellspacing="0" class="table table-condensed">\n    <caption>Caption</caption>\n    <thead>\n        <tr>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n        </tr>\n    </thead>    \n    <tbody>\n        <tr>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n        </tr>\n    </tbody>\n</table>
img_|<img src="/img/\|" border="0" alt="" onerror="this.src='/img/NA.png'"/>
h2_|<h2>\|</h2>
twb_button_|<!--\nbtn-large   btn-small   btn-mini\n\nbtn-primary  \nbtn-info   \t\nbtn-success \nbtn-warning\t \nbtn-danger\t \nbtn-inverse\t \nbtn-link\t\n\nbtn-block   disabled \n-->\n<button type="button" class="btn btn-primary btn-small">txt</button>
select_|<select name="">\n  <option value="">Value 1</option> \n</select>
nb_|&nbsp;
html_comment_|htmlcomment_
hc_|html_comment_
for_|for($i=0;$i<count($a);$i++){\|}
center_|text-align:center; vertical-align: middle;\n\n.center_2 {\n   width: 300px;\n   height: 300px;\n   position: absolute;\n   left: 50%;\n   top: 50%;\n   margin-left: -150px;\n   margin-top: -150px;\n}
qunit_equal_|equal( func(), true, "testname" );
sql_select_|SELECT \nFROM       \nWHERE\nORDER BY
//--|//------------------------------------------------------------------------------
docstr_|docstring_
jq_onclick_|$("a").click(function(ev) {\n    ev.preventDefault();    \n});
margin_|margin:4px auto\|;
twb_icon_|<i class="icon-print"></i>
checkbox_|<input type="checkbox" name="" value="" />
h1_|<h1>\|</h1>
fontfamily_|font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
else_|else {\n}
ul_|<ul>\|</ul>
len_|length
fieldset_|<fieldset>\n    <legend>Personalia:</legend>\n\n</fieldset>
radio_|<label for="male">Male</label>\n<input type="radio" name="sex" id="male" value="male" checked="checked" disabled="disabled">
css_font_|<link href="https://fonts.googleapis.com/css?family=Lato:100" rel="stylesheet" type="text/css">\n<style>\nbody {\n  font-weight: 100;\n  font-family: 'Lato';\n}\n</style>
input_numeric_|<input type="number" name="cod_customer" value="" placeholder="" \n  pattern="[0-9.]+" min="0" max="999" step="1"\n  onkeypress='return /[0-9\\.]/.test(String.fromCharCode(event.charCode || event.keyCode))'>
docstring_|\n/**\n * funzione:\n *\n */\n
p_|<p>\|</p>
password_|    <input type="password" id="field" data-indicator="pwindicator">\n        <div id="pwindicator">\n            <div class="bar"></div>\n            <div class="label"></div>\n        </div>\nscript_\n@see https://github.com/devsmt/jquery.pwstrength\n  jQuery(function($) { \n        $('#field').pwstrength(); \n    });
tr_|<tr>\n\t<td>\|\t&nbsp;</td>\n</tr>
twb_col_|<div class="col-lg-6 col-md-6 col-xs-12"> aaa </div>
script_|<script src="\|"></script>
twb_alert_|<div class="alert alert-success" role="alert">\n\n</div>
elseif_| elseif(\|) {\n}\n
css_input_type_text_|input[type="text"]
anchor_|<a href="\|"></a>
submit_|<input type="submit" value="Salva" id="">
twb_form_actions_|<!-- v2.2.2 -->\n<div class="form-actions">\n  <button type="submit" class="btn btn-primary">Save changes</button>\n  <button type="button" class="btn">Cancel</button>\n</div>
html5_progressbar_|<progress max="100" value="80"></progress>\n<style >\n    progress[value] {\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      border: none;\n\n      width: 250px;\n      height: 20px;\n\n      background-color: blue; color: blue;\n    }\n</style>
pre_|<pre>\|</pre>
i_|<i>\|</i>
jqload_|$(function(){\|});
textarea_|<textarea rows="5" cols="80">\|</textarea>
h6_|<h6>\|</h6>
legend_|<fieldset>\n    <legend>description:</legend>\n \n</fieldset>
js_|<script type="text/javascript">\|</script>
small_|<small></small>
patterns_|// Creazionali\n//     pattern_abstract_factory_ //espone al client una interfaccia che genera istanze, evita la necessità di specificare i nomi delle classi concrete\n//     pattern_builder_  //crea un oggetto, occupandosi di ricostruire uno stato complesso e valido e/o dipendenze di istanze numerose\n//     pattern_factory_  //crea istanze configurate appropriatamente per il contesto\n//     pattern_prototype_//clona oggetto esistente anzichè crearlo da vuoto\n//     pattern_singleton_//permette una sola istanza di oggetto\n// Strutturali\n//     pattern_adapter_  //sistemi differenti permettono le stesse operazioni(interfaccia)\n//     pattern_bridge_   //wrappa sistemi differenti esponendo una interfaccia nota\n//     pattern_composite_ //permette operazioni su un gruppo di oggetti come se si trattasse di un singolo ogggetto(espongono interfaccia condivisa)\n//     pattern_decorator_ //wrappa e aumenta le funzionalità di funzione o metodo o oggetto\n//     pattern_facade_    //espone una api semplificata su metodi di base altrimenti complessi/verbosi\n//     pattern_flyweight_ //risparmio memoria mettendo dati comuni (intrinsicState) a un gruppo di oggetti, in un singolo oggetto separato\n//     pattern_proxy_  // lazy loading, permette di memorizzare e riutilizzare il risultato di computazioni o IO\n// Comportamentali\n//     pattern_chain_ pattern_chain_of_responsibility_ //si costruisce una catena di oggetti che gestiscono una richiesta, si passa la richiesta alla catena, la catena si interrompe se un oggetto consuma la richeiesta\n//     pattern_command_  //isolare la porzione di codice che effettua un'azione complessa(Command) dalla classe che ne richiede l'esecuzione\n//     pattern_interpreter_ //\n//     pattern_iterator_ //permette di usare un oggetto come una lista\n//     pattern_mediator_ //le entità coinvolte una iterazione di oggetti, devono fare riferimento solamente al mediatore\n//     pattern_memento_ //l'operazione di estrarre lo stato interno di un oggetto, per poterlo poi ripristinare in un secondo momento\n//     pattern_observer_ // SplObserver_ un Subject notifica gli Observer se il suo stato cambia\n//     pattern_state_ // separa comportamento (a run-time) in funzione dello stato in cui si trova l'oggetto che implementa lo stato e il cambiamento di stato\n//     pattern_strategy_ //isola in un oggetto(intercambiabile) un algoritmo\n//     pattern_template_method_ //definire la struttura di un algoritmo lasciando alle sottoclassi il compito di implementarne alcuni passi\n//     pattern_visitor_ //delega un oggetto che processerà una lista di oggetti\nsolid_
lorem_|Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vel libero risus. Sed pellentesque accumsan ex non feugiat. Nulla pharetra in odio non hendrerit.
mailto_|mailto:?subject=some%20subject&body=some%20very%20long%20body.
foreach_|foreach($a as $k=>$v){\|}
twb_form_horizontal_|<!-- v2.2.2 -->\n<form class="form-horizontal">\n  <div class="control-group">\n    <label class="control-label" for="inputEmail">Email</label>\n    <div class="controls">\n      <input type="text" id="inputEmail" placeholder="Email">\n    </div>\n  </div>\n  <div class="control-group">\n    <label class="control-label" for="inputPassword">Password</label>\n    <div class="controls">\n      <input type="password" id="inputPassword" placeholder="Password">\n    </div>\n  </div>\n  <div class="control-group">\n    <div class="controls">\n      <label class="checkbox">\n        <input type="checkbox"> Remember me\n      </label>\n      <button type="submit" class="btn">Sign in</button>\n    </div>\n  </div>\n</form>
sql_replace_|REPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name,...)] \n    SET col_name={expr | DEFAULT}, ...
input_|// HTML5 type="" tel search url email datetime date month week time datetime-local number range color \n// pattern="^\\d{4}-\\d{3}-\\d{4}$"\n// pattern="[0-9.]+"\n<input type="text" name="\|" value="" placeholder="label" maxlength="255" tabindex="0" required />\n
phpo_|<?=\|?>
htmlcomment_|<!--\nbegin\n-->\|<!--\nend\n-->
b_|<b>\|</b>
sql_insert_|INSERT INTO TABLE_NAME (EMPID, EMPNAME, EMPADDR)\n     VALUES (DEFAULT, :hv_name, :hv_addr)\n-- mysql specific\n  ON DUPLICATE KEY \n    UPDATE EMP_COUNT = EMP_COUNT+1;
td_|<td>\|&nbsp;</td>
autocomplete_|html5_autocomplete_
h5_|<h5>\|</h5>
input_hidden_|<input type="hidden" name="" value="">
caret_|&#9660;
html5_autocomplete_|\n<input id="countryInput"\n       type="text"\n       data-bind="value: selectedCountry"\n       list="countryList" />\n\n<datalist id="countryList" data-bind="foreach: countries">\n    <option data-bind="value: country"></option>\n</datalist>
css_attribute_like_|img[attribute~="value"] { }
if_|if(!empty(\|)){}
div_|<div id="" class="">\|</div>
dief_|die(__FUNCTION__."\|");
option_|<option value="" selected></option>
input_num_|input_numeric_
sql_truncate_|truncate table $table_name
twb_tabs_|<ul class="nav nav-tabs">\n  <li class="active">\n    <a href="#">Home</a>\n  </li>\n  <li><a href="#">...</a></li>\n  <li><a href="#">...</a></li>\n</ul>
twb_form_leftaligned_|<form class="form-inline">\n  <div class="form-group">\n    <label for="exampleInputName2">Name</label>\n    <input type="text" class="form-control" id="exampleInputName2" placeholder="Jane Doe">\n  </div>\n  <div class="form-group">\n    <label for="exampleInputEmail2">Email</label>\n    <input type="email" class="form-control" id="exampleInputEmail2" placeholder="jane.doe@example.com">\n  </div>\n  <button type="submit" class="btn btn-default">Send invitation</button>\n</form>\n\n<!-- twb v2.2.2 -->\n<form class="form-inline">\n  <div class="form-group">\n    <label for="exampleInputName2">Name</label>\n    <input type="text" class="form-control" id="exampleInputName2" placeholder="Jane Doe">\n  </div>\n  <div class="form-group">\n    <label for="exampleInputEmail2">Email</label>\n    <input type="email" class="form-control" id="exampleInputEmail2" placeholder="jane.doe@example.com">\n  </div>\n  <button type="submit" class="btn btn-default">Send invitation</button>\n</form>\n\n
background_|background:#ffffff url('img_tree.png') no-repeat right top;
border_|border: 1px solid #\|;
hr_|<hr style="" />
comment_|html_comment_
ajax_spinner_|//adds an ajax spinngin indicator\nhttps://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js\n\nvar opts = {\n  lines: 13 // The number of lines to draw\n, length: 28 // The length of each line\n, width: 8 // The line thickness\n, radius: 42 // The radius of the inner circle\n, scale: 1 // Scales overall size of the spinner\n, corners: 1 // Corner roundness (0..1)\n, color: '#000' // #rgb or #rrggbb or array of colors\n, opacity: 0.25 // Opacity of the lines\n, rotate: 21 // The rotation offset\n, direction: 1 // 1: clockwise, -1: counterclockwise\n, speed: 0.9 // Rounds per second\n, trail: 19 // Afterglow percentage\n, fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n, zIndex: 2e9 // The z-index (defaults to 2000000000)\n, className: 'spinner' // The CSS class to assign to the spinner\n, top: '50%' // Top position relative to parent\n, left: '50%' // Left position relative to parent\n, shadow: false // Whether to render a shadow\n, hwaccel: false // Whether to use hardware acceleration\n, position: 'absolute' // Element positioning\n}\nvar target = document.getElementById('foo')\nvar spinner = new Spinner(opts).spin(target);
css_mp0_|margin:0; padding:0;
bs_|&nbsp;
twb_panel_|<div class="panel panel-primary _panel-success _panel-info _panel-warning _panel-danger ">\n  <div class="panel-heading">\n    <h3 class="panel-title">\n        Panel title\n    </h3>\n  </div>\n  <div class="panel-body">\n    Panel content\n  </div>\n</div>\n\n \n
h4_|<h4>\|</h4>
twb_grid_|<div class="container-fluid">\n  twb_row_\n</div>
css_|<link rel="stylesheet" href="\|">
solid_|Single responsibility: class should have one, and only one, function. do one thing well.\nOpen–closed: should be possible to extend the behavior of a class without modifying it.\nLiskov substitution: subclasses should be substitutable for their superclasses. \nInterface segregation: many small specific interfaces instead of one general-purpose interface. Client should not be forced to use a interface if it does not need.\nDependency inversion: do not create new objects in clients, inject or use factories. High level modules should not depend on low level modules but should depend on abstraction.
jq_|<script src="http://code.jquery.com/jquery-latest.min.js" ></script>
window_open_|var w_opt = "top=10, left=10, width=250, height=200, status=no, menubar=no, toolbar=no scrollbars=no";\nvar url = '';\nvar w_ = window.open(url, '', w_opt);\n// w_.document.write("<html>\\n");\n// w_.document.write("<div align=center> Popup </div>\\n");\n// w_.document.write("</html>");
span_|<span class="">\|</span>
pattern_chain_of_responsibility_|pattern_chain_
sql_update_|UPDATE EMPLOYEE\n     SET JOB=NULL, SALARY=0, BONUS=0, COMM=0\n     WHERE WORKDEPT = 'E21' AND JOB <> 'MANAGER'
html_progress_|<progress id="" max="100" value="90"></progress>
twb_form_inline_|<!-- v2.2.2 -->\n<form class="form-inline">\n  <input type="text" class="input-small" placeholder="Email">\n  <input type="password" class="input-small" placeholder="Password">\n  <label class="checkbox">\n    <input type="checkbox"> Remember me\n  </label>\n  <button type="submit" class="btn">Sign in</button>\n</form>
new_|$1 $2 = new $1(\|);
getById_|document.getElementById('username').value
pattern_|patterns_
form_|<form method="post" action="<?=$_SERVER['PHP_SELF']?>" enctype="multipart/form-data" id="form_1">\|\t<input type="submit" value="Salva" id="">\n        <input type="button" value="Reset" id="form_reset"/>\n</form>\n<script>\n$(function(){\n   function is_valid(){\n                // @see ts_utils validation\n                var is_valid = true;\n                var a_sel = [ '#num_from' , '#num_to' ];\n                for( var i=0; i<a_sel.length; i++) {\n                    var selector = a_sel[i];\n                    var el = $(selector);\n                    var is_ok = SimpleValidation.isNumeric( el.val() ) ;\n                    if( !is_ok ){\n                        is_valid = false;\n                        SimpleValidation.errorReport( el, false);\n                        break;\n                    }\n                }\n                return is_valid;\n    }\n    $('#form_1').submit(function(event) {\n\t\tif( !is_valid() ) {\n                    event.preventDefault();\n                    return false;\n                } else\n                    return true;\n    });\n    $('#form_1 #form_reset').click(function(){\n        var f = $(this).parents('form');\n        f.find('input:text, input:password, input:file, select, textarea').val('');\n        f.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');\n    });\n});\n</script>
br_|<br />
label_|<label for="male">Male</label>\n  <input type="radio" name="sex" id="male" />\n  <br />
h3_|<h3>\|</h3>
icon_|<i class="fa fa-fw">\|</i>
style_|<style type="text/css">\|</style>
th_|<th>\|</th>
anchorjs_|<a href="javascript:void(0);" onclick="myfunc();return false"></a>
html_|<!DOCTYPE html>\n<head></head>\n<body>\n\n\n\|</body>\n</html>
php_|<?php\n
input_number_|inut_numeric_
twb_row_|    <div class="container-fluid">\n      <div class="row-fluid">\n\t<div class="span3">\n        </div>\n      </div>\n    </div>
include_css_|css_ style_
[c++]
[sqr]
[nsis2]
[markdown]
pre_|`monospace`
img_|image_
i_|*italic*
image_|![screenshot](img/mappa_applicativa.png)
h6_|###### Text {#el_id .pbb }
b_|**bold**
link_|[link](http://www.lampa.it)
code_|<code>\n</code>
anchor_|link_
[asp]
[latex]
[cfscript]
[factor]
[m4]
[batch]
[assembly-mcs51]
[vrml2]
[groovy]
[relax-ng-compact]
[icon]
[velocity]
[patch]
[beanshell]
[pl1]
[pyrex]
[fortran90]
[inno-setup]
[inform]
[netrexx]
[eiffel]
[fortran]
[chill]
[pl-sql9]
[json]
[macroscheduler]
[smalltalk]
[mustache-template]
[idl]
[haxe]
[smarty]
[pvwave]
[ada95]
[pl-sql]
[vala]
[htaccess]
[apacheconf]
[clojure]
[io]
[pure]
[sbt]
[properties]
[metapost]
[rhtml]
[powerdynamo]
[vhdl]
[logs]
[maple]
[lotos]
[java module-info]
[django]
[PowerCenter Parameter File]
[php]
tempname_|$file_path = tempnam(sys_get_temp_dir(), $prefix='X');
substr_|substr($s\|,0,2);\n\n// str = grp.0001-0002-0004\n$strip_str = substr($str, $i_pos=1+strpos($str, ".") );\n// rturn 0001-0002-0004\n\n
str_pos_|strpos($str, $substr\| ) !== false
array_walk_|array_walk($data, function(&$v, $k, $param) { \n    $v = $k . $param . $v; \n}, 'myparam');
validate_|filter_var_
staticp_|//\npublic static function \|() {\t\t\n    return ; \n}
assert_s_|assert_char_
_any_|// true if any values in the collection pass the truth test (iterator).\n$is_any =__::any( [1, 2, 3, 4], function($num) { return $num === 5; }); // false
xml_|$dom = new \\DOMDocument();\n$dom->preserveWhiteSpace = false;\n$dom->load($this->xml_file);\n$xpath = new \\DOMXpath($dom);\n$node_list = $xpath->query('//NodeType[@attr=val]');
trim_|$str=trim($str, $charlist='.,');
mkdir_|true === mkdir('/path', 0755);
select_a_|$select_val  = 'M1';\n$select_name = 'i_cdlis';\n$a_options = ['M1' => 'M1', 'S0' => 'S0'];\n$_build_select = function($a_options, $select_val, $select_name ){\n    $a_options = array_map(function($k, $v) use($select_val) {\n        return sprintf('<option value="%s" %s>%s</option>', $v, ($select_val == $v ? 'selected':''), $k);\n    } , array_keys($a_options), array_values($a_options) );\n    $html_options = implode("\\n", $a_options );\n    $html_select = sprintf('<select name="%s" style="width:50px;">%s</select>', $select_name, $html_options);\n    return $html_select;\n};\necho $_build_select($a_options, $select_val, $select_name );
filter_html_|$html = filter_var($html, FILTER_SANITIZE_SPECIAL_CHARS);//escape, not removes, bad html
pluck_|__::pluck($a, $k);
is_str_|ctype_graph($s) || ctype_space($s)
__MAIN__|// if colled directly, run the tests:\nif (basename($argv[0]) == basename(__FILE__)) {\n    include substr(__FILE__, 0, -4) . 'Test.php';\n}
round_|round($f, 2);
filterstr_|$v = preg_replace('/[^0-9A-Za-z_ ]/', '', substr(trim($v), 0, 6) );
reset_|<input type="reset" />
_all_|// true if all values test()\n__::all([1, 2, 3, 4], function($num) { return $num < 5; }); // true
table_a_|\n// genera tabella\n$a_rs = __RS__;\n$html_table = '';\nif( !empty($a_rs) ) {\n    // data mappings\n    $data = array_map(function($a_row) {\n        return [\n            'Nome Campo' => $a_row['field'],\n        ];\n    }, $a_rs);\n    $first_index = current(array_keys($data));\n\n    $tmpl = '<table class="table table-condensed table-bordered table-striped" id="table_1">\n                <thead>%s</thead>\n                <tbody>%s</tbody>\n            </table>';\n    $html_table = sprintf($tmpl,\n        // genera head\n        $s_tr_th = sprintf('<tr>%s</tr>',\n            implode('',\n                array_map(function($v) {\n                    return sprintf("<th>%s</th>", $v);\n            } , $a_cols=array_keys($data[$first_index]) ) )\n        ),\n\n        // genera tr\n        $s_tr_mov = implode('',\n            $a_tr = array_map(function($a_row) {\n                return sprintf('<tr>%s</tr>', \n                    $s_td = implode('', array_map(function($v) {\n                            $contains_euro = strpos($v, '&euro;' ) !== false;\n                            $css = is_numeric($v) || $contains_euro ? 'numeric' : '';\n                            return sprintf('<td class="%s">%s</td>', $css, $v );                        \n                    }, $a_row) ) \n                );\n            }, $data)\n        )\n    );\n    $html_table .= <<<__END__\n            <link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css">\n            <script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>\n            <script >\n            $(document).ready(function(){\n                $('#table_1').DataTable({\n                    "paging":     true,\n                    "ordering":   false,\n                    "info":       false,\n                    "scrollY":    500,\n                    "scrollX":    false,\n                    "pagingType": "full_numbers",\n                    "lengthMenu": [10,20,50,100],\n                    "pageLength": 50\n                });\n            });\n            </script>\n__END__;\n\n\n} else {\n    $html_table = $V->alert('nessun record trovato per i parametri selezionati');\n}\n
sort_|ksort($a);//  for keys!\nasort($a, SORT_STRING);// &$a;  sort values! returns bool\n// uasort  Sort an array with a user-defined comparison function and maintain index association\nuasort( &$a, function($a, $b) {\n    if ($a == $b) {\n        return 0;\n    }\n    return ($a < $b) ? -1 : 1;\n});
cli_|php_cli_
htmlentities_|//ENT_COMPAT     Converte gli apici doppi e lascia inalterati gli apici singoli.\n//ENT_QUOTES     Converte sia gli apici doppi sia gli apici singoli.\n//ENT_NOQUOTES   Lascia entrambi i tipi di apici inalterati.\n$html = htmlentities($v, ENT_QUOTES, 'UTF-8');
date_diff_|date_add_
chart_pie_|include ("../../jpgraph/jpgraph.php");\ninclude ("../../jpgraph/jpgraph_pie.php");\n$data = [12, 15, 23, 18, 5];\n// Create the Pie Graph.\n$piechart = new PieGraph(300,350);\n// Set a title for the plot\n$piechart->title->Set("Sample Pie Chart");\n$piechart->title->SetFont(FF_VERDANA,FS_BOLD,12);\n$piechart->title->SetColor("darkblue");\n$piechart->legend->Pos(0.1,0.2);\n// Create pie plot\n$pPlot = new PiePlot($data);\n$pPlot->SetCenter(0.5,0.55);\n$pPlot->SetSize(0.3);\n// Setup the labels\n$pPlot->SetLabelType(PIE_VALUE_PER);\n$pPlot->value->Show();\n$pPlot->value->SetFont(FF_ARIAL,FS_NORMAL,9);\n$pPlot->value->SetFormat('%2.1f%%');\n// Add and stroke\n$piechart->Add($pPlot);
preg_quote_|$reg = preg_quote($reg, '/');
dba_|$id = dba_open("/tmp/test.db", "n", "db2");\nif (!$id) {\n    die( "dba_open failed\\n" );\n}\ndba_replace("key", "This is an example!", $id);\nif (dba_exists("key", $id)) {\n    echo dba_fetch("key", $id);\n    dba_delete("key", $id);\n}\n// read all the keys to read all the db\n$key = dba_firstkey($id);\nwhile ($key != false) {\n    $a_keys[] = $key;\n    $key = dba_nextkey($id);\n}\ndba_close($id);
version_|version_compare_
memory_get_peak_usage_|round(memory_get_peak_usage() / (1024 * 1024), 2) . 'MB',
except_|$msg = sprintf('Errore %s', );\nthrow new Exception($msg);
js_comment_|/* \| */
hh_array_|array<User> $users
str_repeat_|str_repeat('tmpl',5)
bc_|bcscale(4);// setta il default scale, va settato prima delle chiamate\n$a = '1.234';\n$b = '5';\necho bcadd($a, $b);     // 6\necho bcadd($a, $b, 4);  // 6.2340\necho bcsub($a, $b);     // -3\necho bcsub($a, $b, 4);  // -3.7660\necho bcmul('1.34747474747', '35', 3); // 47.161\necho bcmul('2', '4'); // 8\necho bcdiv('105', '6.55957', 3);  // 16.007\n// compare ==\n// Returns 0 if the two operands are equal, 1 if the left_operand is larger than the right_operand, -1 otherwise.\necho bccomp('1', '2') . "\\n";   // -1\necho bccomp('1.00001', '1', 3); // 0, EQUAL\necho bccomp('1.00001', '1', 5); // 1, first operand is bigger\n\n// bcmod bcpow bcsqrt\n\n\n\n
zf_forward_|// $this->_helper->flashMessenger->addMessage('confirm msg');\nreturn $this->_forward($action="index");
global_|$GLOBALS[''] = '';
zf_alert_|$this->alert($msg, 'error');
pattern_factory_|class ObjFactory {\n    public static function create($p1, $p2) {\n        return new Obj($p1, $p2);\n    }\n}\n
destruct_|function __destruct() {\n  // cleanup your DB, disk or RAM cache\n}
apc_delete_|apc_delete($key);\n\n// delete all by regexp on key\n$a_cache = apc_cache_info('user', false);\n$a_cache_keys = $a_cache['cache_list'];\nforeach ($a_cache_keys as $a_entry ) {\n    $key = $a_entry['key'];\n    $key_is_matching_DAO = preg_match('/^'.$DAO.'/i', $key  ) > 0;\n\n    if( $key_is_matching_DAO ) {\n        // echo " $key is deletable <br />";\n        apc_delete( $key );\n    }\n}
hidden_|<input name="" value="" type="hidden">
switch_|switch($\|){\n  case 0:\n  break;\n  default:\n  break;\n}
date_past_|$time_ago = strtotime('-3 months');
SplFixedArray_|$array = new SplFixedArray(5); //  fixed length of 5\n$array[1] = 2;\n// Increase the size of the array to 10\n$array->setSize(10);
twb3_form_|<form class="form-inline">\n                <input type="text" class="form-control" placeholder="Email" style="width: 200px;"> <input type="password" class="form-control" placeholder="Password" style="width: 200px;">\n                <div class="checkbox">\n                    <label> <input type="checkbox">Remember me</label>\n                </div>\n                <button type="submit" class="btn btn-default">Sign in</button>\n</form>
contruct_|function __construct() {\n    parent::__construct();\n    \|\n}
zf_route_|$router->addRoute('route_name',\n    new Zend_Controller_Router_Route(\n        'user/:username',\n        [\n            'controller' => 'user',\n            'action'     => 'info',\n        ]\n    )\n);
trace_|echo '<pre>',var_dump( debug_backtrace() ),'</pre>'; // DEBUG\ndie(__FUNCTION__.__FILE__);
publics_|staticp_
var_dump_|var_
exec_find_|// elimina files di log grandi e troppo vecchi per essere di interesse\n            $log_regex = APPLICATION_PATH.'/../var/logs/AS400-CLI-*.log';\n            $s_result = `sudo find $log_regex -maxdepth 2 -type f -mtime +60 -exec rm -f {} \\;`;
qry_|$a_tbl = qry_a_a(\|$sql, __LINE__, __FILE__);
axa_controller_|class UploaderController extends ActionController {\n    public function ActionIndex() {\n        return $html='ok';;\n    }\n}\n$c = new UploaderController();\necho $c->run();
methods_|echo '<pre>';\necho implode( "\\n", get_class_methods(\|));\ndie(__FILE__.' '.__FUNCTION__);
__destruct_|function __destruct() {\n\|\n}
button_|<button onclick="myFunction()">Click me</button>
file_|file_put_contents($path\|,$str);
return_|return\| true;
array_slice_|array_slice($a, $pos, $len);
array_pad_|$a = array_pad($a_input, 20, '0' );
json_decode_|$a = json_decode($json_str, $use_assoc=true);
zf_redirect_|$url = $this->view->url(['controller'=>'items','action'=>''], $r_name='default');\nreturn $this->_redirect($url);\n
die_|die(__FUNCTION__.'/'.__LINE__.'ok'\|);
chmod_|chmod('/somedir/somefile', 0755);// use octal val
array_key_exists_|array_key_exists($key, $a\|)
test_|function ok($res, $expected, $label='' ) {\n    $colored = function($str, $foreground_color = 'green' ) {\n        static $a_fg = [ 'red' => '0;31', 'green' => '0;32' ];\n        return sprintf("\\e[%sm", $a_fg[$foreground_color] ) . $str . "\\033[0m";\n    };\n    if( $res === $expected ) {\n        echo $colored( "ok $label \\n", 'green' );\n    } elseif( $res == $expected ) {\n        echo $colored( "ok (but type differ) $label \\n", 'green' );\n    } else {\n        $s = sprintf("ERROR(%s)    GOT<>EXP  %s<>%s \\n", $label, json_encode($res), json_encode($expected) );\n        echo $colored($s, 'red');\n    }\n}\n// function is($res, $label ) { return ok($res, $expected=true, $label ); }\n
map_|array_map_
exception_|spl_
_empty_|_.isEmpty(obj)
ksort_|ksort($a);//in-place sort!
protected_|protected function \|(){}
const_|const CONSTANT = 'str';
ini_get_|$v = ini_get('display_errors');
is_callable_|is_callable([$obj, 'method_name'], false);
version_compare_|// PHP version test\nif (PHP_VERSION_ID >= 70000) {\n  // v.7 code\n}\n// alternative\n//if( version_compare(PHP_VERSION, '7.0', '>=') ) {\n//    // v7 code\n//}\n
str_pad_|str_pad($s, 5, '_', STR_PAD_LEFT);
zf_h_select_|zf_h_select_multi_
array_map_|$a_mapped_values = array_map(function($val) {\n    return trim($val);\n}, $a_initial );
apc_store_|cache_
array_filter_assoc_|$a_data = array_filter($a_data, function($v, $k) {\n    return $k == 'b' || $v == 4;\n}, ARRAY_FILTER_USE_BOTH);
zf_url_|$url_ = $this->url($par=['username' => 'aa'], $r_name='default');
instanceof_|if( !($var instanceof ParentClass) ){ }
set_exception_handler_|if( ENV::isPROD() ) {\n    \n    $prev_handler = set_exception_handler(['Bootstrap', '_ExcpLoggerMail']);\n    // es. err handler\n    function exp_hndl_test(Exception $e){  }\n}
zf_h_checkbox_|$this->formCheckbox('opt_in', 'yes', null, ['yes', 'no'] )
if_|if( empty(\|) ) {\n    // do init\n}
zip_|$zip = new \\ZipArchive();\n$file_path = sprintf("/zip/test_%s.zip", date('Ymd_His') );\nif ( $zip->open($file_path, \\ZipArchive::CREATE) !== true ) {\n    $msg = sprintf('Errore: impossibile aprire %s ', $zip_path );\n    throw new Exception($msg);\n}\n$zip->addFromString("testfile.txt" . time(), "#1 This is a test string added as testfilephp.txt.\\n");\n$zip->addFile($target_file_path, "/testfromfile.php");\n$zip->close();
execute_|  public function executeSpese(sfWebRequest $request)\n  {\n\treturn $this->renderText('da implementare');\n  }
coalesce_|$w = $x ?? $y ?? $z;\n\nfunction coalesce() {\n    $args = func_get_args();\n    foreach ($args as $arg) {\n        if (!empty($arg)) {\n            return $arg;\n        }\n    }\n    return null;\n}\n
assert_|if( !is_numeric($n) ) {\n    throw new Exception("VARNAME deve essere in formato numerico, '$n' ricevuto");\n}
mysql_fetch_array_|while($a_ = mysql_fetch_assoc($rs) ){\n}
date_add_|$date_str = sprintf('2010-09-17');\n$date = new DateTime($date_str);\n$date_period_str = sptintf('P%sD', $i=1); // 'P1D': P1D=Period of 1 day(Y/M/W/D/H/S)\n$date->add(new DateInterval($date_period_str));  \n$str_date = $date->format('Y-m-d');
include_|require_
zf_h_e_|zf_h_escape_
PDO_|class DbAuto_Connection {\n    protected static $db = null;\n    protected static function getConnection() {\n        $registry = Zend_Registry::getInstance();\n        $C = $registry->config->dbauto;\n        try {\n            if (self::$db == null) {\n                self::$db = new PDO(\n                    sprintf('mysql:host=%s;dbname=%', $C->host, $C->dbname ),\n                    $C->username,\n                    $C->password\n                );\n                self::$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n            }\n        } catch (PDOException $e) {\n            echo "DB2 PDO error '".$e->getMessage()."'";\n        }\n    }\n    // permette di lanciare una query diretta sul db, ritorna array records\n    //   SQL: WHERE calories < :calories AND colour = :colour\n    //   $params = [':calories' => $calories, ':colour' => $colour ]\n    public static function query($sql, $params=[] ) {\n        $data = [];\n        self::getConnection();\n        if (self::$db) {\n            $stmt = self::$db->prepare($sql);\n            $res = $stmt->execute( $params );\n            if ($res) {\n                while ($oRow = $stmt->fetch(PDO::FETCH_ASSOC)) {\n                    $data[] = $oRow;\n                }\n            }\n            $stmt->closeCursor();\n        } else {\n            die(__FUNCTION__.' errore connessione mysql');\n        }\n        return $data;\n    }\n}
min_|$i_min = min([0,$x]);
zf_config_|Zend_Registry::get('config')->company->email->support;
Object_|stdClass
constants_|echo '<pre>',var_dump( get_defined_constants(true) ),'</pre>'; // DEBUG\ndie(__FILE__.''.__FUNCTION__);
file_size_|// in bytes, or FALSE\n$bytes = filesize($path);\nfunction human_filesize($bytes, $decimals = 2) {\n  $a_sz = [0=>'B',0=>'K',2=>'M',3=>'G',4=>'T',5=>'P'];\n  $factor = floor((strlen($bytes) - 1) / 3);//quale potenza di 1000\n  $n = $bytes / pow(1024, $factor);\n  return sprintf("%s %s", \n      round($n, $decimals),\n      $a_sz[$factor]\n  );\n}
array_pluck_|pluck_
array_|$\|=[];
filter_var_|filter_
s_|$s_ = '';
math_|bc_
_memoize_|$fibonacci = function($n) use (&$fibonacci) {\n  return $n < 2 ? $n : $fibonacci($n - 1) + $fibonacci($n - 2);\n};\n$fastFibonacci = __::memoize($fibonacci);
date_time_|$d_ = new DateTime('2016-11-20');
require_|require_once __DIR__.'/\|';
array_find_|_find_
file_get_a_|// ottiene contenuto del file in array di righe da processare in successione\n$a_file_lines = file($file_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$process_line = function($line){ return $line; };\nforeach ($a_file_lines as $i => $line) {\n     $a_file_lines[$i] = process_line($line);\n}\n$s_result = implode("\\n", $a_file_lines );\n\n
zf_env_|// 'DEVELOPMENT'|'PRODUCTION' == strtoupper(APPLICATION_ENV)\nBootstrap::isEnvProd() ||  Bootstrap::isEnvDev()
nbsp_|&nbsp;
out_|echo htmlspecialchars($s, ENT_QUOTES);
sql_replace_|REPLACE [LOW_PRIORITY | DELAYED] INTO $tbl_name SET col_name=$val
printf_|pf_
zf_mail_|$mail = new Zend_Mail();\n$mail->setFrom(Zend_Registry::get('config')->email->support);\n$mail->addTo($form->getValue('email'));\n$mail->setSubject("subject");\n// Retrieve the e-mail message text\ninclude "_email_template.phtml";\n$mail->setBodyText($email);\n$mail->send();
sp_|sprintf_
__get_|public function __call($name, $arguments) {\n    // Note: value of $name is case sensitive.\n    echo "Calling object method '$name' " . print_r( $arguments, 1). "\\n";\n}
filesize_|file_size_
spl_autoload_register_|        //\n        // @see PSR-4 autoload reference implementation\n        //\n        // new \\Foo\\Bar\\Baz\\Qux;\n        // \\Foo\\Bar\\Baz\\Qux class => /path/to/project/src/Baz/Qux.php:\n        //\n        spl_autoload_register(function ($pClassName) {\n            // project-specific namespace prefix\n            $prefix = '';//'Mobile';// Foo\\\\Bar\\\\\n            // base directory for the namespace prefix\n            $base_dir = __DIR__.'/'; // . '/src/';\n            // does the class use the namespace prefix?\n            $len = strlen($prefix);\n            if (strncmp($prefix, $pClassName, $len) !== 0) {\n                // DBG echo " autoloading NS prefix: $pClassName \\n";\n                // no, move to the next registered autoloader\n                return;\n            }\n            // get the relative class name\n            $relative_class = substr($pClassName, $len);\n            // replace the namespace prefix with the base directory, replace namespace\n            // separators with directory separators in the relative class name, append\n            // with .php\n            $file = $base_dir . str_replace('\\\\', '/', $relative_class) . '.php';\n            if (file_exists($file)) {\n                // echo "LOADING: $file\\n"; // DBG\n                require $file;\n            } else {\n                // DBG\n                die( " autoloading KO: $file\\n" );\n            }\n        });
_max_|$a_recs =array(  array( 'age'=>60 )  );\n$max = __::max($a_recs, function($rec) { return $rec['age']; });
filter_char_|filterstr_
parseInt_|intval($v)
var_export_|$str = var_export($data, true);
case_|case \|:\nbreak;
readfile_|$file_path = APP_PATH.'/web/images/image.jpg';\n$type = 'image/jpeg';\nheader('Content-Type:'.$type);\nheader('Content-Length: '.filesize($file_path) );\nreadfile($file_path);\nexit();\n
request_is_ajax_|$is_ajax_request = isset($_SERVER['HTTP_X_REQUESTED_WITH']);
foreach_|foreach($a_ as $k => $v) {\n\|}
assert_char_|if( !ctype_alnum($s) || 8 >= strlen($s) ) {\n    throw new Exception("VARNAME deve essere in formato stringa, '$s' ricevuto ");\n}
use_|use My\\Full\\Classname as Another;\n// this is the same as use My\\Full\\NSname as NSname\nuse My\\Full\\NSname;\n// importing a global class\nuse ArrayObject;
location_|header('Location: http://www.test.it/');\n// $logger->info('reason');\ndie('redirect');
<<<|$\| = <<<__END__\n__END__;
_pluck_|$a_names = __::pluck($a_recs, $k='name');
hh_cb_|function f(  (function(int, string): string) $callback  ) { }\nfunction f(mixed $m, int $i): void { }\n$f = function(string $s): ?int {   };\nfunction f(?string $s):?string {\n  if ($s === null) {\n    return "";\n  }\n  return null;\n}\nfunction f( array<string, mixed> $options ){}\n\n\n\n\n\n\n\n
pthreads_|http://nl1.php.net/manual/en/class.thread.php
fork_|\t    $maxt=5;// thread nun\n            for ($x = 1; $x < $maxt; $x++) {\n                switch ($pid = pcntl_fork()) {\n                case -1:\n                    die('could not fork');\n                    break;\n                case 0:\n                    // run child\n                    $local_pid = posix_getpid();\n                    //echo $local_pid;\n                    io_detach();\n\n                    $cl_generator();\n                    echo "Child ".posix_getpid()." completed\\n";\n                    register_shutdown_function(function () {\n                            echo "Child ".posix_getpid()." SIGHUP \\n";\n                            posix_kill(posix_getpid(), SIGHUP);\n                    } );\n                    break;\n                default:\n                    // parent\n                    $local_pid = posix_getpid();\n                    echo "parent($local_pid) waiting child pid($pid): \\n";\n                    pcntl_waitpid($pid, $status);\n                    break;\n                }\n            }\n            // control all child processes gets completed\n            while (pcntl_waitpid(0, $status) != -1) {\n                $status = pcntl_wexitstatus($status);\n                echo "Child $status completed\\n";\n            }
filter_alpha_|filterstr_
zf_user_|$user = Zend_Auth::getInstance()->getIdentity();
jq_main_|$(function(){\n});
list_|list($a, $b) = ['a','b'];
class_|// funzione:\nclass \|{\n    public function __construct(){}\n    public function method(){}\n    public function __toString(){ return __CLASS__; }\n}
chart_bar_|include ("../../jpgraph/jpgraph.php");\ninclude ("../../jpgraph/jpgraph_bar.php");\ninclude ("../../jpgraph/jpgraph_line.php");\n// We need some data\n$datay=[31,44,49,40,24,47,12];\n// Set up the graph\n$graph = new Graph(600,300,"auto");\n$graph->img->SetMargin(60,30,30,40);\n$graph->SetScale("textlin");\n$graph->SetMarginColor("teal");\n$graph->SetShadow();\n// Create the bar pot\n$bplot = new BarPlot($datay);\n$bplot->SetWidth(0.6);\n// Set up color for gradient fill style\n$tcol=[100,100,255];\n$fcol=[255,100,100];\n$bplot->SetFillGradient($fcol,$tcol,GRAD_VERT);\n$bplot->SetFillColor("orange");\n$graph->Add($bplot);\n// Set up the title for the graph\n$graph->title->Set("Sample Bargraph");\n$graph->title->SetColor("yellow");\n$graph->title->SetFont(FF_VERDANA,FS_BOLD,12);\n// Set up color for axis and labels\n$graph->xaxis->SetColor("black","white");\n$graph->yaxis->SetColor("black","white");\n// Set up font for axis\n$graph->xaxis->SetFont(FF_VERDANA,FS_NORMAL,10);\n$graph->yaxis->SetFont(FF_VERDANA,FS_NORMAL,10);\n$graph->yaxis->title->Set("Value Range");\n$graph->yaxis->title->SetColor("white");\n$graph->yaxis->title->SetFont(FF_VERDANA,FS_NORMAL,10);\n// Set up X-axis title (color & font)\n$graph->xaxis->title->Set("item Count");\n$graph->xaxis->title->SetColor("white");\n$graph->xaxis->title->SetFont(FF_VERDANA,FS_NORMAL,10);\n// Finally send the graph to the browser\n$graph->Stroke();
private_|//\nprivate function \|(){ return true; }
rand_array_|$rand_X = function() {\n    $a = [\n      'Tergi', 'Pulizia',\n      // ... string array\n    ];\n    $i = count($a)-1;\n    return $a[ rand(0,$i) ];\n};\n$s = $rand_X();\n
str_reg_|if ( preg_match('/1999/', $s) ) {\n    // ok\n}
zf_render_view_|// Render 'foo' instead of current action script\n        $this->_helper->viewRenderer('index');
namespace_|namespace PrjName {\n    use Exception;\n}\nnamespace {\n// global code\n}
__reject_|$a_ = __::reject($a_=[1,2,3], function($n) {\n  return $n % 2 === 0; \n});\n
sleep_|sleep(10);// seconds
sscanf_|$iso_date = '2000-07-30';\nlist($year, $month, $day) = sscanf($iso_date, '%d-%d-%d');\n
isset_|if( !isset(\|)){\n}
hh_|<?hh // strict
hash_sort_|// Sort the multidimensional array\nusort($a_list, function ($rec, $next_rec) {\n        $k = 'column_key';  \n\treturn $rec[$k] > $next_rec[$k];\n});\n     \n
file_rm_|unlink($filename);
in_array_|in_array( $str, $a_ )
strip_tags_|$txt = strip_tags($txt, $allowed='<p><a>');
while_|while($a=mysql_fetch_array($rs)){\|}
_reduce_|$final_v = __::reduce( [1, 2, 3], function($carry_v, $cur_v) { return $carry_v + $cur_v; }, $initial_v=0);
zf_get_view_|$view = Zend_Layout::getMvcInstance()->getView();
dirname_|dirname(__FILE__).'/lib.php'
zf_cache_|zf_cache_get_
str_contains_|str_pos_
__map_|__::map(['one'=>1], function($v, $k) {\n  return $v * 3;\n});
enum_|class Month extends SplEnum {\n    const __default = self::January;\n    \n    const January = 1;\n    const February = 2;\n    const March = 3;\n    const April = 4;\n    const May = 5;\n    const June = 6;\n    const July = 7;\n    const August = 8;\n    const September = 9;\n    const October = 10;\n    const November = 11;\n    const December = 12;\n}\n\necho new Month(Month::June) . PHP_EOL;\n\ntry {\n    new Month(13);\n} catch (UnexpectedValueException $uve) {\n    echo $uve->getMessage() . PHP_EOL;\n}
error_|set_error_handler_\nerror_reporting_\nset_exception_handler_
preg_replace_|$reg_char = '\\,\\;\\-\\+\\*\\/\\(\\)\\[\\]\\:\\.\\!\\?#= ';\n$str = preg_replace('/[^a-zA-Z0-9_]/', '', $str);\n$str = preg_replace("/[[:blank:]]+/", ' ', $str );
explode_|explode( ',', $s\|);
zf_route_regex_|$router->addRoute('fornitori_genlabel', new Zend_Controller_Router_Route_Regex(\n        'fornitori/genlabel/Etichette_federe_(\\d+)_(\\d+)\\.pdf',\n        [\n            'controller' => 'Fornitori',\n            'action' => 'genlabel'\n        ],\n        $mappings=[\n            1 => 'ord_num'  ,\n            2 => 'ord_date' ,\n        ],\n        'fornitori/genlabel/Etichette_federe_%d_%d.pdf'\n));
construct_|public function __construct(){\n   parent::__construct();\n\|}
for_|$c=count($a);\nfor( $i=0; $i < $c; $i++) {\|}
mktime_|$timestamp = mktime($hour=date("H"), $minute=date("i"), $second=date("s"), $month=date("n"), $day=date("j"), $year=date("Y") );
system_|exec_
require_once_|require_
pf_|sprintf_
_filter_|$a_data = __::filter([1, 2, 3, 4], function($num) { return $num % 2 === 0; });\n// => [2, 4]
zf_post_|$this->getRequest()->getPost('name\|');
array_fill_|array_fill($i=0, $n=10 , $v='');
define_|define("\|", "", false);
ol_|<ol class="">\n\|</ol>
exec_|$cmd = "ls -la";\n$s_result = trim(`$cmd`);\n// $s_result = trim(shell_exec(sprintf('/usr/bin/ls -la 2>&1',  escapeshellarg($cmdarg) ));\n// return:\n//   returns a line break at the end, use trim()\n//   `1> /dev/null` eliminando stdout si  vede solo l'errore\n//   return NULL if the executed command doesn't output anything, strict comparisons to '' return false\n// trobleshooting:\n//   It is not possible to detect execution failures using this function. exec() should be used\n//   check www-data has rights to files or directories you are accessing\n//   check safemode\n//   check not using an alias \n//   check script is in your path, the error will be logged to error_log\n//   check "memory_limit" php.ini the program memory used is computed for the total\n//   memory-hogging operations use system() instead\n//   - to run in the background, the output must be redirected to a file, or will hang until the execution ends\n//     $_res = exec($cmd . " > /dev/null &", $_output, $_retval);\n//     $pid = exec("nohup $cmd > /dev/null 2>&1 & echo $!", $_output, $_retval);// we can return the pid of the process\n//   `pwd` e chdir() per settare le directory su cui lavorerà lo script, `cd $dir && $cmd`\n//   $r=getenv("REMOTE_ADDR"); putenv('LANG=en_US.UTF-8'); // to share config \n
filter_|$vvv = filter_var($vvv, FILTER_SANITIZE_NUMBER_INT);//  FILTER_SANITIZE_EMAIL  FILTER_SANITIZE_STRING\nif( false === $vvv ){\n\techo "validation error param: vvv ";\n}\nctype_\npreg_replace_
dir_exists_|if( file_exists($path_) ) {\n}
apc_clear_cache_|apc_clear_cache($cache_type='user');
twb_btn_|twb_button_
json_encode_|$json = json_encode($a, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);\nif( $json === false ) { die( json_last_error_msg() ); }
array_reduce_|$final_v = array_reduce($a_, function($carry_v, $cur_v) {\n    $carry_v += $cur_v;\n    return $carry_v;\n}, $initial_v=0);
obj_|new stdClass()
banchmark_|profile_
assert_int_|if( !is_numeric($num) ) {\n    throw new Exception("num deve essere in formato numerico, '$num' ricevuto");\n}\n\n
_find_|// Return the value of the first item in the collection that passes the truth test (iterator)\n$v = __::find( [1, 2, 3, 4], function($num) { return $num % 2 === 0; }); \n// => 2
filter_float_|$f = filter_var($f, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION|FILTER_FLAG_ALLOW_THOUSAND);
register_shutdown_function_|register_shutdown_function(function (){ \n    echo "script is shuting down";\n});
finally_|finally {\n\|}
m_|method_
css_input_type_|input[type="text"]
spl_|Interfaces\n    Countable\n    OuterIterator\n    RecursiveIterator\n    SeekableIterator\n    SplObserver\n    SplSubject\nClasses\n    AppendIterator\n    ArrayIterator\n    ArrayObject\n    CachingIterator\n    CallbackFilterIterator\n    DirectoryIterator\n    EmptyIterator\n    FilesystemIterator\n    FilterIterator\n    GlobIterator\n    InfiniteIterator\n    IteratorIterator\n    LimitIterator\n    MultipleIterator\n    NoRewindIterator\n    ParentIterator\n    RecursiveArrayIterator\n    RecursiveCachingIterator\n    RecursiveCallbackFilterIterator\n    RecursiveDirectoryIterator\n    RecursiveFilterIterator\n    RecursiveIteratorIterator\n    RecursiveRegexIterator\n    RecursiveTreeIterator\n    RegexIterator\n    SplDoublyLinkedList\n    SplFileInfo\n    SplFileObject\n    SplFixedArray\n    SplHeap\n    SplMinHeap\n    SplMaxHeap\n    SplObjectStorage\n    SplPriorityQueue\n    SplQueue\n    SplStack\n    SplTempFileObject\nException\n    LengthException\n    InvalidArgumentException\n    LogicException\n    BadFunctionCallException\n    BadMethodCallException\n    DomainException\n    RangeException\n    RuntimeException\n    UnderflowException\n    UnexpectedValueException\n    BadFunctionCallException\n    BadMethodCallException\n    OutOfBoundsException\n    OutOfRangeException\n    OverflowException
ok_|ok($result, $expected, $label); // test_
zf_view_|$html = $this->view->render('alternate.phtml');
ex_|throw_
dump_|var_
firebug_|FB::send('test');
argv_|$_SERVER['argv'][1];
memory_limit_|ini_set("memory_limit","256M");
http_auth_|// HTTP basic AUTH\nunction pc_validate($user,$pass) {\n    /* replace with appropriate username and password checking from DB */\n    $users = ['david' => 'fadj&32',\n                   'adam'  => '8HEj838'];\n    if (isset($users[$user]) && ($users[$user] == $pass)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nif (! pc_validate($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW'])) {\n    header('WWW-Authenticate: Basic realm="My Website"');\n    header('HTTP/1.0 401 Unauthorized');\n    echo "You need to enter a valid username and password.";\n    exit;\n}
thread_|pthreads_
array_filter_|$a_data = array_filter($a_data, function ($v){ \n    // false will be skipped\n    return !empty($v); \n});\n// for keys see array_filter_assoc_
implode_|implode(',', array_filter($a, function ($s){ return !empty($s); }) );
zf_h_select_multi_|$html_select = $this->formSelect(\n            $name='foo[]',\n            $val=2,\n            $opt=[\n              'class' => 'baz',\n            ],\n            $a_options=[ 1 => 'One',\n              2 => 'Two',\n              3 => 'Three' ]\n);
var_|echo '<pre>'.__FUNCTION__.'()'.' L:'.__LINE__.' F:'.__FILE__."\\n", var_dump(\n\|\n),"</pre>\\n"; die();// debug_print_backtrace()\n\n
http_build_query_|$url_data = http_build_query([]);
zf_h_headlink_|<?php \n// setting links in a view script:\n$this->headLink()->appendStylesheet('/styles/basic.css')\n                 ->headLink(['rel' => 'icon',\n                                  'href' => '/img/favicon.ico'],\n                                  'PREPEND')\n                 ->prependStylesheet('/styles/moz.css',\n                                     'screen',\n                                     true,\n                                     ['id' => 'my_stylesheet']);\n  \n// rendering the links in layout\necho $this->headLink() ?>
opt_|$option = array_merge([\n], $opt );\nextract($option);
phpunit_test_|// salva in {$classname}Test.php\nclass {$classname}Test extends PHPUnit_Framework_TestCase {\n    public function test{$testname}(){\n        $this->assertEquals(1, 2);\n    }\n}
gz_extract_|// open file for reading\n$zp = gzopen($filename, "r");\n// read 3 char\necho gzread($zp, 3);\n// output until end of the file and close it.\ngzpassthru($zp);\n// open file and print content (the 2nd time).\nif (readgzfile($filename) != strlen($s)) {\n    echo "Error with zlib functions!";\n}\ngzclose($zp);
replace_|preg_replace('/\\s+?(\\S+)?$/', '',$s);
issetor_|$\|= isset($a['']) ? $a[''] : null;
login_|// simplistic login to protect a web page\n<form method="post" action="login.php">\nUsername: <input type="text" name="username"> <br>\nPassword: <input type="password" name="password"> <br>\n<input type="submit" value="Log In">\n</form>\n\n \nif (pc_validate($_REQUEST['username'],$_REQUEST['password'])) {\n    $_SESSION['login'] = \n        $_REQUEST['username'].','.md5($_REQUEST['username'].$secret_word));\n    error_log('Session id '.session_id().' log in as '.$_REQUEST['username']);\n}\n// verification\nunset($username);\nif ($_SESSION['login']) {\n    list($c_username,$cookie_hash) = explode(',',$_SESSION['login']);\n    if (md5($c_username.$secret_word) == $cookie_hash) {\n        $username = $c_username;\n    } else {\n        print "You have tampered with your session.";\n    }\n}
zf_cache_get_|$cacheEngine = Zend_Registry::get('cache');\n$c_key = '';\nif( ($c_result = $cacheEngine->load($c_key)) === false ) {\n    $c_result = ; // do computation\n    $cacheEngine->save($c_result, $c_key);\n} else {\n    // get from cache\n}\nreturn $c_result;
zf_registry_|if( Zend_Registry::isRegistered('acl') ){\n    $acl = Zend_Registry::get('acl');\n} else {\n    $acl =;\n    Zend_Registry::set('acl', $acl);\n}
autocomplete_|function render($name, $value, array $a_data){\n    // @see https://github.com/devbridge/jQuery-Autocomplete\n    $id="autocomplete_$name";\n    /*\n    var js_data = [\n    { value: 'Andorra', data: 'AD' },\n    { value: 'Zimbabwe', data: 'ZZ' },\n    { value: 'Italy', data: 'IT' },\n    { value: 'France', data: 'FR' },\n    ];\n    */\n    $json_data = json_encode($a_data);\n\n    return <<<__END__\n<!-- if not present \n<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.min.js"></script>\n-->\n<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.devbridge-autocomplete/1.2.24/jquery.autocomplete.min.js"></script>\n\n<input type="text" name="$name" value="$value" id="$id" />\n<script >\nvar a_data = $json_data;\n$('#$id').autocomplete({\n    lookup: a_data,\n    onSelect: function (suggestion) {\n        console.log('You selected: ' + suggestion.value + ', ' + suggestion.data);\n    }\n});\n</script>\n<style type="text/css">\n// TODO: define globally if you plan to reuse it\n.autocomplete-suggestions { border: 1px solid #999; background: #FFF; overflow: auto; }\n.autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }\n.autocomplete-selected { background: #F0F0F0; }\n.autocomplete-suggestions strong { font-weight: normal; color: #3399FF; }\n.autocomplete-group { padding: 2px 5px; }\n.autocomplete-group strong { display: block; border-bottom: 1px solid #000; }\n</style>\n__END__;\n}
base_convert_|base_convert($i, 10, $tobase=36 );
k_|'\|' => '',
__END__|$html = <<<__END__\n\|__END__;\n
rand_|rand(0,100);
config_|$a_config = include 'config/application.config.php';\n<?php\n// config/application.config.php\nreturn [];
json_last_error_|$json = json_encode( $data, JSON_UNESCAPED_UNICODE );\n                if( $json === false ) {\n                    die( json_last_error_msg() );\n                }\n                file_put_contents($file_cache_path, $json);
header_download_|// inizia output\nfunction binary_download($file_path){\n  header('Content-Description: File Transfer');\n  header('Content-Type: application/octet-stream');\n  header('Content-Transfer-Encoding: binary');\n  header('Content-Disposition: attachment; filename=' . basename($file_path));\n  header('Expires: 0');\n  header('Cache-Control: must-revalidate');\n  header('Pragma: public');\n  header('Content-Length: ' . filesize($file_path));\n  readfile($file_path);\n}\nbinary_download($file_path);\nexit;
file_is_older_|$file_mtime = filemtime($this->xml_file);\nif (time()-$file_mtime > 2 * 3600) {\n    // file older than 2 hours\n} else {\n    // file younger than 2 hours\n}
file_put_contents_|\n// log routine\nprotected static function logRequest( $message, $isOK=true, array $errors=[]) {\n    $log_msg =  sprintf('%s %s %s action:%s msg:"%s" errors:%s params:%s %s %s'.PHP_EOL,\n        date('Y-m-d H:i:s'),\n        $isOK ? 'OK' : 'KO',\n        $IP = coalesce(@$_SERVER['HTTP_X_REAL_IP'], $_SERVER['REMOTE_ADDR']),\n        $action=$this->getRequest()->getActionName(),\n        $message,\n        json_encode($errors),\n        $request = substr(json_encode(array_merge($_GET,$_POST)),0,2000),\n        substr($_SERVER['REQUEST_METHOD'],0,1),\n        $BROWSER = DMS_Browser::translate()\n    );\n    $log_path = sprintf('%s/../var/logs/%s_%s.log', APPLICATION_PATH, basename(__FILE__), date('my') );\n    file_put_contents($log_path, $log_msg, (FILE_APPEND | LOCK_EX) );\n}\n\n\n\n
asort_|hash_sort_
once_|static $c = 0;\nif( $c === 0 ) {$c++;\n\|\n}
substr_count_|$c = substr_count($str, $usbstr\|);
phpversion_|php_version_
defined_|defined('MYCONST')
sprintf_|$str = sprintf('%s %d', $str, $int); \n// second: %2$s ; first: %1$s "%04d-%02d-%02d"\n
goto_|GOTO_LABEL:\ngoto GOTO_LABEL; \n\n
_map_|$a_data = __::map( ['one'=>1, 'two'=>2, 'three'=>3], function($num, $key) {\n  return $num * 3;\n});
error_reporting_|error_reporting(E_ALL); // Report all PHP errors \nini_set('display_errors', '1');\nini_set('html_errors', '1');\n// log app errors\nini_set('log_errors', '1');\nini_set('error_log', __DIR__.'/data/log/PHP_'.date('y_m').'.php' );
typeof_|$var instanceof ParentClass
try_|try {\n\n\|//} catch ( Zend_Controller_Dispatcher_Exception $e) {\n} catch (Exception $e) {\n    $fmt = 'Exception: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    ); \n    Zend_Registry::get('logger')->err(strip_tags($msg));\n    // your UI notify routine\n    die($msg);\n//} finally {\n}\n\n
sort_records_|// Sort the multidimensional array\nusort($results, function ($a, $b) {\n    // Define the custom sort function\n    return $a['some_sub_var'] > $b['some_sub_var'];\n});\n     \n
func_|function golang_like_func($str){\n    return [false, "String is invalid"];\n}\nlist($res, $err) = golang_like_func($str);\nif($err){\n  // use $err\n}\n\n
controller_|// funzione: controller con nomenclatura simile a ZF\nclass BaseController {\n    public function run($uri) {\n        $action = self::resolveAction($uri);\n        if (method_exists($this, $action)) {\n            return $this->$action();\n        } else {\n            return "unimplemented action:$action \\n";\n        }\n    }\n    // logica di composizioe della action\n    public static function resolveAction($uri) {\n        if (empty($uri)) {\n            return '';\n        }\n        $action = str_replace(['/mobile/','/'], '', $uri);\n        $action .= 'Action'; \n        return $action;\n    }\n}\n// esempio uso e azione\nclass AppController extends BaseController {    \n    function loginAction(){}\n}\nok('/mobile/login', 'loginAction');//test resolver\n$controller = new AppController();\ndie( $controller->run($uri = $_SERVER['REQUEST_URI']) );
dir_|glob_
check_|<input type="checkbox" name="<?=setFieldInfoName($currentIndex)?>" value="1" <?=$\|->enabled() ? "checked" : ""?>>
pattern_signleton_|class Singleton {\n    // Returns the *Singleton* instance of this class.\n    public static function getInstance() {\n        static $instance = null;\n        if (null === $instance) {\n            $instance = new static();\n        }\n        return $instance;\n    }\n    // Protected constructor to prevent creating a new instance via the `new` operator from outside of this class \n    protected function __construct() { }\n    private function __clone() { }\n    private function __wakeup() { }\n}\n\nclass SingletonChild extends Singleton { }\n\n
range_|$a_range = range(0, 50, 10);//[10,20,30,40,50]
mysql_fetch_assoc_|mysql_fetch_array_
array_sort_|sort_
autoload_|// @see composer ClassLoader.php for PSR-04 compliant autloader\nspl_autoload_register(function ($pClassName) {\n    $ds = DIRECTORY_SEPARATOR;\n    $path_local = str_replace('\\\\', $ds, $pClassName);\n    // TODO: define your lib path\n    $path = __DIR__ . $ds . '../lib'. $ds. $path_local . ".php"\n    require_once $path;\n    return true;\n});
array_map_assoc_|$a_err = array_map(function($k, $v) {\n    return "$k => $v";\n}, array_keys($a_err), array_values($a_err) );
_min_|$a_recs =array(  array( 'age'=>60 )  );\n$min = __::min($a_recs, function($rec) { return $rec['age']; });
zf_h_escape_|$this->escape($this->str)
tempnam_|tempnam(sys_get_temp_dir(), 'PREFIX');
method_|protected function \|(hint $v){ \nreturn ; \n}
ajax_|request_is_ajax_
zf_form_|\nclass Application_Form_Mail extends EasyBib_Form {\n\n    public function init() {\n\n        $this->setAction('/mail/new')->setMethod('post');\n        $this->setAttrib('id', 'mail');\n        //\n        // subject\n        $el_subject = new Zend_Form_Element_Text('subject');\n        //$el_subject->addValidator( new Zend_Validate_Regex(array('pattern' => '/[a-zA-Z0-9\\,\\.\\-\\_]/')) );\n        $el_subject->addValidator(new Zend_Validate_StringLength(array('max' => 90)) );\n        $el_subject->setLabel('Subject:');\n        $el_subject->setRequired(true);\n        $a_el['subject']=$el_subject;        \n\n        // from\n        $el_from = new Zend_Form_Element_Select('from');\n        $el_from->addValidator('EmailAddress');\n        $el_from->setLabel('From:');\n \t$a_el['from']=$el_from;\n\n\n        // add all elements \n        foreach( $a_el as $el_name => $el_obj ) {\n            $this->addElement($el_obj, $el_name );\n\t}\n        //\n        $this->addElement('submit', 'invia', array('label' => 'Invia') );\n        EasyBib_Form_Decorator::setFormDecorator($this, EasyBib_Form_Decorator::BOOTSTRAP, 'invia', 'cancel');\n    }\n}\n\n\nclass controller {\n\n    public function usernewAction() {\n        $request = $this->getRequest();\n        $form = new Application_Form_FornitoriUser();\n        $this->view->usr_form = $form;\n\n        if ($request->isPost()) {\n            $form->populate( $request->getPost() );\n            if (!$form->isValid($request->getPost())) {\n                $msg = sprintf('errore di validazione: %s ',\n                    json_encode($form->getErrors() )\n                    );\n                $this->view->SetMessage($msg,'error');\n            } else {\n\n                $LoginTable = new Application_Model_Login();\n                try {\n                    $login_id = $request->getPost( 'login_id' );\n\n                    $data = [\n                        'username'      => $request->getPost( 'username' ),\n                        'cod_fornitore' => $cod_fornitore = $request->getPost( 'cod_fornitore' ),\n                        'email'         => $request->getPost( 'email' ),\n                        'password_str'  => $request->getPost( 'password_str' ),\n                    ];\n                    $data['password'] = md5( $data['password_str'] );\n\n                    // salvataggio record\n                    $rec_id = $LoginTable->insert($data);\n\n                    $url_edit = $this->view->url([\n                        'cod_fornitore' => $cod_fornitore\n                        ], $r_name='fornitori_useredit' );\n\n                    $this->_helper->flashMessenger->addMessage( $msg='Salvataggio insert riuscito' );\n                    return $this->_redirect($url_edit);\n\n                } catch (Exception $e) {\n                    $fmt = 'Exception: <b>%s</b> line:%s file:%s<br> trace:<pre>%s</pre>';\n                    $msg = sprintf($fmt, $e->getMessage(),$e->getFile(), $e->getLine(), $e->getTraceAsString() );\n                    $this->view->SetMessage($msg, 'error');\n                }\n            }\n        }\n    }\n\n    public function usereditAction() {\n        $request = $this->getRequest();\n        $usr_form = new Application_Form_FornitoriUser();\n        $this->view->usr_form = $usr_form;\n        $cod_fornitore = $request->getParam('cod_fornitore', '');\n        if( !empty($cod_fornitore) ) {\n            $rec_fornitore = Application_Model_Login::findByCodFornitore($cod_fornitore);\n            if( empty($rec_fornitore) ) {\n                $this->view->SetMessage($msg='login non trovato', 'error');\n            }\n            $usr_form->populate( $rec_fornitore );// $data=$request->getPost()\n            $url_edit = $this->view->url([ 'cod_fornitore' => $cod_fornitore ], $r_name='fornitori_useredit' );\n            $usr_form->setAction($url_edit);\n        } else {\n            $this->view->SetMessage($msg='cod_fornitore deve essere valorizzato', 'error');\n        }\n        if ($request->isPost()) {\n            if (!$usr_form->isValid($request->getPost())) {\n                $msg = sprintf('errore di validazione: %s ', json_encode($usr_form->getErrors() ) );\n                $this->view->SetMessage($msg, 'error');\n            } else {\n                try {\n                    $login_id = $request->getPost( 'login_id' );\n                    $data = [\n                        'username'      => $request->getPost( 'username' ),\n                        'cod_fornitore' => $request->getPost( 'cod_fornitore' ),\n                        'email'         => $request->getPost( 'email' ),\n                        'password_str'  => $request->getPost( 'password_str' ),\n                    ];\n                    $data['password'] = md5( $data['password_str'] );\n                    //\n                    $LoginTable = new Application_Model_Login();\n                    $rec_id = $LoginTable->update($data, "cod_fornitore=$cod_fornitore");\n                    $this->view->SetMessage($msg='Salvataggio apdate riuscito', 'success');\n                } catch (Exception $e) {\n                    $this->view->SetMessage( $msg = $e->getMessage(), 'error');\n                }\n            }\n        }\n    }    \n}\n\n\n\n\n\n
set_time_limit_|set_time_limit(0);
sf_|sprintf_
limit_|set_time_limit_\nmemory_limit_
unique_|$a = array_unique($a);
check_ip_|function is_valid_ip() {\n    $IP = $_SERVER['REMOTE_ADDR'];\n    $a_valid_ip = [ '127.0.0.1', '93.91.142.162' ];\n\n    // aggiungi ip rete locale\n    foreach( range(1, 255) as $i) $a_valid_ip[] = '192.168.1.'.$i;\n\n    $is_valid = in_array( $IP, $a_valid_ip );\n    return $is_valid;\n}\nif( !is_valid_ip() ) {\n    die("risorsa non accessibile da $IP ");\n}
is_|test_
interface_|interface ICommand {\n    // \n    public function run();\n}
captcha_|require_once "../../jpgraph/jpgraph_antispam.php";\n$spam = new AntiSpam();\n// saved to $chars for later verification of correct entry\n$chars = $spam->Rand(8);\n$spam->Stroke() ;
mysql_|mysqli_
strict_|declare(strict_types=1);\nfunction sum(int $a, int $b):int {\n    return $a + $b;\n}
str_replace_|str_replace('','',\|);
memoize_|cache_
zf_action_|public function __Action(){\n    $this->view->myval = null;\n}
nl_|PHP_EOL
curl_get_|$c = curl_init('http://www.example.com/directory');\ncurl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($c, CURLOPT_FOLLOWLOCATION, 1);\n// alternative per processare il file\n// curl_setopt($c, CURLOPT_WRITEFUNCTION, function($c,$page) {\n//    $info = curl_getinfo($c);\n//});\n// curl_setopt($c,CURLOPT_FILE);\n//curl_setopt($c, CURLOPT_HTTPHEADER, ['X-Factor: 12', 'My-Header: Bob'] );\n//curl_setopt($c, CURLOPT_VERBOSE, 1);\n//curl_setopt($c, CURLOPT_REFERER, 'http://www.example.com/form.php');\n//curl_setopt($c, CURLOPT_USERAGENT, 'CURL via PHP');\n$page = curl_exec($c);\ncurl_close($c);
whilers_|while ($a = mysql_fetch_assoc($rs)) {\|}
type_|gettype($v)
header_json_|header('Content-Type: application/json');
scan_|$n = sscanf($auth, "%d\\t%s %s", $id, $first, $last);
call_user_func_array_|// Call the $foo->bar() method with 2 arguments\n$foo = new foo;\ncall_user_func_array([$foo, "bar"], ["three", "four"] );
collapse_|border-collapse:collapse;
move_uploaded_file_|$b_res = move_uploaded_file($tmp_name, $dest_path);
print_r_|print_r(\|,true);
passthru_|// useful for commands outputting binary data to pass to browser as is\nheader("Content-Type: application/octet-stream");\nheader("Content-Disposition: attachment; filename=\\"myfile.zip\\"");\nheader("Content-Length: 11111");\npassthru("/usr/bin/cat $path/myfile.zip", $err);\n// see exec_
//--|//----------------------------------------------------------------------------\n//  \|\n//----------------------------------------------------------------------------
php_sapi_name_|if (php_sapi_name() != 'cli') {\n    die("You have to use {$argv[0]} with cli version of php.");\n}\nif(PHP_SAPI != 'cli'){\n\n}
header_|header("Location: $url");
zf_log_|$logger = Zend_Registry::get('logger');\n$logger->info('');\n$logger->warn('');\n$logger->err('');
unlink_|if( unlink($path) ){}
microtime_|$time_from_begin = round(microtime(true) - $_SERVER['REQUEST_TIME_FLOAT'], 4);\n$time_start = microtime(true);\n// long operation here\nvar_dump( microtime(true) - $time_start );\nprofile_
vsprintf_|$str = vsprintf("%04d-%02d-%02d", explode('-', '1988-8-1'))
preg_replace_callback_|$line = preg_replace_callback( '|<p>\\s*\\w|', function ($matches) {\n    return strtolower($matches[0]);\n}, $line );
twb3_tabs_|<ul class="nav nav-tabs" id="tab_details_{$a_rec['id']}" role="tablist">\n                <li role="presentation" class="active">\n                    <a href="#a_{$a_rec['id']}" id="tab-a_{$a_rec['id']}" role="tab" data-toggle="tab"  >\n                        {$content['0']['title']}\n                    </a>\n                </li>\n                <li role="presentation">\n                    <a href="#b_{$a_rec['id']}" id="tab-b_{$a_rec['id']}" role="tab"  data-toggle="tab"  >\n                        {$content['1']['title']}\n                    </a>\n                </li>\n\n            </ul>\n            <div class="tab-content" id="tab_deatils_content_{$a_rec['id']}">\n                <div class="tab-pane fade in active" role="tabpanel" id="a_{$a_rec['id']}"  >\n                    {$content['0']['content']}\n                </div>\n                <div class="tab-pane fade" role="tabpanel" id="b_{$a_rec['id']}"  >\n                    {$content['1']['content']}\n                </div>\n            </div>
zf_partial_|echo $this->partial('_partial.phtml', [\n    // injiect vars\n    'from' => 'Team Framework',\n] ); \n
zf_dbg_|Zend_Debug::dump($, 'label:');
array_unique_|$a_ = array_unique($a_ , SORT_STRING);
todo_|// TODO: 
file_get_contents_|$str_content = file_get_contents( realpath( __DIR__ .'/file.txt') );
f_|function(int $i):int {}
hack_|#!/usr/bin/hhvm -vEval.Jit=1\n<?hh
throw_|$msg = sprintf('Errore %s ', \n\|);\nthrow new \\Exception($msg);
strategy_|interface ISerializable {\n    public function serialize();\n}\nclass PHPOutput implements ISerializable {\n    public function serialize()    {\n        return serialize($a);\n    }\n}\nclass JsonOutput implements ISerializable {\n    public function serialize() {\n        return json_encode($a);\n    }\n}\n// caller code will use the strategy preferred at runtime\n$serializer = ;// get a serializer at runtime\n$serializer->serialize();\n\n\n
reflection_|$reflect = new ReflectionClass($this);\n$props   = $reflect->getProperties(ReflectionProperty::IS_PUBLIC | ReflectionProperty::IS_PROTECTED);\nforeach ($props as $prop) {\n    print $prop->getName() . "\\n";\n}
command_|// pattern Command\n// definisce un oggetto operazione, assegna le operazioni a una lista, esegue le operazioni nella lista\ninterface ICommand{\n  public funcion execute();\n}\n \nclass Commnad_1 implements ICommand{}\nclass Commnad_2 implements ICommand{}\n \n \nclass Commander {\n  function __constructor(){\n    // i command possono essere caricati a runtime o seguendo logiche opportune\n    $this->commands = [ new Command_1(), new Command_2() ];\n  }\n \n  // esegue i comandi per aggregare un output complesso\n  function operate(){\n    //  l'output può essere di un tipo qualsiasi, dipende dalla logica corrente\n    $output = '';\n    foreach( $this->command as $c ){\n      $output .= $c->execute();\n    }\n    return $output;\n  }\n}
escape_|echo htmlspecialchars($s, ENT_QUOTES);
cache_|// since apcu >= 5.1.0(php7)\n$config = apcu_entry("config", function($key) {\n return [\n   "fruit" => apcu_entry("config.fruit", function($key){\n     return [\n       "apples",\n       "pears"\n     ];\n   })\n ];\n});\n\ndefine('TTL_FOREVER',  0, false);\ndefine('TTL_H',  60 * 60, false);\ndefine('TTL_8H', 8 * TTL_H, false);\ndefine('TTL_D',  24 * TTL_H, false);\n/* uso:\n$cache_key = '';//__METHOD__.'_'.json_encode(func_get_args());\n$data = cache($cache_key, function() {\n\treturn [];\n});\nreturn $data;\n*/\nfunction cache($cache_key, \\Closure $generator, $ttl_secs = TTL_8H ) {\n    $val = apc_fetch($cache_key);\n    if (false === $val) {\n        $val = $generator();\n        apc_store($cache_key, $val, $ttl_secs );//secs, 0=forever\n    } else {\n        // from cache\n    }\n    return $val;\n}\n// put data in file for later reuse\nfunction fcache( $file_cache_path, \\Closure $generator, $ttl = TTL_8H ) {\n    $ttl_is_valid = function() use($ttl) {\n        // se esiste, verifica data ed elimina vecchio\n        $file_mtime = filemtime($file_cache_path);\n        if (time()-$file_mtime > $ttl ) {\n            // file older than 2 hours\n            unlink($filename);\n            return false;\n        } else {\n            // file younger than x hours\n            return true;\n        }\n    };\n\n    if( file_exists($file_cache_path) && filesize($file_cache_path) >= 1024 && $ttl_is_valid() ) {\n        $json_str = file_get_contents( $file_cache_path );\n        $data = json_decode($json_str, $use_assoc=true);\n    } else {\n        $data = $generator(); \n        //$data = \\Mobile\\Response::to_UTF8($data);\n        $json = json_encode( $data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT ) or die( json_last_error_msg() );  \n        file_put_contents($file_cache_path, $json);\n    }\n    return $data;\n}\n\n
main_|__MAIN__
static_|//\n\tprotected static function \| () {\t\t\nreturn ; \n}
date_default_timezone_set_|date_default_timezone_set('Europe/Rome');
dir_path_|$path_=dirname(__FILE__).'/lib.php'
url_exists_|$file_headers = @get_headers($url = 'http://www.domain.com/somefile.jpg' );\nif( $file_headers[0] == 'HTTP/1.1 404 Not Found' ) {\n    return false;\n}
call_|call_user_func_array_
sapi_|php_sapi_name_
filter_int_|$int = filter_var( \|, FILTER_SANITIZE_NUMBER_INT);
phpunit_assert_|$this->assertEquals($expect, $val, $msg='');\n
ip_|$IP = $_SERVER['REMOTE_ADDR'];\ncheck_ip_
e_|<?= escape_\|?>
singleton_|    public static function getInstance() {\n        static $__instance = null;\n        if (null === $__instance) {\n            $__instance = new static();\n        }\n        return $__instance;\n    }\n    // should not circumvent the singleton\n    protected function __construct() { }
method_exists_|method_exists($obj, 'method')
strpos_|str_pos_
zf_session_|$session = Zend_Registry::get('session');\n//$session = new Zend_Session_Namespace('_l10n_');\n$session->var = '';
phpunit_assert_true_|$this->assertTrue($val);
log_|file_put_contents_
zf_h_partial_loop_|$model = [\n    ['key' => 'Mammal', 'value' => 'Camel'],\n    ['key' => 'Bird', 'value' => 'Penguin']\n];\necho $this->partialLoop('partialLoop.phtml', $model);
_reject_|// Return an array where the items failing the truth test (iterator) are removed.\n$a_data = __::reject( [1, 2, 3, 4], function($num) { return $num % 2 === 0; }); \n// => array(1, 3)
sqlite_|$db = new SQLite3('test.db',SQLITE3_OPEN_CREATE);\nif(!$db){\n    echo $db->lastErrorMsg();\n} else {\n    echo "Opened database successfully\\n";\n}\n\n$sql =<<<EOF\n  CREATE TABLE TEST_TBL\n  (ID INT PRIMARY KEY     NOT NULL,\n  NAME           TEXT    NOT NULL,\n  AGE            INT     NOT NULL,\n  ADDRESS        CHAR(50),\n  NUM            REAL);\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (1, 'Paul', 32, 'California', 20000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (2, 'Allen', 25, 'Texas', 15000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (3, 'Teddy', 23, 'Norway', 20000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 );\nEOF;\n//---------\n$ret = $db->exec($sql);\nif(!$ret){\n    echo $db->lastErrorMsg();\n} else {\n    echo "Table created successfully\\n";\n}\n//---------\n// or DELETE from TEST_TBL where ID=2;\n$ret = $db->exec($sql="UPDATE TEST_TBL set NUM = 25000 where ID=1;");\nif(!$ret){\n    echo $db->lastErrorMsg();\n} else {\n    echo $db->changes(), " Record updated successfully\\n";\n}\n//---------\n$ret = $db->query($sql="SELECT * from TEST_TBL;");\nwhile($row = $ret->fetchArray(SQLITE3_ASSOC) ){\n    echo "ID = ". $row['ID'] . "\\n";\n    echo "NAME = ". $row['NAME'] ."\\n";\n    echo "ADDRESS = ". $row['ADDRESS'] ."\\n";\n    echo "NUM =  ".$row['NUM'] ."\\n\\n";\n}\n$db->close();
hash_|if (function_exists("hash_algos") && in_array("sha512", hash_algos())) {\n    $token = hash("sha512", mt_rand(0, mt_getrandmax()));\n}
gz_compress_|$filename = tempnam('/tmp', 'zlibtest') . '.gz';\n$s = "Only a test, test, test, test, test, test, test, test!\\n";\n$zp = gzopen($filename, "w9");// open file for writing with maximum compression\ngzwrite($zp, $s);// write string to file\ngzclose($zp);// close file
function_|//\nfunction \|(int $i=0):string {\n    $html = '';\n    $html .= '';\n    return $html;\n}\n
intval_|$i_num = intval($s);
dbg_|var_dump(\|);die();
array_collect_|array_reduce_
default_|default:\nbreak;
jq_promise_|jq_deferred_
ob_|ob_start();\n$this->debugDumpParams();\n$dump = ob_get_clean();
extract_|extract($data, $flgs=EXTR_OVERWRITE, $sprefix=null);
date_sub_|date_add_
session_|session_start();  \n$_SESSION['count'] = 0;
mail_|$mail_res = mail($to, $subject, $message);
echo_|echo "\|"; // dbg
sf_get_|$request->getParameter($name);
php_|<?php\ndeclare(strict_types=1);\n\|\n?>
__call_|function __call($name, $args){\n  echo "no def: $name  arity: ".count($args)."\\n";\n}
phpo_|<?=\|;?>
mysqli_|$mysqli = new mysqli("127.0.0.1", $user, $password, $database, 3306 );\nif ($mysqli->connect_errno) {\n    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;\n}\necho $mysqli->host_info . "\\n";\n\n// Create table doesn't return a resultset  \nif ($mysqli->query("CREATE TEMPORARY TABLE myCity LIKE City") === TRUE) {\n    printf("Table myCity successfully created.\\n");\n}\n\n// Select queries return a resultset  \nif ($result = $mysqli->query("SELECT Name FROM City LIMIT 10")) {\n    printf("Select returned %d rows.\\n", $result->num_rows);\n\n    // free result set \n    $result->close();\n}\n\n// If we have to retrieve large amount of data we use MYSQLI_USE_RESULT \nif ($result = $mysqli->query("SELECT * FROM City", MYSQLI_USE_RESULT)) {\n\n}\n\n$mysqli->close();\n \n \n
jq_submit_|$( "#target" ).submit(function( event ) {\n  alert( "Handler for .submit() called." );\n  event.preventDefault();\n});
zf_layout_|$layout = $this->_helper->layout();\n$layout->setLayout('three-column');
__construct_|public function __construct(){\n    parent::__construct();\n}
empty_|_empty_
php_version_|// test software version\nif( \n  !defined('PHP_VERSION_ID') \n  || !(PHP_VERSION_ID >= 50600 && PHP_VERSION_ID < 50700 || PHP_VERSION_ID === 70002 || PHP_VERSION_ID >= 70006)\n) {\n    if (PHP_SAPI == 'cli') {\n        echo 'Magento supports PHP 5.6, 7.0.2, and 7.0.6 or later. ' .\n            'Please read http://devdocs.magento.com/guides/v1.0/install-gde/system-requirements.html';\n    } else {\n        die('\n<div style="font:12px/1.35em arial, helvetica, sans-serif;">\n    <p>Magento supports PHP 5.6, 7.0.2, and 7.0.6 or later. Please read\n    <a target="_blank" href="http://devdocs.magento.com/guides/v1.0/install-gde/system-requirements.html">\n    Magento System Requirements</a>.\n</div>');\n  \n    }\n}\n
redirect_|location_
parse_int_|intval($i)
array_merge_|$a = array_merge( $a_1, $a_2 ...);
is_cli_|php_sapi_name_
gz_|gz_compress_\ngz_extract_
profile_|//--- DBG -----------------------------------------------------------\n// define profile macro\n$__profile = function ( $label, \\Closure $op) {\n    $mt_begin=microtime(true);\n    $res = $op();\n    echo sprintf('<pre>[%s] time:%F ms</pre>',\n        $label,\n        microtime(true)-$mt_begin\n    );\n    return $res;\n};\n//--- end DBG ------------------------------------------------------   \n$__op_result__ = $__profile('__LABEL__', function() use($V) {\n    return __the_operation__; \n} );\nmicrotime_
sql_bd2_fetch_|fetch FIRST 100 ROWS ONLY
array_reject_|_reject_
public_|\t//\n\tpublic function \|(){\n\t  return true;\n\t}
glob_|$dir = __DIR__.'/../public/images/';\nforeach( glob($dir.'*.jpg') as $file_path ) {\n    echo sprintf("%s size %s \\n", $file_path, filesize($file_path) );\n}\n
php_cli_server_|#!/usr/bin/env php\n<?php\n$dir = dirname(__FILE__).'/../www';\n\n$port = getFirstOpenPort( $port=8080, $c=10 );\nif( !empty($port) ) {\n    echo "serving http://localhost:$port \\n";\n    `google-chrome http://localhost:$port`;\n    `php -S localhost:$port -t $dir`;// il comando blocca l'esecuzione successiva\n} else {\n    echo 'no port found! '.PHP_EOL;\n}\n// scan a port range and return the first open\nfunction getFirstOpenPort($port=8080, $c=10 ) {\n    $_port=0;\n    for( $i=0; $i < $c; $i++) {\n        $_port = $port + $i;\n        $is_open = portIsOpen($_port);\n        if( $is_open ) {\n            echo $str = sprintf('port:%s open:%d '.PHP_EOL, $_port, $is_open );\n            return $_port;\n        }\n    }\n    return 8080;\n}\n// verifica se una porta locale è aperta o chiusa\nfunction portIsOpen($port) {\n    // '127.0.0.1'\n    $fp = @fsockopen('localhost', $port, $errno, $errstr, $timeout=5);\n    if (!$fp) {\n        // If you're getting a connection refused then the (TCP) port is firewalled.\n        echo $str = sprintf('port:%s ern:%d err:%s'.PHP_EOL, $port, $errno, $errstr);\n        // port is closed or blocked\n        return true;\n    } else {\n        echo("opened $port \\n");\n        // port is open and available\n        fclose($fp);\n        return false;\n    }\n}
set_error_handler_|// defining your own way of handling errors during runtime,\n// you need to do cleanup of data/files when a critical error happens\nset_error_handler(function ($errno, $errstr,  $errfile, $errline, array $errcontext) { \n    \n    // error was suppressed with the @-operator\n    if (0 === error_reporting()) { return false; }\n\n    /* switch ($errno) {\n        case E_NOTICE:\n        case E_USER_NOTICE:\n            $errors = "Notice";\n            break;\n        case E_WARNING:\n        case E_USER_WARNING:\n            // log your warning or transform in exception:\n            $errors = "Warning";\n            break;\n        case E_ERROR:\n        case E_USER_ERROR:\n            $errors = "Fatal Error";\n            break;\n        default:\n            $errors = "Unknown Error";\n            break;\n    } */\n\t// log your warning or transform in exception:\n        throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n\n\t//  is your responsibility to die() if necessary\n\t//  standard PHP error handler is completely bypassed for the error types specified by error_types unless the callback function returns FALSE\n\treturn false;\n}, \n  // on which error report level the user-defined error will be shown. Default is "E_ALL"\n  $on_err_level = self::isEnvProd() ? E_WARNING : E_ALL\n);\n\n
else_|else {\|}
jq_ready_|$(function(){\n    // DOM ready\n\|\n});
file_ext_|$ext = pathinfo($file_path, PATHINFO_EXTENSION);
apc_get_|cache_
zf_get_|$name = $this->getRequest()->getParam('name\|', '');
timing_|profile_
zf_h_partial_|echo $this->partial('_partial.phtml', $data=[\n    'from' => 'Team Framework',\n    'subject' => 'view partials'] );
str_toupper_|strtoupper($str)
image_size_|list($width, $height, $type, $attr) = getimagesize("$file_path");
str_match_|str_match($str, $substr)\|// strpos_ preg_match_\n// $str = "The quick brown fox jumps over the lazy dog";\n$contais = 1 === preg_match('/fox/', $str); // returns 1\n
ctype_|$is_ = ctype_alpha($str); // Only letters\n$is_ = ctype_digit($str); // Only numbers\n$is_ = ctype_space($str); // Only whitespace\n$is_ = ctype_print($str); // Only printable characters\n$is_ = ctype_alnum($str); // Numbers or letters
if__|$\| = isset($c) ? $c : null;
sql_db2_limit_|SELECT * FROM (\n \n    SELECT\n        ROW_NUMBER() OVER ( ORDER BY BCOART ) RID_,\n        ART.BCOART, ART.BDEART, ART.BALIVA FROM MI_DAT.MATP200F ART ORDER BY BCOART\n    WHERE\n        ART.BALIVA > 20\n \n) AS PAG_TBL_\nWHERE\n    PAG_TBL_.RID_ BETWEEN 10 AND 30 -- limit equivalent\n    ORDER BY BALIVA                 -- custom ordering\n
filter_str_|filterstr_
strpad_|str_pad_
border_|border: 1px solid #\|;
css_transparent_|background-color:rgba(255,0,0,0.5);
img_size_|list($width, $height, $mime_type_i, $html_attr) = getimagesize($img_path);
hh_map_|array<string, int> $map = [ 'a' => 1 ];\n
ff_|( \| ) ? ( ) : ( );
a_|$\| = [];
output_handler_|function mangle_email($s) {\n    // elimina email dall'output\n    return preg_replace('/([^@\\s]+)@([-a-z0-9]+\\.)+[a-z]{2,}/is', '<$1@...>', $s);\n}\n// esegue la funzione di pulizzia sull buffer\nob_start('mangle_email');\n// equivalente al settaggio php.ini\n// output_buffering = On\n// output_handler=mangle_email
date_format_|$date = DateTime::createFromFormat('Y-m-d', $last_date);\n\t\techo $date->format('d/m/Y');
pattern_strategy_|// Incapsulando gli algoritmi permetti agli sviluppatori di aggiungere altri tipi di output senza che questo influisca sul chiamante\n// implementando un’interfaccia comune potrai sfruttare il Type Hinting nel chiamante\ninterface OutputInterface {\n    public function load();\n}\nclass SerializedArrayOutput implements OutputInterface {\n    public function load() {\n        return serialize($arrayOfData);\n    }\n}\nclass JsonStringOutput implements OutputInterface {\n    public function load() {\n        return json_encode($arrayOfData);\n    }\n}\nclass ArrayOutput implements OutputInterface {\n    public function load() {\n        return $arrayOfData;\n    }\n}\n// ... il chiamante sceglie l'algoritmo più opportuno\n
php_cli_|#!/usr/bin/env php\n<?php\ndeclare(strict_types=1);\n\n// use jedit template php>cli.php
date_|date('Y-m-d H:i:s');
apc_|cache_
if___|$v = $v ?: $def;
defines_|// includono sia quelle create dalle estensioni sia quelle create con la funzione define()\necho '<pre>',print_r(get_defined_constants());\ndie();
redis_cache_|// usa composer per gestire le dipendenze\n//require "predis/autoload.php";\n//Predis\\Autoloader::register();\ntry {\n    $R = new Predis\\Client([\n        //'scheme' => 'tcp',\n        //'host' => 'localhost',\n        //'port' => port,\n        //'password' => 'password',\n        'persistent' => '1'  // persistent!\n    ]);\n} catch (Exception $e) {\n    $fmt = 'Exception Redis Connect: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    );\n    die($msg);\n}\n$k = 'foo';\nif( $R->exists($k) ){\n    $value = $R->get($k);\n    var_dump($value);\n} else {\n    // $R->set($k, "bar");\n    // $v = json_encode($v);\n    $R->setex($k, 60*60*24, "value" );\n}
zf_flash_|$this->_helper->flashMessenger->addMessage('');
number_format_|number_format($number, 2, ',', '.');
preg_match_|// basic match\n$str = "The quick brown fox jumps over the lazy dog";\n$is = 1 === preg_match('/fox/', $str) ; // returns 1\n$is = 1 === preg_match('/^fox/', $strg) ; // returns 0\n$is = 1 === preg_match('/^The/', $str) ; // returns 1\n$is = 1 === preg_match('/^the/', $str) ; // returns 0\n$is = 1 === preg_match('/dog$/', $str; // returns 1\n$is = 1 === preg_match('/f.x/', $str) ; // returns 1\n\n// adv match\n// returns 1 pattern matches, 0 if not, FALSE if an error \n$num_matches = preg_match('/^[A-Za-z0-9]{5,7}$/', $str, $a_matches, PREG_OFFSET_CAPTURE);\nif(false === $num_matches) {\n    $a_pcre_err=array_flip(get_defined_constants(true)['pcre']);\n    die( preg_last_error() /*.' '.$a_pcre_err[preg_last_error()]*/ );\n} elseif($num_matches===0) {\n    // no matches\n} else {\n    // ok\n}
trait_|trait SayWorld {\n    public function sayHello() {\n        parent::sayHello();\n        echo 'World!';\n    }\n}\nclass MyHelloWorld extends Base {\n    use SayWorld;\n}
[ada]
[yab]
[lua]
[makefile]
[sas]
[rtf]
[ptl]
[gcbasic]
[xsl]
[drawj2d]
[moin]
code_|<code bash>\|</code>
quote_|<quote "">\|</quote>
[bibtex]
[modula3]
[hxml]
[tsp]
[perl]
[swift]
[transact-sql]
[lisp]
[smi-mib]
[actionscript]
[pop11]
[progress]
[ini]
[jamon]
[html]
[go]
var_|fmt.Printf("%v", v) //DBG
array_string_|as_ := [...]string{"7", "8","9"}
err_|if err != nil { panic(err) }
func_|function_
print_|fmt.Printf("Hello %d\\n", 23)\nfmt.Fprint(os.Stdout, "Hello ", 23, "\\n")\nfmt.Println("Hello", 23)\nfmt.Println(fmt.Sprint("Hello ", 23))
switch_|    // switch\n    switch os := runtime.GOOS; os {\n    case "darwin":\n        fmt.Println("OS X.")\n    case "linux":\n        fmt.Println("Linux.")\n    default:\n        fmt.Printf("%s.", os)\n    }
rand_|// import "math/rand" "time"\nrand.Seed(time.Now().UnixNano())\nfmt.Println( rand.Intn(100) )
interface_|type Block interface {\n    BlockSize() int\n    Encrypt(src, dst []byte)\n    Decrypt(src, dst []byte)\n}
ife_|if value, err := pack1.Func1(param1); err != nil {\n}
import_|import (\n  "bytes"\n  "encoding/json"\n  "fmt"\n  "log"\n  "os/exec"\n  "strings"\n)
isset_|cities := map[string]string{"city1": "New York", "city2": "Portland"}\n// ok is boolean\nvalue, ok := cities["city2"] // return value if found or ok=false if not found\nif ok {\n    fmt.Println("value: ", value)\n} else {\n    fmt.Println("key not found")\n}
get_env_|str := os.Getenv("HOME")
file_exists_|// import os\nfile := "file.txt"\nif _, err := os.Stat(file); err == nil {\n    fmt.Println(file, "exist!")\n}
crosscompile_|//  GOOS=windows GOARCH=386 go build -o virgo.exe main.go
explode_|// import strings\n//str := "ADAM, EVE, JAMES"\na_str := strings.Split(str, ",")
class_|// Simple counter server.\ntype Counter struct {\n    n int\n}\n\nfunc (ctr *Counter) ServeHTTP(w http.ResponseWriter, req *http.Request) {\n    ctr.n++\n    fmt.Fprintf(w, "counter = %d\\n", ctr.n)\n}
float_to_string_|// import strconv\nstr := strconv.FormatFloat(12342323.234232, 'f', 6, 64)
_POST_|R *http.Request\nname := R.FormValue("k")
map_struct_|m = map[string]Vertex{\n    "Bell Labs": Vertex{X:2, Y:5},\n    "Google":    Vertex{X:5, Y:8},\n}\nfor k, v := range m {\n    fmt.Printf("The value for %s: %d %d \\n", k, v.X, v.Y )\n}
if_|if v, ok := map[k]; ok { \n    fmt.Println(k, v, " key is present")\n}
flag_|    var goRoot = "";\n    flag.StringVar(&goRoot, "goroot", goRoot, "Go root directory")
function_|func Fnamw(url string) (string, error) {\n    if ok {\n        return res, nil\n    }\n    return "", fmt.Errorf("not found: %s", url)\n}
str_replace_|// import stings\nstr := strings.Replace(my_str, " ", "", -1)
exec_|import (\n    "fmt"\n    "os/exec"\n    "sync"\n    "strings"\n)\n\nfunc exe_cmd(cmd string, wg *sync.WaitGroup) {\n    fmt.Println(cmd)\n    parts := strings.Fields(cmd)\n    out, err := exec.Command(parts[0],parts[1]).Output()\n    if err != nil {\n        fmt.Println("error occured")\n        fmt.Printf("%s", err)\n    }\n    fmt.Printf("out: %s ", out)\n    wg.Done()\n}\n\n// main() \n    wg := new(sync.WaitGroup)\n    commands := []string{\n        "copy g:\\\\wp\\\\Elenco_Clienti_16.CSV          c:\\\\wp /y",\n        "copy g:\\\\wp\\\\Elenco_Contratti_19.CSV        c:\\\\wp /y",\n        "copy g:\\\\wp\\\\Elenco_Contratti_-_Auto_31.CSV c:\\\\wp /y",\n        "copy g:\\\\wp\\\\TABELLA_SINISTRI_2016-1.CSV    c:\\\\wp /y",\n        "copy g:\\\\wp\\\\TABELLA_TITOLI_2016-1.CSV      c:\\\\wp /y"  }\n\n    for _, str := range commands {\n        wg.Add(1)\n        go exe_cmd(str, wg)\n    }\n    wg.Wait()
new_|//for arrays, structs and all value types: returns pinter\nvar f File = new(File)
file_open_|w, err := os.Create("output.txt")\nif err != nil {\n    panic(err)\n}\ndefer w.Close()
make_|//for slices, maps and channels: use make, initilize to zero\n//for arrays, structs and all value types: use new\nvar v  []int = make([]int, 100) // slice int inizializzata a 0 di 100 elementi
struct_|type Circle struct {\nx, y, r float64\n}\nc := new(Circle)\nc := Circle{x: 0, y: 0, r: 5}\nfmt.Println(c.x, c.y, c.r)
log_file_|    f, err := os.OpenFile("testlogfile", os.O_RDWR | os.O_CREATE | os.O_APPEND, 0666)\n    if err != nil {\n        fmt.Printf( "error opening file: %v", err)\n    }\n    defer f.Close()\n    log.SetOutput(f)\n    log.Println("This is a test log entry")
echo_|//import "fmt"\nfmt.Println("Hello", 23)
_GET_|R http.Request\nstr := R.URL.Query().Get("k");
mapi_|imap := map[string]int{\n    "a": 1,\n    "b": 2,\n}
file_put_contents_|// import os\nfile, err := os.OpenFile("input.txt", os.O_APPEND|os.O_WRONLY,0600)\nif err != nil {\n    panic(err)\n}\ndefer file.Close()\nif _, err = file.WriteString(" this is the APPENDED text"); err != nil {\n    panic(err)\n}
args_|func myadd(args ...int) int {\n    total := 0\n    for _, v := range args {\n        total += v\n    }\n    return total\n}
printf_|fmt.Printf("%s \\n", str )
argv_|// import "flag"\nflag.Parse() \narg := flag.Arg(0) // get 1st argument
for_|for i := 0; i < len(p); i++ {\n    fmt.Printf("p[%d] == %d\\n", i, p[i])\n}
sprintf_|fmt.Sprintf("foo: %s", bar) 
array_int_|array := [...]int{7, 8, 9}
file_get_contents_|// import "io/ioutil"\nfile, err := ioutil.ReadFile("testfile.txt")\nif err != nil {\n    fmt.Println(err)\n    return\n}\n// out the file content\nfmt.Println(string(file))
method_|func (f *fakeFetcher) Fetch(url string) (body string, urls []string, error) {\n    res, ok := some_method_call();\n    if ok {\n        return res.body, res.urls, nil\n    }\n    return "", nil, fmt.Errorf("not found: %s", url)\n}
md5_|//import "crypto/md5"\nhash := md5.New()\nio.WriteString(hash, my_str)  // append into the hash\nfmt.Printf("%x", hash.Sum(nil)) // get the hash
log_|log.Fatal("$USER not set")
str_join_|reg := []string {"a","b","c"}\n// convert array to a slice\nstr := strings.Join(reg[:], ",") 
delete_|delete(map, "key")
foreach_|    for k, v := range pow {\n        fmt.Printf("2**%d = %d\\n", k, v)\n    }
unset_|cities := map[string]string{ "city1":"New York", "city2":"Adelaide" };\ndelete(m, k)  // remove element m[k] from map m
main_|/*\nscopo del programma:\n*/\n// compilation:\n//  GOOS=windows GOARCH=386 go build -o virgo.exe main.go\n//  go build main.go\n\npackage main\nimport (\n    "fmt"\n)\nfunc init(){}\nfunc main() {\n    fmt.Println("Hello, go")\n}
array_|slice1 := []int{1,2,3}
map_|mi := make(map[string]int)\nmi["Answer"] = 42    \nfor k, v := range mi {\n}\n
dir_walk_|// import "os", "path/filepath"\n      dirname := "." + string(filepath.Separator)\n      d, err := os.Open(dirname)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      defer d.Close()\n      files, err := d.Readdir(-1)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      fmt.Println("Reading "+ dirname)\n      for _, file := range files {\n          if file.Mode().IsRegular() {\n              if filepath.Ext(file.Name()) == ".png" {\n                fmt.Println(file.Name())\n              }\n          }\n      }
[sgml]
[bcel]
[psp]
[antlr]
[cmake]
[PostgreSQL]
[ant]
[assembly-m68k]
[omnimark]
[interlis]
[mxml]
[avro]
[cvs-commit]
[lilypond]
[jsp]
[protobuf]
[foxpro]
[rfc]
[tex]
[mail]
[assembly-macro32]
[svn-commit]
[aspect-j]
[squidconf]
[rview]
[jhtml]
[jedit-actions]
[gradle]
[embperl]
[mysql]
[rd]
[zpt]
[objective-c]
[mqsc]
[rust]
[lex]
[prolog]
[assembly-r2000]
[sdl/pr]
[hex]
[swig]
[javafx]
[rebol]
[s+]
[dsssl]
[RPG]
function_|     D calc_int        PR            10I 0\n     D    parm1                       5I 0 VALUE\n      * must match the corresponding prototype\n      * (PI is optional if the SubR does not return and does not have any parameters)\n      * Other def of variables, constants and prototypes, are LOCAL definitions\n      * Calc may refer to both local and global definitions\n      * SubR must contain a RETURN operation\n     P calc_int        B\n     D calc_int        PI            10I 0\n     D    parm1                       5I 0 VALUE\n     D Result          S             10I 0\n      /free\n         Result = parm1 +1;\n         return Result;\n      /end-free\n     P                 E
read_|read(e) File_Name;\nif %error(File_Name);\n    // TODO: error reporting\nelse;\n    dow not %eof(File_Name);\n        // TODO: process record\n        read File_Name;// read next\n    enddo;\nelse;
dou_|dou exit;\n    if cond = 1;\n        exit = *on;\n    else;\nenddo;
free_|/free\n/end-free
setgt_|setgt *Hival FileName;//go to file EOF\nReadP FileName;\ndow not %eof(FileName);\n    // process record\n    ReadP FileName;\nenddo;
sub_|begsr name;\nendsr;
setll_|setll *loval FileName;\ndow (1=1);\n  read FileName;\n  if %eof;\n    leave;\n  endif;\n  if $oo <=0;\n    iter;\n  endif;\nenddo;
chain_|      * tabella di base\n     F intct30L uf a e           k disk    rename(intct0:intct_30) prefix(t_)\n      * DS Key, è automaticamente qualified\n     D OrdRecKeys      ds                  likerec(intct_30:*key)\n\n      /free\n         OrdRecKeys.t_tcoage   = i_coage;\n         OrdRecKeys.t_tanord   = i_anord;//puoi usare campi multipli\n         chain(e) %kds(OrdRecKeys) intct_30;\n         if %error;\n           // TODO: report key not found\n         endif;\n         if %found();\n           // t_tdaord accessibile... elabora il record come in fixed\n         endif;\n      /end-free
atoi_|%unsh()
replace_|\nresult_str = %replace(sustr:s1:%scan(sustr:s1):%len(sustr));
for_|D $i              s              3u 0\nfor $i=1 to %elem(ArrayName);\n// for $i = %elem(ArrayName) downto 1 by 1;\n    ArrayName($i);\n    //iter; leave; \nendfor;\n
h_|     H DECEDIT('0,') DATEDIT(*YMD/)\n     H option(*srcstmt : *nodebugio)\n     H dftactgrp(*no) bnddir('AW')
switch_|    select;\n        when opt = 'A';\n            exsr AddRec;\n        when opt = 'D';\n            exsr DelRec;\n        when opt = 'C';\n            exsr ChgRec;\n    endsl;
try_|monitor;\n\non-error;\n    retval = 'ERROR';\nendmon;
monitor_|monitor;\n    \non-error;\n    retval = 'ERROR';\nendmon;
while_|    dow not *in03;\n    enddo;
sql_select_many_|     D $matM2          ds                  QUALIFIED\n     D  des1                         70a\n     D  des2                         70a\n     * per estrarre tutti i campi \n     D $zntcl        E DS                  QUALIFIED OCCURS( 50 ) INZ\n     D                                     EXTNAME( zntcl00f )\n \n     exec sql select padem1, padem2 into :$MATM2 from MATM200f;\n     if SQLCOD<>0;\n        errore = '1';\n        o_errstr  = 'SQL error SQLCOD: '+%char(SQLCOD) ;\n        o_errn = SQLCOD;\n     endif;
*--|*-----------------------------------------------------------------------
string_|%char() \n// cast a char di I e F
date_|//*ISO: \n//*USA: 12312004\nD date   S    D\ndate = %char( %date(ymd:*ISO) : *USA ); \ndate = %date('040596':*MDY0);// date='1996-04-05'
callpp_|// per usare i prototipi occorrono delle specifiche\nH dftactgrp(*no) bnddir('AW')\n  /copy *libl/srccpy,cpy_protaw\n     // prototipo di funzione, su modulo esterno\n     D aw_getc         pr             1n   EXTPROC('AW_GETC')\n     D   aw_getc_daor                 8p 0 value\n     D   aw_getc_nuor                11p 0 value\n     D   aw_getc_note                30A\n\n       // chiamata di una funzione con prototipo\n       callp aw_getc(da_ord:nu_ord:$awc_note);
copy_|/COPY $lib/$file,$function\n/IF NOT DEFINED $MODNAME\n/DEFINE $MODNAME\n    // code goes here\n/ENDIF
str_pos_|pos = %scan('test':s_email);
dow_|    dow not *in03;\n    enddo;
if_|if ();\nelseif ();\nelse;\nendif;
charat_|pos = %check('@':s_email);
callp_|// prototipo comando esterno\n// uso:\n//       $cmd = 'CHGJOB CCSID(*SYSVAL)';\n//       callp exec(%trim($cmd):%len(%trim($cmd)));\n     D myexec          pr                  extpgm('lib/QCMDEXC')\n     D   ex_cmd                   32702a   const\n     D   ex_cmdlen                   15p 5 const\n\n\n
sql_select_one_|exec SQL  SELECT FName, LName, email INTO :fstname,:lstname,:email\n  FROM  contacts\n    WHERE cstnbr = :client\n    FETCH FIRST ROW ONLY;\nif (SqlCod<>0 or SQLSTATE >= '02000'); \n    // NOT FOUND leavesr;\nelse;  \n    // FOUND\nendif;\n\n
char_replace_|str_dec = %xlate('$.,':' ':'$1,000.11');
strtoupper_|     D U_case          C                   CONST('ABCDEFGHIJKLMNOPQRST-\n     D                                     UVWXYZAEEIOU')\n     D L_Case          C                   CONST('abcdefghijklmnopqrst-\n     D                                     uvwxyzàèéìòù')\n     $$_des = %xlate(l_case:u_case:$$_des);
int_|%int() \n//usa unsh() per float, cast a positivo
[forth]
[nqc]
[s#]
[mavscript]
[fhtml]
[occam]
[objectrexx]
[rpm-spec]
[apdl]
[cplex-lp]
[myghty]
[kotlin]
[tcl]
[scala]
[rcp]
[sip]
[template-toolkit]
[python]
[i4gl]
[clips]
[roff]
[rest]
[stata]
[twiki]
[text]
code_|<code bash>\n\|\n</code>
class_|// funzione:\nclass \|// extends implements\n{\n\n}
limit_|set_time_limit_\nmemory_limit_
call_|PWD=`pwd`\n# or PWD=$(pwd)
printf_|System.out.printf("%s,%.2f", s, f);
glob_|foreach (glob("*.txt") as $filename) {\n    echo "$filename size " . filesize($filename) . "\\n";\n}
[awk]
[verilog]
[outline]
[erlang]
[creole]
i_|//text//
quote_|<quote wikipedia>\n</quote>
h5|===== aaa =====
image_|{{image.png}}
h4|==== aaa ====
h3|=== aaa ===
h2|== aaa ==
h1|= heading1 =
table_||=A |=B |=C |\n| 1 | 2 | 3 |
b_|**Creole**
code_|<code bash>\|</code>
[yaml]
[assembly-ags]
[shellscript]
var_|local HELLO="hello "
include_|#source _common.sh    # include is in $PATH\nsource $(dirname $0)/_vars.sh 
cli_|#!/usr/bin/php\n<?php\n
now_|NOW=`date +"%m-%d-%Y-%T"`\nmv test_app test_app_${NOW}
echo_|echo "$foo World"
for_|for i in $( ls ); do\n    echo "item: $i";\ndone
switch_|cygwin=false;\nmacosx=false;\ncase "`uname -s`" in\n\tCYGWIN*) \n\t\tcygwin=true \n\t\t;;\n\tDarwin*) \n\t\tmacosx=true\n\t\t;;\nesac
let_|VARNAME=string\necho ${VARNAME}
str_cat_|echo "The current time is `date`"\necho "$foo World"\necho "${bla}!  ${laber}!" \necho $a$b\nA="X Y"\nA+="Z"\necho "$A"\nvar=${var}.sh\nsprintf_
concat_|A="X Y"\nA+="Z"\nA="${B}${C}"\necho "$A"
__DIR__|BASE_DIR=$(cd $(dirname "$0"); pwd)\nCONFIG_DIR=$BASE_DIR/config
enum_|public enum Day {\n\tSUNDAY(1),\n\tMONDAY(2),\n\tTUESDAY(3),\n\tWEDNESDAY(4),\n\tTHURSDAY(5),\n\tFRIDAY(6),\n\tSATURDAY(7)\n}\n//Printing all constants of an enum.\nfor(Day day: Day.values())\n\tSystem.out.println(day.name());
case_|case "$1" in\n    black  | bk) color="aaabbb";;\nesac
while_|COUNTER=0\nwhile [  $COUNTER -lt 10 ]; do\n    echo The counter is $COUNTER\n    let COUNTER=COUNTER+1\ndone
require_|include_
dirname_|DIRNAME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
empty_|if [ -z "$1" ]; then\n    echo usage: $0 directory\n    exit\nfi
system_|exec_
date_|NOW=`date +"%m-%d-%Y"`\nNOW_STR=home-$(date +%Y%m%d).tgz
f_|function hello() {\n    local HELLO="hello "\n    echo $HELLO\n    echo $1\n    echo $@\n}\nhello "World"
sprintf_|foo=$(printf "%s World" "$foo")
exec_|DBS=`mysql -uroot  -e"show databases"`
if_|if [[ `uname` == 'Linux' ]]; then\n    DB=testdb\n    rm -f /tmp/${DB}\nelif [[ `uname` == 'Darwin' ]]; then\n    DB=test.db\nelse\n    #TODO:\nfi
printf_|printf -v a "%s" "my_var"\nprintf "${color}${text}${nc}"
func_|function cprint() {\n    local text="${2}"\n    local nc='\\033[0m'\n    case "${1}" in\n        black  | bk) color='\\033[0;30m';;\n        red    |  r) color='\\033[1;31m';;\n        green  |  g) color='\\033[1;32m';;\n        yellow |  y) color='\\033[1;33m';;\n        blue   |  b) color='\\033[1;34m';;\n        purple |  p) color='\\033[1;35m';;\n        cyan   |  c) color='\\033[1;36m';;\n        gray   | gr) color='\\033[0;37m';;\n        *) color=''\n    esac\n    printf "${color}${text}${nc}"\n}\n\ncprint r  "colorful!\\n"\ncprint g  "colorful!\\n"\ncprint y  "colorful!\\n"\ncprint b  "colorful!\\n"\ncprint p  "colorful!\\n"\ncprint c  "colorful!\\n"\n\nfunction y_print() { # $1 = string\n    local TEXT="$1"\n    local COLOR='\\033[1;33m'\n    local NC='\\033[0m'\n    printf "${COLOR}${TEXT}${NC}\\n"\n}\n\ny_print "This will be Yellow"
OS_|if [[ `uname` == 'Linux' ]]; then\n   OS=android\nelif [[ `uname` == 'Darwin' ]]; then\n   OS=ios\nfi
argv_|# accede al primo argomento passato in input\nif [ -z "$1" ]; then\n    echo usage: $0 directory\n    exit\nfi\nSRCD=$1\necho ${SRCD}
[gettext]
[jcl]
[jflex]
[d]
[c]
[maven]
[coldfusion]
[b]
[typoscript]
[scheme]
[dart]
[antlr4]
[texinfo]
[slax]
[assembly-agc]
[java]
c_hash_t_|// @deprecated synchronized, use c_map_\nHashtable companies = new Hashtable();\ncompanies.put("Google", "United States");\nstr = companies.get("Google");\ncompanies.containsKey("Google");\ncompanies.containsValue("Japan");\n\nEnumeration enumeration = companies.elements();\nwhile (enumeration.hasMoreElements()) {\n    System.out.println("hashtable values: " + enumeration.nextElement() );\n}\ncompanies.size()\nSet hashtableKeys = companies.keySet();\nCollection hashtableValues = companies.values();
file_put_contents_|import static java.nio.file.StandardOpenOption.*;\nimport java.nio.file.*;\nimport java.io.*;\n\npublic static void log(String s) {\n    String s = "Hello World! ";\n    byte data[] = s.getBytes();\n    Path p = Paths.get("./logfile.txt");\n\n    try (\n        OutputStream out = new BufferedOutputStream(\n          Files.newOutputStream(p, CREATE, APPEND)\n        )\n    ) {\n        out.write(data, 0, data.length);\n    } catch (IOException x) {\n        System.err.println(x);\n    }\n}\n\n 
file_separator_|path_separator_
c_set_|Set<Integer> set = new HashSet<Integer>();//unique\nset.add( int );\n\n 
logn|Log.log(Log.NOTICE,this,\|);
logm|Log.log(Log.MESSAGE,this,\|);
c_hash_|c_map_
loge|Log.log(Log.ERROR,this,\|);
logd|Log.log(Log.DEBUG,this,\|);
properties_|import java.util.Properties;\nProperties env = new Properties();\nprop.put(key, "");\nEnumeration<Object> en = env.keys();\nwhile (en.hasMoreElements()) {\n    String key = (String) en.nextElement();\n    str = env.getProperty(key);\n}\n
log_|private static org.apache.log4j.Logger logger = Logger.getLogger( this.getClass().getName() );\nlogger.error("error:");
str_substr_|str.substring(0,1)
str_contains_|line.indexOf('$') >= 0
date_|import java.util.Date;\nimport java.util.Formatter;\n\nString name = "";\nDate today = new Date();\nFormatter formatter = new Formatter();    \nformatter.format(" sono le %tT", today);\nSystem.out.println(formatter);\n\nSimpleDateFormat format = new SimpleDateFormat("ddMMyyyyHHmmss");\nString strd = format.format(today);\n\n\n\n
do_while_|do\n{\n\t\|\n}\nwhile($1);
str_trim_|str.trim()
for_|for (int i=0; i < a_chars.length; i++) {\n    System.out.println( a_chars[i] );\n}
throw_|throw new IllegalArgumentException("Invalid day of the week: "+value);
printf_|System.out.printf(" %s,  %.2f ", s, f );
El|else\n{\n\t\|\n}
str_lower_|str.toLowerCase()
iterator_next_|$1 $2 = ($1)$3.next();
array_merge_|public static String[] arrayMerge(String[] array1, String[] array2) {\n    List<String> list = new ArrayList<String>(Arrays.asList(array1));\n    List<String> list2 = Arrays.asList(array2);\n    list.addAll(list2);\n    return list.toArray(new String[0]);\n}\npublic static <T> T[] arrayMerge(T[] a, T[] b) {\n    int aLen = a.length;\n    int bLen = b.length;\n\n    @SuppressWarnings("unchecked")\n    T[] c = (T[]) Array.newInstance(a.getClass().getComponentType(), aLen+bLen);\n    System.arraycopy(a, 0, c, 0, aLen);\n    System.arraycopy(b, 0, c, aLen, bLen);\n\n    return c;\n}\npublic static <T>\n    Map<String, T> mapsMerge(Map<String, T> map1, Map<String, T> map2) {\n        Map<String, T> map3 = new HashMap<>();\n        map3.putAll(map1);\n        map3.putAll(map2);\n        return map3;\n    }
str_upper_|str.toUpperCase()
try_|try {\n\n} catch (IOException e) {\n    System.err.format("IOException: %s%n", e);\n} catch (Exception e) {\n    this.logger.error(e);\n    e.printStackTrace();\n} finally {\n    // resource.close()\n}\n
DMTN|DefaultMutableTreeNode
iterator_|Iterator<Object> it = obj_list.iterator();\nwhile ( it.hasNext() ) {\n    Object objKey = it.next();\n}\n
collection_|c_
c_map_sorted_|// extends Map, ensures entries are maintained in ascending key order\nSortedMap\nc_map_
for_v_|for(int $1 = 0; $1 < $2; $1++)\n{\n\t\|\n}
main_|// mkdir -p it/ev/prj\n// javac MyApp.java\n// java it.ev.prj.MyApp\n//\npackage it.ev.prj;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Enumeration;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Properties;\n\npublic class Main {\n  public static void main(String[] args) {\n    Main m = new Main();\n    m.run();\n\|  }\n  // constructor\n  public Main(){ }\n}\n
empty_|if (str.isEmpty()) {}
c_vector_|// @deprecated Vector synchronizes on each individual operation. \nVector<String> myVector=new Vector<String>(20,10);//initial cap+cap increment  \nmyVector.add("test str"); \nString str = myVector.get(0);\nmyVector.remove(0);\nmyVector.size();\t\n\nfor( int i=0; i<myVector.size(); i++ ) {\t\t\n    System.out.print( myVector.get(k)  );\n}\n\n
elseif_|else if($1)\n{\n\t\|\n}
STDIN_|import java.util.Scanner;   \nScanner scan = new Scanner(System.in);
for_c_|for(int $1 = 0; $1 < $2.size(); $1++)\n{\n\t$3 \| = ($3)$2.get($1);\n}
str_split_|if ( string.contains(".") ) {\nString[] parts = string.split(Pattern.quote(".")); // split takes a regex eg. "[.]" "\\\\."\n}
array_|array_str_\narray_int_\ncollection_\n\n
c_|import java.util.*;\n\nc_map_  //k-v pairs, unique k\n  c_map_sorted_\n// collection interface:\n  c_list_ //ordered\n  c_set_  //unique\n\tc_set_sorted_ //unique+sorted\n  c_queue_\n\n
while_|while($1) {\n\t\|\n}
json_decode_|import org.json.simple.JSONArray;\nimport org.json.simple.JSONObject;\nimport org.json.simple.JSONValue;\n\nJSONObject obj = (JSONObject) JSONValue.parse(json_str);\n\nprotected Properties jsonDecode(String json_content) {\n    Properties prop = new Properties();\n    \n    JSONObject obj = (JSONObject) JSONValue.parse(json_content);\n    JSONObject sectionVars = (JSONObject) obj.get("section_name");\n \n    Iterator<?> it = sectionVars.keySet().iterator();\n    while (it.hasNext()) {\n        Object objKey = it.next();\n        if (objKey instanceof String) {\n            String key = (String) objKey;\n            Object ObjectValue = sectionVars.get(key);\n            // legge solo valori stringa\n            if (ObjectValue instanceof String) {\n                prop.put(key, ObjectValue);\n            }\n            // TODO: leggere valori composti\n        }\n    }\n    return prop;\n}
const_|protected final static String DEFAULT_HOST = "127.0.0.1";
str_builder_|public static String multilineString(String... lines){\n   // String[] lines = {"Line 1", "Line 2" /*, ... */};\n   // StringBuilder è più veloce di StringBuffer e molto più veloce della concatenazione con + operator\n   StringBuilder sb = new StringBuilder();\n   String EOL = System.getProperty("line.separator");// '\\n'\n   for(String s : lines){\n     sb.append(s);\n     sb.append(EOL);\n   }\n   return sb.toStirng();\n}\n
iterator_while_|while( $1.hasNext() ) {\n\t\|}
for_downto_|for(int $1 = $2 - 1; $1 >= 0; $1--)\n{\n\t\|\n}
str_eq_|logLevel.equals("WARN")
file_get_contents_|// this.readConfiguration(conf, this.env) \nprotected String readFile( String path ) {\n    File envFile = new File(path);\n    if (envFile.exists()) {\n    BufferedReader br = null;\n    StringBuffer bf = new StringBuffer();\n    try {\n        br = new BufferedReader(new FileReader(envFile));\n        String line = null;\n        while ((line = br.readLine()) != null) {\n            bf.append(line);\n        }\n    } catch (FileNotFoundException e) {\n            this.logger.error(e);\n    } catch (IOException e) {\n            this.logger.error(e);\n    } catch (Exception e) {\n            this.logger.error(e);\n    } finally {\n        if (br != null) {\n            try { br.close(); } catch (IOException e) { }\n        }\n    }\n    return bf.toString();\n    }\n}
array_int_|int[] a_num = {34, 22,10,60,30,22};
c_list_toarray_|// Converting ArrayList to Array\nString[] simpleArray = list.toArray(new String[list.size()]);\nSystem.out.println( Arrays.toString(simpleArray) );
foreach_|for (String k : list ) {\n\n}
reg_scan_|import java.util.regex.Pattern;\nimport java.util.regex.Matcher;\n\n    public static void checkString(String s) {\n        Pattern twopart = Pattern.compile("(\\\\d+)-(\\\\d+)");\n        Matcher m = twopart.matcher(s);\n        if (m.matches()) {\n            System.out.println(s + " matches; first part is " + m.group(0) +\n                               ", second part is " + m.group(1) + ".");\n        } else {\n            System.out.println(s + " does not match.");\n        }\n    }\n
path_separator_|System.getProperty("file.separator")
c_list_|List<String> names = new ArrayList<String>();// ordered\nlist.add("SomeString");\nfor (String name : names){\n    System.out.println(name);\n}\n// c_array_list_\n\n\n
Il|SwingUtilities.invokeLater(new Runnable()\n{\n\tpublic void run()\n\t{\n\t\t\|\n\t}\n});
c_get|($1)$2.get($3)
class_by_name_|Worker worker = null;\ntry {\n    Class c = Class.forName(bean.getClassName());\n    worker = (Worker) c.newInstance();\n    // worker.dosomething()\n} catch (InstantiationException e) {\n    e.printStackTrace();\n} catch (IllegalAccessException e) {\n    e.printStackTrace();\n} catch (ClassNotFoundException e) {\n    e.printStackTrace();\n} catch (Exception e) {\n    e.printStackTrace();\n}\n
c_set_sorted_|TreeSet<integer> sortedSet = new TreeSet<Integer>(set);//unique+sorted\n
ne|nextElement()
microtime_|long start=System.currentTimeMillis();\n//... computation here\nlong end=System.currentTimeMillis();\nSystem.out.println(String.format("Tempo di esecuzione X() %d  millis ", (end-start));
hostname_|import java.net.InetAddress;        \nString hostname = "localhost";\ntry {\n    hostname = InetAddress.getLocalHost().getHostName();\n} catch ( Exception ex) {\n    System.out.println("Hostname can not be resolved"); \n}
c_unique_|c_set_\nc_set_sorted_
c_hash_table_|// @deprecated use HashMap map_ \n//Hashtable<String, Integer> numbers = new Hashtable<String, Integer>();\n//   numbers.put("one", 1);\n//   Integer n = numbers.get("two");
class_inner_|class Enclosing  {\n    \n    // ...\n     \n    class Inner {\n        // accesso diretto ai field e metodi dell’ospite\n    }\n    \n    static class InnerStatic {\n        // visibilità dei metodi dell'ospite come fosse una classe normale\n        // non può definire membri statici\n    } \n \n    interface InnerInterface {\n        //interfaccia interna a una classe\n    }\n     \n    public void metod() {         \n        // local: definita all'interno di un metodo, non visibile all'esterno\n        class LocalClass { }\n\t// accesso alle clessi inner:\n\tEnclising.Inner\n\tEncolsing.InnerInterface\n\tEnclosing.InnerStatic\n    }\n} \n\n// da classe esterna:\nEnclosing enclosing = new Enclosing( );\nEnclosing.Inner  v = enclosing.new Inner( );\n
if_|if($1)\n{\n\t\|\n}
ceil_|int c = (int) Math.ceil(a / (double) b);
c_map_|Map<Integer, String> hash = new HashMap<>();\nhash.put(2, "");\n// iteration\nfor (String key : map.keySet()) {}\nfor (Object value : map.values()) {}\nfor ( Map.Entry<String, Object> entry : map.entrySet() ) {\n    String key = entry.getKey();\n    Object value = entry.getValue();\n}\n
c_array_list_|// ordered, initial capacity\nArrayList<String> list = new ArrayList<String>(20);\n// \nlist.add("Item1");\nlist.add(2, "Item3"); // add to position\nlist.remove(0);\nlist.remove("Item3");// remove the first occurrence\n// \nint pos = list.indexOf("Item2");\nboolean element = list.contains("Item5");\nboolean check = list.isEmpty();\n\n// preferred \nfor (String str: list) {    System.out.println("Item is: " + str ); }\n\n// not always present .get(), linkedlist are slow index access\nfor (int i = 0; i < list.size(); i++) {\n    System.out.println("Index: " + i + " - Item: " + list.get(i) );\n}\n// iterator, old-style\nIterator<String> it=list.iterator();\nwhile(it.hasNext()){ String tmp = it.next(); }\n\n\n\n\n\n
mail_|import org.apache.commons.mail.SimpleEmail;        \n\n// send a diagnostic mail\n// uso: Main.sendDiagMail( String.format("Exception:%s\\n Trace:%s", e.getMessage(), e.getStackTrace() ) );\npublic static void sendDiagMail(String msg) {\n        \n    // questa operazione se fallisse non deve bloccare il programma\n    String hostname = "localhost";\n    try {    \n            hostname = InetAddress.getLocalHost().getHostName();\n    } catch ( Exception ex) {\n            ex.printStackTrace();\n            System.out.println("Hostname can not be resolved");\n    }\n        \n    try {\n            SimpleEmail email = new SimpleEmail();\n            email.setHostName("localhost");\n            email.addTo("devsmt@gmail.com", "taz");\n            email.setFrom("worker@"+hostname, "java worker "+hostname);\n            email.setSubject("Test message from "+hostname );\n            email.setMsg(msg);\n            String em_res = email.send();\n            out.println("email sent:" + em_res);\n    } catch (Exception ex) {\n            out.println("email error:" + ex.getMessage());\n            ex.printStackTrace();\n    }\n}
Br|BufferedReader $1 = new BufferedReader(\|);
json_encode_|import org.json.simple.JSONArray;\nimport org.json.simple.JSONObject;\nimport org.json.simple.JSONValue;\n\nMap<String, Object> data = new HashMap<String, Object>();\n    data.put( "name", "Mars" );\n    data.put( "age", 32 );\n    data.put( "city", "NY" );\n    JSONObject json = new JSONObject();\n    json.putAll( data );\n    System.out.printf( "JSON: %s", json.toString(2) );
c_toArray_|($1[])$2.toArray(new $1[$2.size()])
serr|System.err.println(\|);
json_parse_|json_decode_
for_a_|for(int $1 = 0; $1 < $2.length; $1++)\n{\n\t$3 \| = $2[$1];\n}
switch_|switch (args[0]) {  \n    case "aa":\n        System.out.println("much better");\n        break;  \n    default: \n        break;\n}
echo_|import static java.lang.System.out;\nout.println("str");\n//System.out.println("str");
load_|String fullClassName = "com.ibm.as400.access.AS400JDBCDriver";\nClass.forName(fullClassName);\nworker = (Worker) c.newInstance();\n
file_exists_|File f = new File("/Path/To/File/file.txt");\nif ( f.exists() ) {\n   ...\n}\nFile f = new File("/Path/To/File/or/Directory");\nif ( f.isDirectory() ) {\n   ...\n}\n\n
m_|public void test() {\n}
sprintf_|String s = String.format("result:%4d", i );\n
str_join_|    public static String strJoin (String[] a_s, String glue) {\n        int len = a_s.length;\n        if ( 0 == len ) {\n            return null;\n        }\n        StringBuilder out = new StringBuilder();\n        out.append( a_s[0] );\n        for ( int j=1; j < len; j++ ) {\n            out.append(glue).append(a_s[j]);\n        }\n        return out.toString();\n    }\n    public static String strJoin(String[] a_s, String glue) {\n        int len = a_s.length;\n        if ( 0 == len ) {\n            return null;\n        }\n        StringBuilder out = new StringBuilder();\n        out.append( a_s[0] );\n        for ( int j=1; j < len; j++ ) {\n            out.append(glue).append(a_s[j]);\n        }\n        return out.toString();\n    }\n    public static String strJoin(Collection a_s, String glue) {\n        StringOut out = new StringOut();\n        Iterator iter = a_s.iterator();\n        while (iter.hasNext()) {\n            out.append(iter.next());\n            if (iter.hasNext()) {\n                out.append(glue);\n            }\n        }\n        return out.toString();\n    }\n    public static String strJoin(String glue, String... a_s) {\n        return strJoin(a_s, glue);\n    }\n
str_explode_|str_split_
class_|/**\n * funzione\n */\npublic class __class__ {\n    private double amount;\n    public __class__(String owner) {\n        this.owner = owner;\n    }\n}
__END__|str_builder_
c_queue_|Queue<MyObject> queue = new LinkedList<MyObject>();\nMyObject myObject = queue.remove();\nfor(MyObject anObject : queue){ }
file_get_contents_net_|import java.net.*;\nimport java.io.*;\n \n    public static String getText(String url) throws Exception {\n        URL u = new URL(url);\n        URLConnection con = u.openConnection();\n        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\n        StringBuilder response = new StringBuilder();\n        String line="";\n        while ((line = in.readLine()) != null) {\n            response.append(line);\n\t}\n        in.close();\n        return response.toString();\n    }\nprivate static void printURL() throws Exception {\n  URL url = new URL(url);\n  \n  Scanner scan=new Scanner(url.openConnection().getInputStream());\n  scan.useDelimiter("\\Z");\n\n  while(scan.hasNext()){\n    String tmp = scan.next();\n    System.out.println(tmp);\n  }\n}
type_|byte \nshort \nlong \nfloat \ndouble \nboolean \nchar \nString[]  
new_|$1 $2 = new $1(\|);
ENV_|System.getProperty("line.separator");\nSystem.setProperty("as400.libreria", this.schema);\n\nMap<String, String> env = System.getenv();\nfor (String envName : env.keySet()) {\n    System.out.format("%s=%s%n", envName, env.get(envName));\n}\n// è possibile impostare una var via java cli flag -Dvar_name=value\n
instanceof_|str instanceof String
bool_|boolean
sout|System.out.println(\|);
memory_|    public void printMemory() {\n        int mb = 1024 * 1024;\n        //Getting the runtime reference from system\n        Runtime runtime = Runtime.getRuntime();\n        this.logger.debug("##### Heap utilization statistics [MB] #####");\n        //Print used memory\n        this.logger.debug("Used Memory:" + (runtime.totalMemory() - runtime.freeMemory()) / mb);\n        //Print free memory\n        this.logger.debug("Free Memory:" + runtime.freeMemory() / mb);\n        //Print total available memory\n        this.logger.debug("Total Memory:" + runtime.totalMemory() / mb);\n        //Print Maximum available memory\n        this.logger.debug("Max Memory:" + runtime.maxMemory() / mb);\n    }
cast_|String key = (String) objKey;\n// safe cast\nif (obj != null && obj instanceof JSONObject) {\n    JSONObject jsonObj = (JSONObject) obj;\n}\n\nInteger.toString( obj.getQuantity() );\n\n@SuppressWarnings("unchecked") 
array_str_|a_char = new String[20];// init for 20 elements\nString[] a_char = {"a", "b", "c"};// litterals\na_char[0] = "Cheese";//assign
print_|System.out.println(s);
floor_|int c = Math.floor(d);
enum_|// @deprecated use collections instead\npublic enum Days {\n\tSUNDAY(1),\n\tMONDAY(2),\n\tTUESDAY(3),\n\tWEDNESDAY(4),\n\tTHURSDAY(5),\n\tFRIDAY(6),\n\tSATURDAY(7)\n}\n//Printing all constants of an enum.\nfor(Day day: Days.values())\n\tSystem.out.println(day.name());\n\nString current = "SUNDAY";\nDays currentDay = Days.valueOf(current.toUpperCase());\n\nswitch (currentDay) {\n    case MONDAY:\n    case TUESDAY:\n    case WEDNESDAY:\n        System.out.println("boring");\n        break;\n    case THURSDAY:\n        System.out.println("getting better");\n    case FRIDAY:\n    case SATURDAY:\n    case SUNDAY:\n        System.out.println("much better");\n        break;\n}\n\n
singleton_|protected static $type instance = null;\npublic static $type getInstance() {\n    if (instance == null) {\n        instance = new $type();\n        instance.init();\n    }\n    return instance;\n}\n\n
_ENV_|// settata con: java -Dsystem.env=$ENV \nString currentEnv = System.getProperty("system.env");
reg_replace_|String replaceLinks(String html){\n    Pattern p = Pattern.compile("href=(?:\\"|\\')?Topic((?:\\\\d){1,3})\\\\.cjp(?:\\"|\\')?");\n    Matcher m = p.matcher(html);\n    return m.replaceAll("href=#$1");\n}\n\n \n 
logw|Log.log(Log.WARNING,this,\|);
[assembly-parrot]
[dot]
[xml]
[rakefile]
[powershell]
[cil]
[logtalk]
[postscript]
[sql-loader]
[redcode]
[literate-haskell]
[renderman-rib]
[doxygen]
[javacc]
[ruby]
[pike]
[applescript]
[ml]
[pascal]
//--|//------------------------------------------------------------------------------
case_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
while_|cds.First;\nwhile(not cds.EOF) do begin\n  cds.Next;\nend;
switch_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
[c#]
[bbj]
[freemarker]
[coffeescript]
[vbscript]
[visualbasic]
[url]
[povray]
[jmk]
[icalendar]
[slate]
[tld]
[shtml]
[haskell]
[gsp]
[hlsl]
[n3]
[typescript]
_reject_|var a_list = [1, 2, 3, 4, 5, 6];\nvar odds = _.reject<number>(a_list, (num:number):number => { return num % 2 == 0; });\n// => [1, 3, 5]
foreach_|_each_\n//for ( let k in _hash_ ) { if( _hash_.hasOwnProperty(k) ) { \n//    let v:any = <any>_a_[k];\n//}}\n
js_require_|js_include_
date_make_|var yr = 1999;\nvar mo = 9;\nvar dy = 10;\nvar hr = 23;\nvar mi = 30;\nvar ss = 0;\nvar t = new Date(yr, mo - 1, dy, hr, mi, ss);
min_|var n = Math.min(n1,n2);
a_t_|//typed array\nvar type_list = new Array<TheType>();
jq_is_|$( "ul" ).click(function( event ) {\n  var target = $( event.target );\n  if ( target.is( "li" ) ) {\n    target.css( "background-color", "red" );\n  }\n});
_keys_|_.keys({one: 1, two: 2, three: 3});\n//=> ["one", "two", "three"]
queue_|fifo_lifo_
if_|if( typeof_  $jq_selection.length && !_.isEmpty(o) ) {\|}
_sprintf_|var s = _.str.sprintf('%s', val);
jq_attr_|$(selector).attr(k, v);
jq_build_|$('<div/>', {\n    'id':'myDiv',\n    'class':'myClass',\n    'style':'cursor:pointer;font-weight:bold;',\n    'html':'<span>For HTML</span>',\n    'click':function(){ alert(this.id) },\n    'mouseenter':function(){ $(this).css('color', 'red'); },\n    'mouseleave':function(){ $(this).css('color', 'black'); }\n}).appendTo('body');
reg_get_|rx = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nm = rx.exec('2009-06-03');\nyr = m[1];\nmo = m[2];\ndy = m[3];
redirect_|window.location = "http://www.name.com/";
try_|try {\n\|} catch(e){\n        //console.log(e.message); \n\t//alert(format_exception(e));\n} finally {}
jq_ajax_|$.ajax({\n  url: '/data/people.json',\n  type: 'POST',\n  dataType: 'json',\n  success: function( resp_o ) {\n    $( '#target').html( resp_o.name );\n  },\n  error: function( req, status, err ) {\n    console.log( 'something went wrong', status, err );\n  }\n});
type_|type Hash = { [k: string]: any; };\ntype Dictionary<T> = { [k: string]: T; };// C#like: var aaa:Dictionary<number> = { 'a': 1 };\ntype Map<K,T> = { [key: K]: T; };// javalike: aaa:Map<Integer,String> \ntype List<T> = Array<T>;\n/*\n// shortcuts\ntype HashStr = Dictionary<string>;\ntype HashNum = Dictionary<number>;\n\n// optionals\ntype TStringOrNumber = string | number;\ntype TText_ = string | { text: string };\n// alias\ntype TObjectStatics = typeof Object;\n// tuple\nexport type TSQLExecTuple = [ string, any[] ];\n// parametricas\ntype TPair<T> = [T, T];\ntype TCoordinates_ = TPair<number>;\ntype TTree<T> = T | { left: Tree<T>, right: Tree<T> };\ntype TNameLookup = Dictionary<string, any>;\n// callbacks\ntype TMyHandler = (myArgument: string) => void;\ntype TCallback<T> = (data: T) => void;\n*/\n\n\n\ntype TCallbackFunc = () => void;\ntype TCallbackData = TCallback<any>;\ntype TCallback<T> = (data: T) => void;\ntype TCallback2<T,Y> = (a: T, b:Y) => void;\ntype TCallback3<T,Y,U> = (a: T, b:Y, c:U) => void;\n\n// String Literal Type:\ntype TCardinalDirection = "North" | "East" | "South" | "West";\nfunction move(direction: TCardinalDirection) {}\nmove("Nurth"); // Error!\n
dict_bb_|var a_list: _.Dictionary<string> = {};
_template_|var html = _.template("<%=k%>").call(this, {k: "aa"});
jq_post_|jq_ajax_post_
include_once_|// see require_ require_once_ include_ jq_require_
jq_prop_|var el = $(selector).prop(k, v); // see jq_attr_
sprintf_|sprintf('%s/%s', aa, bb )
round_|Math.ceil( num )
lambda_|var sqr2: (x: number) => number = (x) => {\n  return x * x;\n};
jq_effects_|$(this).show()       ;// Show the selected elements.\n$(this).hide()       ;// Hide the selected elements.\n$(this).fadeIn()     ;// Animate the opacity of the selected elements to 100%.\n$(this).fadeOut()    ;// Animate the opacity of the selected elements to 0%.\n$(this).slideDown()  ;// Display the selected elements with a vertical sliding motion.\n$(this).slideUp()    ;// Hide the selected elements with a vertical sliding motion.\n$(this).slideToggle();// Show or hide the selected elements with a vertical sliding motion
jq_style_|jq_css_
jq_html_|// Load HTML from the server and place into the matched elements\n$("#result").load("ajax/test.html", function() {\n    alert( "Load was performed." );\n});
preg_|reg_replace_
fifo_lifo_|var stack = [];\nstack.push(2);       // stack is now [2]\nstack.push(5);       // stack is now [2, 5]\nvar i = stack.pop(); // stack is now [2]\nconsole.log(i);      //  5\n\nvar queue = [];\nqueue.push(2);         // queue is now [2]\nqueue.push(5);         // queue is now [2, 5]\nvar i = queue.shift(); // queue is now [5]\nconsole.log(i);        // 2
for_|for (let _value_ of _a_ ) {  }  \n//for( let i:number=0; i<_a_.length; i++) { _value_[i] }
_find_|var a_list = [1, 2, 3, 4, 5, 6];\nvar even = _.find<number>(a_list, function(num){ \n    return num % 2 == 0; \n});\n//=> 2 returning the first one
array_|var a_: string[] = ['hello', 'world'];
time_|var t_start:number = Date.now();\n_time_
call_|func.call(thisArg|null, arg1, arg2 );
str_match_|var is_found = 'For more information, see Chapter 3.4.5.1'.match( /(chapter \\d+(\\.\\d)*)/i );\nvar is_numeric = s_num.match(/^[0-9]+$/) !== null;\nconsole.log(is_found, is_numeric);
f__|function \|():void { return; }
case_|case 'nnn':\nbreak;
to_array_|var args = Array.prototype.slice.call(arguments);
is_empty_|jq_is_empty_
_map_|var a_=_.map([1, 2, 3], function(num){ return num * 3; }); // [3, 6, 9]\nvar a_=_.map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; }); // [3, 6, 9]
sp_|sprintf_
lifo_|fifo_lifo_
jq_promise_|// \npublic static findById(item_id:string): JQueryPromise< Array<T> > {\n    var deferred:JQueryDeferred< Array<any> > = $.Deferred();\n    var data: Array<T> = [];\n    // eg. async\n    setTimeout(function() {\n        deferred.resolve( data );// il tipo di JQueryPromise<T>\n    }, 100 );\n    return deferred.promise();\n}\n// caller: per una operazione asincrona ritorna .promise(),\n// intercetta il .done() con una callback\nvar promise: JQueryPromise<T> = findById(item_id);\npromise.done( function(data:T) { });
_filter_|var a_list = [1, 2, 3, 4, 5, 6];\nvar _a = _.filter<number>(a_list, (num:number):boolean => { \n    return n % 2 == 0; \n});\n// => [2, 4, 6]
include_|require_
jq_json_|jq_ajax_json_
jq_disable_|// su checkbox\n$('form#form_id #checkid').change(function(){\n    if( this.checked ){\n        $('form#form_id input:text').attr('disabled','disabled');\n    } else {\n        $('form#form_id input:text').removeAttr('disabled');\n    }\n}).trigger('change');\n\n// tutti i submit di una form\n$('form#form_id').map(function(){\n    var selector_btn = 'input[type=button], input[type=submit], :submit';\n    $(this).find(selector_btn).prop('disabled', true);\n});
jq_dom_map_|$("input").map(function(){\n      return $(this).val();\n    }).get().join(", ")
jq_contains_|str_contains_
str_toupper_|str.toUpperCase()
jq_is_numeric_|var is_num = $.isNumeric( num );
_some_|//Returns true if any of the values in the list pass the predicate truth test. Short-circuits and stops traversing the list if a true element is found.\n_.some([null, 0, 'yes', false]);\n//=> true
__FUNCTION__|arguments.callee.name;\narguments.callee.caller.toString()
date_add_|// use moment()\nvar t1 = new Date();\nvar delta = (10 * 60 + 3) * 1000;\nvar t2 = new Date(t1.getTime() + delta);
jq_get_|jq_ajax_get_
jq_when_|// da utilizzare per sincronizzare una coda di operazioni\nvar d1:JQueryPromise<any> = $.ajax('/page1.php'); // $.Deferred(); d1.resolve();\nvar d2:JQueryPromise<any> = $.ajax('/page2.php'); // $.Deferred(); d2.resolve('abc');\n\n$.when( d1, d2 ).done( ( v1:any, v2:any ) => {\n    console.log( v1 ); // v1 is undefined\n    console.log( v2 ); // v2 is "abc"\n});\n \n\n\n\n
jq_wrap_all_|$( ".inner" ).wrapAll( "<div class='my_css' />");
str_contains_|var is_containing_x = url.search(/xxx/) != -1;\nvar is_containing_x = /yes/i.test('xxx') ;\nvar is_containing_x = str.toLowerCase().indexOf("xxx") >= 0);\nvar is_numeric = s_num.match(/^[0-9]+$/) !== null;
singleton_|// instance = SingletonClass.getInstance();\nclass SingletonClass {\n    private static _instance:SingletonClass = new SingletonClass();\n    public static getInstance():SingletonClass {\n        return SingletonClass._instance;\n    }\n    constructor() {\n\t// enforce singleton\n        if(SingletonClass._instance) {\n            throw new Error("Error: Instantiation failed: Use SingletonClass.getInstance() instead of new.");\n        }\n        SingletonClass._instance = this;\n    }\n}
reg_scan_|"dolor sit amet".match(/\\w+/g);
is_object_|function is_object(v) {\n    //One of the quirks of JavaScript is that typeof null returns "object". But it’s not an object. So let’s check for that, too\n    return (v instanceof Object && v.toString() == '[object Object]');\n}
jq_remove_|// elimina dal DOM i nodi selezionati\n$(selector).remove();
_min_|var numbers = [10, 5, 100, 2, 1000];\n_.min(numbers);\n//=> 2
cache_|var key:string = _.str.sprintf('%s_%s_%s', 'app.adapters.items', searchKey, use_bestsellers );\n        if( MemCache.has(key) ) {\n            results = MemCache.get(key);\n        } else {\n            // compute list\n            results = getItemsFilterd(searchKey, use_bestsellers);\n        }
jq_wrap_|$("p").slice(1,3).wrap("<i></i>");\n
__END__|var t = `\nmultiline string  ${var}\n`;
interface_rec_|interface IPerson {\n    name: string;\n    descr?: string;\n    methodName(): string;\n    // overloading\n    select2(method: string): any;\n    select2(method: string, value: any, trigger?: boolean): any;\n}\n
namespace_|namespace Utils {\n    export function log(msg) {\n        console.log(msg);\n    }\n    export function error(msg) {\n        console.error(msg);\n    }\n}
factory_|function createObject(name) \n{\n  var privateName = name || "I am private name";\n  var privateMethod = function () {\n    return "result of private"; \n  }\n  return {\n    publicName: "I am public name",\n    publicMethod: function () {\n           alert("privateName is " + privateName + ", privateMethod called: "+ privateMethod()); \n      }\n  }\n}
jq_each_|$.each(associative_array, function(key, value) { \n  alert(key + ': ' + value); \n});
_size_|_.size(hash)
get_|    private _name: string;\n    get name(): string {\n        return this._name;\n    }\t\n    set name(s: string) {\n        this._name = s; \n    }
jq_exists_|jq_hasnode_
substr_|str.substring(0,2);
max_|var n = Math.max(n1,n2);
jq_css_|el.css({\n\tbackgroundColor: '#ffe', \n\tborderLeft: '1px solid #ccc' \n}).css('width', function( i) {\n  return i * 50;\n}).css('width', '+=200');
implode_|a_s.join(", ")
in_array_|_.indexOf([], val) !== -1\n// _contains_
json_encode_|var str:string = JSON.stringify(obj);
_contains_|//Returns true if the value is present in the list. Uses indexOf internally\n_.contains([1, 2, 3], 3);\n// => true
preg_scan_|"dolor sit amet".match(/\\w+/g);
log_|console.log( sprintf('%s', aaaa) );\n// console.trace();
profile_|var t_start:number = Date.now();\nvar timeElapsed:number = (Date.now()-t_start);\n"time: "+timeElapsed+" msec"
staticp_|public static func(){\n}
func_|function(){\n\|}
static_|static member(b:string):string { return ''; }
jq_ready_|$(function(){\|});
_pick_|_.pick({name: 'moe', age: 50, userid: 'moe1'}, 'name', 'age');\n=> {name: 'moe', age: 50}\n_.pick({name: 'moe', age: 50, userid: 'moe1'}, function(value, key, object) {\n  return _.isNumber(value);\n});\n//=> {age: 50}
jq_delegate_|$( "table" ).delegate( "td", "click", function() {\n  $( this ).toggleClass( "chosen" );\n});
_pluck_|// extracting a list of property values.\nvar a_customer = [\n{name: 'moe', age: 40}, \n{name: 'larry', age: 50}, \n{name: 'curly', age: 60}\n];\n_.pluck(a_customer, 'name');\n//=> ["moe", "larry", "curly"]
_empty_|_.isEmpty(obj)
bb_model_|\nexport class Order extends Backbone.Model {\n    // Data.local.promotions.getItemPromotion(BCOART);\n    initialize(attributes?: any): void {}\n    defaults(){ return {} }\n    validate(attrs, options) { }\n}\nexport class OrderCollection extends Backbone.Collection {\n    constructor(models?: any, options?: any){ \n        super(models, options); \n    }\n    initialize() { \n        this.model = Models.Order;\n    }\n}\n\n
date_|moment().format('YYYY-MM-DD HH:mm:ss');
let_|let foo = 123;\n/* if (true) {\n    let foo = 456;//this is block scoped, will not effect the prev. def as usual\n}\nconsole.log(foo); => 123 */
indexof_|//var a = ['apple','orange','pear'];\nvar is_found = (a.indexOf("orange") != -1);\nvar has_char = str.indexOf('@') === -1;
jq_submit_|$('form').submit(function(e){\n    e.preventDefault();// prevent the default browser behaviour on this case\n    var isErrorFree = true;\n    // custom validation\n    $('input.required, select.required, textarea.required',this).each(function(){\n        if ( validateElement.isValid(this) == false ){\n            isErrorFree = false;\n        };\n    });\n    if (isErrorFree){ \n\t// disable multiple submissions\n        $(this).find('button, input[type=submit]').attr('disabled', 'disabled');\n\t// send data\n\tvar a_ = $(this).serializeArray();\n\t$.post( url, data, callback, type );\n    }\n    return isErrorFree;\n});\n\n
jq_checked_|$(":checkbox").is(':checked')
array_key_exists_|_has_
define_|const KEYCODE_ENTER = 13;
jq_promise_when_|var d1 = $.Deferred();\nvar d2 = $.Deferred();\nvar d3 = $.Deferred();\n \n$.when( d1, d2, d3 ).done(function ( v1, v2, v3 ) {\n    console.log( v1 ); // v1 is undefined\n    console.log( v2 ); // v2 is "abc"\n    console.log( v3 ); // v3 is an array [ 1, 2, 3, 4, 5 ]\n});\n \nd1.resolve();\nd2.resolve( "abc" );\nd3.resolve( 1, 2, 3, 4, 5 );
json_|var data = JSON.parse(text);\nvar text = JSON.stringify(data);
jq_foreach_|$.each(a, function(i,key){\|});
_reduce_|var a_list:Array<number> = [1, 2, 3];\nvar sum:number = _.reduce< number, number>(a_list, function(memo, num) { \n    return memo + num; \n}, 0);\n// 6
funzione_|docstring_
jq_is_empty_|jQuery.isEmptyObject({}); // true\njQuery.isEmptyObject({ foo: "bar" }); // false
bb_find_|this.$('scoped selector');
func_get_args_|function test(s: string, ...rest: string[]): void {\n    console.log(s);\n    if (rest.length) {\n        console.log(rest[rest.length - 1]);\n    }\n}
timestamp_|var now = new Date().getTime().toString();
opt_|p_options:{[k: string]:any;}\nvar options = _.extend({         \n    param: true\n}, p_options );
parseInt_|parseInt("221100", 10);
a_num_|var a_: Array<number> = [1, 2];
jq_form_validate_|// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js\n// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js\n// @see http://jqueryvalidation.org/\n$().ready(function() {\n    // Selecting the form and defining validation method\n    $("#form").validate({\n        // Passing the object with custom rules\n        rules : {\n            // login - is the name of an input in the form\n            login : {\n              // Setting login to be required\n              required : true\n            },\n            email : {\n                required : true,\n                // Setting email pattern for email input\n                email : true\n            },\n            password : {\n                required : true,\n                // Setting minimum and maximum lengths of a password\n                minlength : 5,\n                maxlength : 8\n            }\n        },\n        // Setting error messages for the fields\n        messages: {\n            login: "Enter you login",\n            password: {\n                required: "Enter your password",\n                minlength: "Minimum password length is 5",\n                maxlength: "Maximum password length is 8"\n            },\n            email: "Enter you email"\n        },\n        // Setting submit handler for the form\n        submitHandler: function(form) {\n            form.submit();\n        }\n    });\n});
declare_|declare function sprintf(fmt: string, ...args: any[]): string;\n// global var typing\ndeclare var cordova: Cordova;
jq_extend_|var settings = $.extend({ test: 1 }, opt);\n
when_|jq_when_
closure_|for (var i = 0; i < 3; i++) {\n    // sulution 1\n    function make_handler(index): () => {\n        var handler = () => {\n            index += 1;\n            return i;\n        }\n        return handler;\n    }\n    // sulution 2\n    (function(index) {\n        console.log('iterator: ' + index);\n    })(i);\n    on_click( make_handler(i) );\n}\n// @see foreach_\n
cb_|successCallback?: (arg1: number)=>void
jq_target_|$('').click(function(e){\nvar el = jQuery(e.target).closest('tr');\n});
jq_get_json_|var r:JQueryXHR = $.getJSON(url: string, data?: Object, \n\tfunction(data: any, textStatus: string, jqXHR: JQueryXHR){\n});\n
jq_find_|$( 'li' )\n.find( 'span' )\n.attr( 'title', 'Hover over me' )\n.click(function() {\n    $( this ).addClass( 'clicked' );\n});
_every_|// Returns true if all of the values in the list pass the predicate truth test. Short-circuits and stops traversing the list if a false element is found.\n_.every([2, 4, 5], function(num) { return num % 2 == 0; });\n// => false
jq_promise_multiple_|jq_promise_when_
jq_by_attribute_|var el = $("[attribute='value']");
now_|moment().format('YYYY-MM-DD hh:mm:ss')
merge_|jq_merge_
jq_data_|data-hidden="true" data-options='{"name":"John"}'\n$("div").data("hidden") === true;\n$("div").data("options").name === "John";
jq_serialize_|// URL-encoded notation\nvar url_data = $('form').serialize();\n// array [{ name: "a", value: "1" }]\nvar a_data   = $('form').serializeArray();\n
jq_mouse_over_|$('div').mouseover(function() {\n    $(this).addClass('blue-bg');\n}).mouseleave(function(){\n    $(this).find('.content').fadeOut();\n});
empty_|_empty_
require_|import_\nreference_
jq_main_|$(() => {\n// $.ready\n});
extend_|jq_extend_
trim_|var s = $.trim(str);
jq_end_|$( "ul.first" )\n  .find( ".foo" )\n    .css( "background-color", "red" )\n  .end()  // returs a query object\n  .find( ".bar" )\n    .css( "background-color", "green" );
each_|_each_
deferred_|jq_promise_
str_replace_|s = "do re mi mi mi";\ns.replace(/mi/g, "ma");
array_values_|_.values(aaa)
hash_|dict_js_
jq_unique_|var a_unique = $.unique( a_ );
_max_|var stooges = [{name: 'moe', age: 40}, {name: 'larry', age: 50}, {name: 'curly', age: 60}];\n_.max(stooges, function(stooge){ return stooge.age; });\n//=> {name: 'curly', age: 60};
isset_|typeof  != 'undefined'\n// !== void 0\n
jq_filter_|$(".parent").find(".bar").filter("p");
f_|() => {\n    \|\n}
//--|\|//------------------------------------------------------------------------------
switch_|switch(string) {\n    case 'nnn':\n        teststr();\n    break;\n    default:\n        teststr();\n}
dict_|dict_js_
ceil_|var n = Math.ceil(7.004); // 8
rand_|_rand_
require_once_|// see require_ require_once_ include_ jq_require_
jq_hover_|jQuery('#something').hover(\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 1, 1000 )\n.animate( {height:500}, 1000 );\n},\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 0.8, 1000 )\n.animate( {height:200}, 1000 );\n}\n);\n
block_|// blocca l'esecuzione fino a trovare un risltato e ritorna\nfunction somethingSync(args){\n    var ret; //the result-holding variable\n    //doing something async here...\n    somethingAsync(args,function(result){\n        ret = result;\n    });\n    //wait for the result until it's available, cause the blocking\n    while(ret === undefined){} \n    return ret;\n}
method_|protected method():void {\n\n}
prompt_|var s = prompt("question","default");\nif ( s!=null && s!="" ) {\n}
reference_|/// <reference path="jquery.d.ts" />
printf_|sprintf_
import_|import * as Calculations from './Scripts/Calculations';\nreference_
filter_|var _a = a.filter(function(v){\n    return v.name === "test";\n});
is_numeric_|jq_is_numeric_
join_|array.join(',');
jq_inarray_|var a_ = [ "8", "9", "10", 10 + "" ];\nvar is_ = $.inArray( 10, a_ );
construct_|constructor(public x: number ) { \n  //super();\n}\n//public getX() { return this.x; }\n
jq_append_|$('<div/>').append(text).css({}).appendTo('#log');\n$('<option/>').attr('value',optionValue).text(optionName).appendTo('#colors');\n// jq_build_\n
parent_|super.methodName()
a_str_|var a_: Array<string> = ['a','b'];
array_slice_|array.slice(pos, page_len)
generic_|// Generic functions example\nfunction reverse<T>(list: T[]) : T[] {\n  var reversedList: T[] = [];\n  for (var i = (list.length - 1); i >=0; i--) {\n    reversedList.push(list[i]);\n  }\n  return reversedList;\n}\nvar numbers = [1, 2, 3, 4];\nvar reversedNumbers = reverse<number>(numbers); // 4, 3, 2, 1\n\nfunction map<T, U>(a: T[], f: (x: T) => U): U[] {\n  var result: U[] = [];\n  for (var i = 0; i < a.length; i++) result.push(f(a[i]));\n  return result;\n}\nvar names = ["Peter", "Paul", "Mary"];\nvar lengths = map<string, number>(names, s => s.length);\n\n\n\n\n
jq_checkbox_|$( 'input:checkbox(:not(:disabled))' ).prop( 'checked', 'checked' );
_time_|_.now();\n//=> 1392066795351
lastIndexOf_|-1 !== window.location.pathname.lastIndexOf('/lampa_Orders/');
dict_js_|var item_list: { [k: string]: Object; } = { };
unique_|jq_unique_
jq_ajax_multiple_|$.when(\n    getTweets('austintexasgov'),\n    getTweets('greenling_com'),\n    getTweets('themomandpops')\n).done(function(atxArgs, greenlingArgs, momandpopsArgs) {\n    var allTweets = [].concat(atxArgs[0]).concat(greenlingArgs[0]).concat(momandpopsArgs[0]);    \n    alert(sortedTweets);\n});\nvar getTweets = function(user) {\n    var url = 'http://twitter.com/status/user_timeline/' + user + '.json';\n    return $.get(url, { count: 5 }, null, 'jsonp');\n}\n
jq_ajax_setup_|//\n// ajax loading indicator\nvar el_loading = $('<div/>').attr('id','loading').text('loading...').css({\n    display: 'none',\n    position: 'fixed',\n    top: '0',\n    right: '0',\n    padding: '10px',\n    border: '1 px solid #ccc',\n    backgroundColor: 'rgba(255,255,255, 0.4)',\n}).appendTo(document.body);\n\n$( document ).ajaxStart(function () {\n    el_loading.show();\n});\n$( document ).ajaxStop(function () {\n    el_loading.hide('slow');\n});\n// intercetta gli eventi jquery ajax per logging\n$(document).ajaxComplete(function() {\n    console.log( "Triggered ajaxComplete handler." );\n});\n$(document).ajaxError(function() {\n    console.log( "Triggered ajaxError handler." );\n});\n$(document).ajaxSend(function() {\n    console.log( "Triggered ajaxSend handler." );\n});\n$(document).ajaxSuccess(function() {\n    console.log( "Triggered ajaxSuccess handler." );\n});
proxy_|jq_proxy_
stack_|fifo_lifo_
replace_|s = s.replace("old","new");
overload_|interface IFoo {\n    bar: {\n        (s: string): number;\n        (n: number): string;\n    }\n}\nclass Foo{\n    public bar(s: string): number;\n    public bar(n: number): string;\n    public bar(arg: any): any {\n        if (typeof(arg) === 'number'){\n            return arg.toString();\n        }\n        if (typeof(arg) === 'string'){\n            return arg.length;\n        }\n    }\n}
jq_insert_|$( "h2" ).insertAfter( $( ".container" ) );
apply_|fun.apply(this_obj, array_arguments );
jq_load_|// it and all sub-elements have been completely loaded\n$('#book').load(function() {\n\n});
moment_|var om = moment("12-25-1995", "MM-DD-YYYY");\nconsole.log( om.format("MM-DD-YYYY") );
interface_|interface_rec_\ninterface_func_\ninterface Window { device: IDevice; }\n\n
main_|(function main() {\n\n}());
jq_key_press_|<input type="text"><span id="test_out">0</span> \n<script type="text/javascript">\nvar i = 0;\n$(function(){\n    $("input").keypress(function(){\n        $("#test_out").text(i += 1);\n    });\n});\n</script>\n
object_|var T = {\n    name: "a", \n    say: function() {\n        alert(this.a); \n    }\n};
while_|while( true ){\|}
template_|mustache_
public_|public \|():boolean {\nreturn true;\n}
jq_fade_|if (el.is(':visible')) {\nel.fadeOut('slow');\n} else {\nel.fadeIn('slow');\n}
var_|log_
url_decode_|var v="JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B";// "JavaScript_шеллы"\nvar v = decodeURIComponent(v);
reg_test_|var re_email = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-]{2,})+.)+([a-zA-Z0-9]{2,})+$/;\nif ( _.isEmpty(str) || !re_email.test(str)  ) { console.log("not email "+str); } else { console.log('email format ok '+str); }\n\nvar is_numeric = s_num.match(/^[0-9]+$/) !== null;\n\n\n
jq_grep_|var a_res_months = $.grep(a_months, function(v, i) {\n    return ( v.indexOf('J') == 0 );\n});\n
jq_by_name_|var email = $("input[name='email']").val();
mustache_|var data_obj = {\n  title: "Joe",\n  calc: function () {\n    return 2 + 4;\n  }\n};\nvar html = Mustache.render("{{title}} spends {{calc}}", data_obj );
jq_select_|// lavorare con una select\n// al change di un selct variare le options di una select dipendente\n$('#cod_linea').change(function(){\n           var f = $('#form_item_search');\n           var select = $(this);\n           var val = select.find('option:selected').val()\n           console.log(val);\n           $.ajax({\n               url: '<?=$url_ajax_options?>',\n               type: 'POST',\n               dataType: 'json',\n               data: f.serialize(),\n               success: function( resp_o ) {\n                   console.log(resp_o);\n                   var select_col = $('#cod_collection');\n                   // select_col.empty(); // remove old options\n                   $(select_col).find('option:gt(0)').remove(); // remove all options, but not the first\n\n                   $.each(resp_o , function(i, rec) {\n                           //console.log( rec );\n                           //console.log( rec['ADESCR'] );                           \n                           var html_value =  rec['ANUCOL'];\n                           var html_label =  rec['AAACOL'];\n                           select_col.append($("<option></option>").attr("value", html_value).text(html_label));\n                   });\n               },\n               error: function( req, status, err ) {\n                   console.log( 'something went wrong', status, err );\n               }\n    });\n});\n
enum_|const enum Comparison {\n    LessThan = -1,\n    EqualTo = 0,\n    GreaterThan = 1\n}\nvar x:number = Comparison.EqualTo; // Ok, replaced with 0 in emitted code\nvar y:string = Comparison[Comparison.EqualTo];\n
jq_deferred_|jq_promise_
settimeout_|// function is only executed once\nvar timer = window.setTimeout(function(params){\n    console.log(params);\n}, 2*1000, params);\n// window.clearTimeout(timer); // deletes the scheduled execution
interval_|var intervalID = window.setInterval(function(){}, 500); \nclearInterval(intervalID);
jq_scroll_|// todo!
str_lower_|str.toLowerCase()
js_log_|console.log();
jq_hasnode_|if( $('#selector').length > 0 ) {}
promise_|jq_promise_
bind_|fun.bind(this_obj , arg1, arg2 ... );
js_include_|function include(js_url){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = js_url;\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x);\n}
byid_|var el = document.getElementById('id');
reduce_|var _a = a.reduce(function(carry, v) {\n    carry = carry + v;\n    return carry;\n}, (var initial=0) );
_count_|_size_
jq_events_|// custom events\n$( document ).on("light:on", {\n    foo: "bar"\n}, function( event, arg1, arg2 ) {\n    console.log( event.data.foo, arg1, arg2 );\n});\n$(document).trigger("light:on", ["bim", "baz"]);\n\n
is_array_|_.isArray(aaa)
_has_|_.has({a: 1, b: 2, c: 3}, "b");\n//=> true
is_string_|_.isString(myVar)\n// typeof myVar === 'string' || myVar instanceof String
jq_merge_|var a = $.merge( [1,2], [3,4] ); // jq_extend_
_values_|_.values({one: 1, two: 2, three: 3});\n//=> [1, 2, 3]
jq_empty_|// rm all child nodes\n$(selector).empty();
jq_require_|// Load a JavaScript file from the server using a GET HTTP request, then execute it \nvar r:JQueryXHR = $.getScript(url: string, function(script: string, textStatus: string, jqXHR: JQueryXHR){ \n\n});
is_function_|jq_is_function_
fifo_|fifo_lifo_
jq_ajax_post_|var jqxhr = $.post("ajax/test.html", {k:v}, function( data ) {\n  \tconsole.log( data );   \n}, 'json') \n  .done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
interface_func_|interface ICallbackType extends Function { \n  (msg: string): void;  // def firma di una callback\n}\n// inline:  callback: { (pos: number): void }\n// inline2: callback: (pos: number) => void \n
jq_map_|var a = $.map( [2,3,4], function(n){\n   return n*2;\n});//[4, 6, 8]
docstr_|doctring_
const_|const MAX_DIM_CHUNK=50; //sqlite limit 999
jq_click_|$('form input:checkbox').on('click', function(e:JQueryEventObject){\n  e.preventDefault();\n  var txt = $( this ).text();//accedere all'elemento cliccato\n        \|});\n// passing data\n$("button").on("click", { name: "Karl"}, function greet( e:JQueryEventObject ) {\n  alert( "Hello " + e.data.name );\n});
typeof_|isset_
jq_isnode_|if( $('#selector').length > 0 ) {}
date_now_|var t:number = (new Date()).getTime() / 1000
console_|log_
bb_collection_find_|var clientList = new Models.ClientCollection();\nvar p_fetc:JQueryPromise<any> = clientList.fetch({\n    reset: true,\n    data: {\n        cod_cliente: cod_cliente\n    },\n    /*success: ( list: any, response: any, options: any ) => {\n        var client_model:Models.Client = list.at(0);\n        var html = this.getHTML(client_model);\n        this.$('.content').html(html);\n    }*/\n} as any );\np_fetc.done( (rec:Hash ) => {\n    var client_model:Models.Client = <Models.Client> clientList.at(0);\n    var html = this.getHTML(client_model);\n    $(Views.Modals.BaseModal.getContentElement(modal_id)).html(html);\n});\n\n
reg_replace_|str.replace(/[^A-Za-z0-9_]+/g, "_");
function_|//\nfunction add(x: number): number {\n    return x;\n}
throw_|throw new Error("msg");
stop_|e.stopPropagation();//bubbling\ne.preventDefault();
jq_filter_f_|$('li').filter(function(index) {\n  return $('strong', this).length == 1;\n}).css('background-color', 'red');
floor_|var n = Math.floor( 45.95 ); //  45
regexp_|var re = /\\w+/;\nvar re_m = regex.exec(text);\nconsole.log(re_m[1]); \n// str_match_ str_replace_
module_|module M {\n    export class C {\n    }\n}
jq_selector_|jq_selector_list_
is_str_|_.isString( str ) 
callback_|cb_
jq_ajax_get_|var jqxhr = $.get( '/data/people.html', function( html ){\n  $( '#target' ).html( html );\n}).done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
cast_|// var foo: any; var foo = {} as IFooInterface;\np_index_fields:string|string[]\nif( _.isArray(p_index_fields) ) {\n    var a:string[] = <Array<string>>p_index_fields;\n    index_fields = a.join(', ');\n} else {\n    index_fields = <string>p_index_fields;\n}\n//(<any>this)._bindRoutes();\n
count_|[].length\n//var k_num:number = _.size(hash);
jq_ajax_json_|var params:Hash = { 'k': v };\nvar jqxhr = $.getJSON("/controller/action", params, (data:Hash) => {\n     console.log("JSON Data: " + data.name);\n}).fail((req, status, err) => {\n    console.log( "jqxhr error:"+status+' '+err );\n});\n\n
map_|var _a = a.map(function(v,k){\n    v.name = '"'+v.name+'"';\n    return v;\n});
bb_view_|// var instance = new Views.__ViewName__({\n//     el: $('#myid'),\n//     model: mymodel\n// });\n// instance.render().delegateEvents();\n\nmodule Views {\n    export class __ViewName__ extends Backbone.View {\n        // TS constructor\n        constructor( opt: any) {\n            // ... init properties\n            super(opt);// BB chiamerà this.initialize(opt);\n            console.log( sprintf('__ViewName__ iconstruct') );\n        }\n        // BB contructor\n        initialize(opt:any) {\n            // UI events update the model, listen the model change, update the view\n            this.listenTo(this.model, 'change', this.render);\n        }\n        finalize() {\n            this.stopListening(model, 'change');\n        }\n        render() {\n            var data = this.model.attributes;\n            // subviews: preferibile configurarle per renderle manualmente\n            // this.collection.each(function(m){\n            //     var tmpView = new subView({ model: m });\n            //     this.$el.append(tmpView.render().el);\n            // }, this);\n            var html = '<div class="content">test test</div> ';\n            this.$el.html(html);\n            return this;\n        }\n        events() {\n            return {\n                'click .content': 'onOpen',\n            };\n        }\n        onOpen(event:JQueryEventObject) {\n            //this.model.set({ name: $("#name").val()});\n            this.render();\n            alert('test');\n        }\n        // id in cui verrà resa la view come pagina\n        getPageID() { return '__ViewName__'; }\n    }\n}
jq_rm_|jq_remove_
array_merge_|var a = _.extend(a1, a2);\n// a_val.concat(a_val2); // merge di array sequenziali
jq_dom_node_|var dom_node = $( "li" ).get( 0 );\nconsole.log( dom_node+' '+$.type(dom_node) );
interface_jquery_plugin|\n// define plugin options\ninterface Select2Options {\n    width?: string;\n    dropdownAutoWidth?: boolean;\n    minimumInputLength?: number;\n}\n\ninterface JQuery {\n    select2(): JQuery;\n    select2(it: IdTextPair): JQuery;\n    select2(options: Select2Options): JQuery;\n}
jq_animate_|$( this ).animate({\n    left: '+=50', // increase by 50\n    opacity: 0.25,\n    fontSize: '12px' //camelcase when prop name like "font-size"\n  },  300,  function() {\n    // executes when the animation is done\n  }\n);\n.stop(); // will stop currently running animations \n.delay(milliseconds); // will pause before the execution of the next animation method
localstorage_|if(typeof localStorage !== "undefined") {\n    // update key\n    var = key = 'clickcount';\n    if ( typeof localStorage[key] !== "undefined" ) {\n        localStorage[key] = localStorage[key] + 1;\n    } else {\n        localStorage[key] = 1;\n    }\n    // eliminare dati:\n    // localStorage[key] = null;\n    // localStorage.removeItem(key);\n}\n
_each_|_.each<string>(hash, (val:string, key:string) => { \n    // do not return, just iter. @see _map_\|});
except_|throw "errormsg\|";
timeout_|setTimeout(function(){ alert("Hello"); }, 300);
jq_selector_list_|/*\n    All                         *   \n                                :animated \n    Attribute Contains Prefix   [name|=  value  ]\n    Attribute Contains          [name*=  value  ]\n    Attribute Contains Word     [name~=  value  ]\n    Attribute Ends With         [name$=  value  ]\n    Attribute Equals            [name=  value  ]\n    Attribute Not Equal         [name!=  value  ]\n    Attribute Starts With       [name^=  value  ]\n                                :button\n                                :checkbox \n                                :checked \n    Child                       parent > child   \n    Class                       .class   \n                                :contains   \n                                :disabled \n                                :empty \n                                :enabled \n                                :eq   \n                                :even \n                                :file \n                                :first-child \n                                :first-of-type \n                                :first \n                                :focus \n                                :gt   \n    Has Attribute               [name]\n                                :has   \n                                :header \n                                :hidden \n    ID                          #id   \n                                :image \n                                :input \n                                :lang   \n                                :last-child \n                                :last-of-type \n                                :last \n                                :lt   \n    Multiple Attribute          [name=value][name2=value2″]\n    Multiple                    selector1, 2, N   \n    Next Adjacent               prev + next   \n    Next Siblings               prev ~ siblings   \n                                :not   \n                                :nth-child   \n                                :nth-last-child   \n                                :nth-last-of-type   \n                                :nth-of-type   \n                                :odd \n                                :only-child \n                                :only-of-type \n                                :parent \n                                :password \n                                :radio \n                                :reset \n                                :root \n                                :selected \n                                :submit \n                                :target \n                                :text \n                                :visible \n*/\n
_flter_|//all the values that pass\nvar evens = _.filter([1, 2, 3, 4, 5, 6], function(num){ \n\treturn num % 2 == 0; \n});\n// => [2, 4, 6]
sort_|var a_ = [1, 10, 2, 21]; \na_.sort(); // [1, 10, 2, 21]
json_decode_|try{ \n    var obj:any = JSON.parse(json); \n} catch(e) { \n    console.log('JSON parse error:'+e.message); \n}
json_parse_|json_decode_
url_encode_|var s = encodeURIComponent(v);
class_|class AClass {\n    constructor(public msg: string) {\n\tsuper(msg);\n    }\n    toString() {\n        return 'Class-'+this.msg ;\n    }\n}\n\nclass BClass extends AClass {\n    private str: string;\n    private el: HTMLElement;\n    private num: number;\n    constructor(m: string) {\n        super("aaa");\n        this.str = m;\n    }\n    public getStr() {\n        return "str: " + this.str;\n    }\n    public static member(b: string): string { return ''; }   \n    // typed callback\n    public save(callback: (n: number) => any): void {\n        callback(42);\n    }\n}
jq_slide_|if (el.height() > 0) {\nel.animate({ height : 0 });\n} else {\nel.animate({ height : '100%' });\n}
jq_is_function_|if ( $.isFunction( settings.onShow ) ) {\nsettings.onShow.call(this);\n}\n
void_|if ( value === void 0) { value = 0; }
microtime_|profile_
jq_make_array_|// Returns a NodeList\nvar elems = document.getElementsByTagName( "div" );\n// Convert the NodeList to an Array\nvar arr = jQuery.makeArray( elems );\n// Use an Array method on list of dom elements\narr.reverse();\n$( arr ).appendTo( document.body );
jq_proxy_|//var you = {\n//  type: "person",\n//  test: function( event ) {\n//    $( "#log" ).append( this.type + " " );\n//  }};\n \n// Execute you.test() in the context of the `you` object no matter where it is called\n// i.e. the `this` keyword will refer to `you`\nvar youClick = $.proxy( you.test, you );\n \n// this === "person"\n$("#test").on( "click", youClick );\n\n\n
date_parts_|t.getHours();\nt.getMinutes();\nt.getSeconds();
_rand_|_.random(0, 100)
unset_|delete obj['index'];
[plaintex]
[cobol]
[csv]
[css]
text_selection_|/* Mozilla based browsers */\n::-moz-selection {\n   background-color: #FFA;\n   color: #000;\n}\n\n/* Works in Safari */\n::selection {\n   background-color: #FFA;\n   color: #000;\n}
bg_|background-color: rgba(255,255,255,0.9);
dbg_|border: 1px solid #\|;/*dbg*/
hide_|visibility:hidden;\n/*occupa posto nel layout*/\ndisplay:none;\n/*SEO friendly, Removes an item from the page, without affecting page flow or causing scrollbars*/\n.SEO_hide {\n    position: absolute;\n    left: -9999px;\n}
opacity_|.transparent_class {\n  /* IE 8 */\n  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";\n\n  /* IE 5-7 */\n  filter: alpha(opacity=50);\n\n  /* Netscape */\n  -moz-opacity: 0.5;\n\n  /* Safari 1.x */\n  -khtml-opacity: 0.5;\n\n  /* Good browsers */\n  opacity: 0.5;\n}
text_shadow_|p { text-shadow: 1px 1px 1px #000, 3px 3px 5px blue; }\n// or\np { text-shadow: 0px 2px 2px rgba(255, 255, 255, 0.4); }
box_shadow_|shadow_
font_helvetica_|   font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;\n   font-weight: 300;
list_horizontal_|<ul class="list-horizontal">\n  <li><a class="active" href="#home">Home</a></li>\n  <li><a href="#news">News</a></li>\n  <li><a href="#contact">Contact</a></li>\n</ul>\n\nul.list-horizontal {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    background-color: #333333;\n  li {\n    float: left;\n  }\n  li a {\n    display: block;\n    color: white;\n    text-align: center;\n    padding: 16px;\n    text-decoration: none;\n  }\n  li a:hover {\n    background-color: #111111;\n  }\n}\n\n \n\n
center_div_of_dinamic_height_|* { margin: 0; padding: 0; }\n#page{display:table;overflow:hidden;margin:0px auto;}\n*:first-child+html #page {position:relative;}/*ie7*/\n* html #page{position:relative;}/*ie6*/\n\n#content_container{display:table-cell;vertical-align: middle;}\n*:first-child+html #content_container{position:absolute;top:50%;}/*ie7*/\n* html #content_container{position:absolute;top:50%;}/*ie6*/\n\n*:first-child+html #content{position:relative;top:-50%;}/*ie7*/\n* html #content{position:relative;top:-50%;}/*ie6*/\n\nhtml,body{height:100%;}\n#page{height:100%;width:465px;}\nHTML\n\n<div id="page">\n       <div id="content_container">\n               <div id="content">\n                     <p>your content</p>\n               </div>\n       </div>\n</div>
transparent_|opacity_
selection_|text_selection_
transition_|// transition on BG\n.admin__menu .submenu a {\n    color: #fcfcfc;\n    transition: background-color .1s linear;\n}\n.admin__menu .submenu a:hover {\n     background-color: #333;\n}\n// animation on dimension\ndiv {\n    width: 100px;\n    height: 100px;\n    background: red;\n    -webkit-transition: width 2s; /* For Safari 3.1 to 6.0 */\n    transition: width 2s;\n}\ndiv:hover {\n    width: 300px;\n}
import_|@import url("/css/style.css");
triangle_|.upper {\n  position:absolute;\n  left:150px; top:100px; /* pos.*/   }\n\n  .upper div {\n    border-left-color: transparent;\n    border-style: solid;\n  }\n  .inner{\n  border-width: 0 0 /* x: */ 100px /* h: */ 100px;\n  border-bottom-color: #955;\n}\n \n\n<div class="upper">\n  <div class="inner"></div>\n</div>
list_vertical_|<ul class="list-vertical">\n  <li><a href="#home">Home</a></li>\n  <li><a href="#news">News</a></li>\n  <li><a href="#contact">Contact</a></li>\n</ul>\nul.list-vertical {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  li a {\n    display: block;\n    width: 60px;\n    background-color: #dddddd;\n  }\n}\n\n\n \n\n
sass_call_|@include func-name($varname);
remove_|display: none;
show_|display:block;
page_center_|#page-wrap {\n     width: 800px;\n     margin: 0 auto;\n}\nHTML\n\n<body>\n  <div id="page-wrap">\n    <!-- all websites HTML here -->\n  </div>\n</body>
if_|sass_if_\nless_if_
IE6_fixed_position_|// The 100% height on the body and html stuff is in case you want to do fixed positioning along the bottom edge of the browser window.\n* { margin:0; padding:0; }\nhtml, body {\n   height: 100%;\n}\nbody #fixedElement {\n   position:fixed !important;\n   position: absolute; /*ie6 and above*/\n   top: 0;\n   right: 0;\n}\n#page-wrap {\n   width: 600px;\n   margin: 0 auto;\n   font: 16px/2 Georgia, Serif;\n}
sass_func_|// \n@mixin func-name($lato_len_px) {\n    // definizioni da ripetere...\n    .hide-txt when ($lato_len_px > 50) {\n        font-size: $font-size-small;\n    }\n}\n@include func-name($lato_len_px);
text_rotate_|.rotate {\n  /* Safari */\n  -webkit-transform: rotate(-90deg);\n  /* Firefox */\n  -moz-transform: rotate(-90deg);\n  /* Internet Explorer */\n  -ms-transform: rotate(90deg);\n  /* Opera */\n  -o-transform:rotate(-90deg);\n  transform: rotate(90deg);\n}
media_types_|<link rel="stylesheet" type="text/css" href="print.css" media="print">\n\nall - Used for all media typedevices\naural - Used for speech and sound synthesizers\nbraille - Used for braille tactile feedback devices\nembossed - Used for paged braille printers\nhandheld - Used for small or handheld devices\nprint - Used for printers\nprojection - Used for projected presentations, like slides\nscreen - Used for computer screens\ntty - Used for media using a fixed-pitch character grid, like teletypes and terminals\ntv - Used for television-type devices
sass_if_|@if ($lato_len_px > 50) {\n\n} @else if($lato_len_px <= 50) {\n\n}
font_families_|.x {\n   font-family: 'CustomFont', Helvetica, Arial, sans-serif;\n}\n\n\n//Sans-Serif:\nArial, sans-serif; Helvetica, sans-serif; Gill Sans, sans-serif; Lucida, sans-serif; Helvetica Narrow, sans-serif; sans-serif;\n\n//Serif:\nTimes, serif; Times New Roman, serif; Palatino, serif; Bookman, serif; New Century Schoolbook, serif; serif;\n\n//Monospace:\n'Andale Mono, monospace; Courier New, monospace; Courier, monospace; Lucidatypewriter, monospace; Fixed, monospace; monospace;\n\n//Cursive:\n'Comic Sans, Comic Sans MS, cursive; Zapf Chancery, cursive; Coronetscript, cursive; Florence, cursive; Parkavenue, cursive; cursive;\n\n//Fantasy:\n'Impact, fantasy; Arnoldboecklin, fantasy; Oldtown, fantasy; Blippo, fantasy; Brushstroke, fantasy; fantasy;
mediaquery_|/* 480 768 */\n@media only screen and (max-width : 1024px) {\n}
shadow_|/* oriz vert blur_radius spread radius */\n-webkit-box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.5);\n\n.shadow {\n  box-shadow: 5px 5px 5px #ccc;\n  -moz-box-shadow: 5px 5px 5px #ccc;\n  -webkit-box-shadow: 5px 5px 5px #ccc;\n}
alpha_|opacity:0.85;\nfilter:alpha(opacity=85);\n// or see bg_
gradient_|// use less or sass mixin\n\nbackground-image: linear-gradient(45deg,#7990f5 0,#0a1855 100%);
footer_sticky_|* { margin:0; padding:0; }\n\nhtml, body, #wrap { height: 100%; }\n\nbody > #wrap {height: auto; min-height: 100%;}\n\n#main { padding-bottom: 150px; } /* must be same height as the footer */\n\n#footer {\n\n  position: relative;\n\n  margin-top: -150px; /* negative value of footer height */\n  height: 150px;\n  clear:both;\n}\n\n/* CLEAR FIX*/\n.clearfix:after {content: ".";\n  display: block;\n  height: 0;\n  clear: both;\n  visibility: hidden;}\n.clearfix {display: inline-block;}\n/* Hides from IE-mac \\*/\n* html .clearfix { height: 1%;}\n.clearfix {display: block;}\n/* End hide from IE-mac */\n\n\n<div id="wrap">\n\t<div id="main" class="clearfix">\n\t</div>\n</div>\n<div id="footer">\n</div>
close_|// implementa bottone chiudi con segno X\n<div class=".admin__menu">\n<a href="#" class="action-close _close" data-role="close-submenu"></a>\n</div>\n\n.admin__menu .action-close {\n    padding: 2.4rem 2.8rem;\n    position: absolute;\n    right: 0;\n    top: 0;\n}\n.action-close:before {\n    content: '\\e62f';\n    transition: color .1s linear;\n}\n.admin__menu .submenu a:hover, .admin__menu .submenu a:focus {\n    box-shadow: none;\n    text-decoration: none;\n}\n.admin__menu .submenu a {\n    color: #fcfcfc;\n    transition: background-color .1s linear;\n}\n.action-close:hover {\n    cursor: pointer;\n    text-decoration: none;\n}\n// fa cambiare il colore con animazione\n.admin__menu .action-close:hover:before {\n    color: #fff;\n}\n
media_|mediaquery_
less_func_|// func def...\n.btn-square-parametric(@lato_len_px) {\n    .hide-txt when (@lato_len_px > 50) {\n        font-size: @font-size-small;\n    }\n}\n// func call \n.btn-square-parameter(@lato_len_px);
font_face_|@font-face {\n   font-family: 'CustomFont';\n   src: url('customfont.eot');\n   src: url('customfont.eot?#iefix') format('embedded-opentype'),\n   url('customfont.woff') format('woff'),\n   url('customfont.ttf')  format('truetype'),\n   url('customfont.svg#CustomFont') format('svg');\n}\n\nbody {\n   font-family: 'CustomFont', Helvetica, Arial, sans-serif;\n}
foreach_|// less 2.1\n@list: "banana", "tomato", "potato", "peach";\n@n: length(@list);\n.loop(@i) when (@i >= 0) {\n    .loop( (@i - 1) );  // recursivem next iteration\n    @value: extract(@list, @i);\n    // code for each iteration\n    body { color:@value; }\n}\n.loop(@n);
text_replacement_|h1 #logo {\n  width: 200px; // width of image\n  height: 100px; // height of image\n  background: url(/path/to/image.jpg);\n  text-indent: -9999px;\n}
IE_conditiona_comment_|<!--[if IE 5]>\n<style type="text/css">@import "IE5_only.css";</style>\n<![endif]-->\n \n<!--[if !IE]><!-->\n<p>This is not Internet Explorer</p>\n<!--<![endif]-->\n \n<!--[if gte IE 7]>\n  At least IE7 and not\n<!-->
css_mediaquery_|// if( $device_width >= $x )\n@media only screen and (min-width: 640px  ) { }\n@media only screen and (min-width: 667px  ) { }\n@media only screen and (min-width: 732px  ) { }\n@media only screen and (min-width: 960px  ) { }\n@media only screen and (min-width: 1024px ) { }\n@media only screen and (min-width: 1280px ) { }\n\n// if( $device_width <= $x )\n@media only screen and (max-width: 1280px) { }\n\n
blockquote_|blockquote {\n  background:#f9f9f9;\n  border-left:10px solid #ccc;\n  margin:1.5em 10px;\n  padding:.5em 10px;\n  quotes:"\\201C""\\201D""\\2018""\\2019";\n}\nblockquote:before {\n  color:#ccc;\n  content:open-quote;\n  font-size:4em;\n  line-height:.1em;\n  margin-right:.25em;\n  vertical-align:-.4em;\n}\nblockquote p {\n  display:inline;\n}
[assembly-x86]
[binsource-agc]
[ans-forth94]
[xq]
[gnuplot]
[javascript]
foreach_|a.forEach(function(v,k){\n    // console.log(v);\n});\n// IE<=8 \n// for(var k in a){ if(a.hasOwnProperty(k)){ var v = a[k]; }}
js_require_|js_include_
min_|var n = Math.min(n1,n2);
jq_is_|$( "ul" ).click(function( event ) {\n  var target = $( event.target );\n  if ( target.is( "li" ) ) {\n    target.css( "background-color", "red" );\n  }\n});
if_|if( $jq_selection.length && !_.isEmpty(o) ) {\|}
_sprintf_|var s = _.str.sprintf('%s', val);
jq_attr_|$(selector).attr(k, v);
jq_build_|$('<div/>', {\n    'id':'myDiv',\n    'class':'myClass',\n    'style':'cursor:pointer;font-weight:bold;',\n    'html':'<span>For HTML</span>',\n    'click':function(){ alert(this.id) },\n    'mouseenter':function(){ $(this).css('color', 'red'); },\n    'mouseleave':function(){ $(this).css('color', 'black'); }\n}).appendTo('body');
reg_get_|var regexp = new RegExp(s_query, 'gi');\nvar res = str.match(regexp);
redirect_|window.location = "http://www.name.com/";
try_|try {\n\|} catch(e){\n        //console.log(e.message); \n\t//alert(format_exception(e));\n} finally {}
jq_ajax_|$.ajax({\n  url: '/data/people.json',\n  type: 'POST',\n  dataType: 'json',\n  success: function( resp_o ) {\n    $( '#target').html( resp_o.name );\n  },\n  error: function( req, status, err ) {\n    console.log( 'something went wrong', status, err );\n  }\n});
_template_|var html = _.template("<%=k%>").call(this, {k: "aa"});
jq_post_|jq_ajax_post_
include_once_|// see require_ require_once_ include_ jq_require_
jq_prop_|var el = $(selector).prop(k, v); // see jq_attr_
sprintf_|_sprintf_
round_|Math.round( float );
jq_effects_|$(this).show()       ;// Show the selected elements.\n$(this).hide()       ;// Hide the selected elements.\n$(this).fadeIn()     ;// Animate the opacity of the selected elements to 100%.\n$(this).fadeOut()    ;// Animate the opacity of the selected elements to 0%.\n$(this).slideDown()  ;// Display the selected elements with a vertical sliding motion.\n$(this).slideUp()    ;// Hide the selected elements with a vertical sliding motion.\n$(this).slideToggle();// Show or hide the selected elements with a vertical sliding motion
jq_style_|jq_css_
jq_html_|// Load HTML from the server and place into the matched elements\n$("#result").load("ajax/test.html", function() {\n    alert( "Load was performed." );\n});
preg_|reg_replace_
for_|for( var i=0; i<a.length; i++) {\|}
call_|fun.call(this_obj, arg1, arg2, ... );
str_match_|var is_found = 'For more information, see Chapter 3.4.5.1'.match( /(chapter \\d+(\\.\\d)*)/i );\nconsole.log(is_found);
to_array_|var args = Array.prototype.slice.call(arguments);
is_empty_|jq_is_empty_
_map_|var a_=_.map([1, 2, 3], function(num){ return num * 3; }); // [3, 6, 9]\nvar a_=_.map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; }); // [3, 6, 9]
jq_promise_|/* per una operazione asincrona ritorna .promise(), intercetta il .done() con una callback\n$( "div" ).promise().done(function() {\n     // op Finished!\n});\n$.when( effect() ).done(function() {\n    // op Finished!\n}); */\n\nfunction doSomethingLater( fn, time ) {\n  var dfd = $.Deferred();\n  setTimeout(function() {\n    dfd.resolve( fn() );\n  }, time || 0);\n  return dfd.promise();\n}\nvar success = function( resp ) {\n  $( '#target' ).html( 'it worked' );\n};\nvar err = function( req, status, err ) {\n  $( '#target' ).html( 'it failed' );\n};\nvar dfd = doSomethingLater(function() { /* onTimeOut */ }, 100);\ndfd.then( success, err );\n
include_|LazyLoad.js(['foo.js', 'bar.js', 'baz.js'], function () {\n  alert('all files have been loaded');\n});\n// see require_ require_once_ include_ jq_require_ js_include_
jq_json_|jq_ajax_json_
jq_disable_|// su checkbox\n$('form#form_id #checkid').change(function(){\n    if( this.checked ){\n        $('form#form_id input:text').attr('disabled','disabled');\n    } else {\n        $('form#form_id input:text').removeAttr('disabled');\n    }\n}).trigger('change');\n\n// tutti i submit di una form\n$('form#form_id').map(function(){\n    var selector_btn = 'input[type=button], input[type=submit], :submit';\n    $(this).find(selector_btn).prop('disabled', true);\n});
jq_dom_map_|$("input").map(function(){\n      return $(this).val();\n    }).get().join(", ")
jq_contains_|str_contains_
jq_is_numeric_|var is_num = $.isNumeric( num );
jq_get_|jq_ajax_get_
jq_wrap_all_|$( ".inner" ).wrapAll( "<div class='my_css' />");
str_contains_|var is_containing_x = url.search(/xxx/) != -1;\nvar is_containing_x = /yes/i.test('xxx') ;\nvar is_containing_x = str.toLowerCase().indexOf("xxx") >= 0);
is_object_|function is_object(v) {\n    //One of the quirks of JavaScript is that typeof null returns "object". But it’s not an object. So let’s check for that, too\n    return (v instanceof Object && v.toString() == '[object Object]');\n}
jq_remove_|// elimina dal DOM i nodi selezionati\n$(selector).remove();
jq_wrap_|$("p").slice(1,3).wrap("<i></i>");\n
clo_|func_
factory_|function createObject(name) \n{\n  var privateName = name || "I am private name";\n  var privateMethod = function () {\n    return "result of private"; \n  }\n  return {\n    publicName: "I am public name",\n    publicMethod: function () {\n           alert("privateName is " + privateName + ", privateMethod called: "+ privateMethod()); \n      }\n  }\n}
jq_each_|$.each(associative_array, function(key, value) { \n  alert(key + ': ' + value); \n});
_size_|var a_={one: 1, two: 2, three: 3};// 3\nvar c = _.size(a_);
jq_exists_|jq_hasnode_
substr_|str.substr( beg=0, len=4);
max_|var n = Math.max(n1,n2);
jq_css_|el.css({\n\tbackgroundColor: '#ffe', \n\tborderLeft: '1px solid #ccc' \n}).css('width', function( i) {\n  return i * 50;\n}).css('width', '+=200');
in_array_|var is_present = ["Banana", "Orange"].indexOf("Apple") >= 0; // jq_inarray_
json_encode_|var text = JSON.stringify(data);
log_|console.log(\|);
func_|function(){\n\|}
static_|myclass.method = function() {\n};
jq_ready_|$(function(){\|});
jq_delegate_|$( "table" ).delegate( "td", "click", function() {\n  $( this ).toggleClass( "chosen" );\n});
_empty_|_.isEmpty(|)
jq_on_ready_|$(function() {\n  //  as soon as the page's Document Object Model (DOM) becomes safe to manipulate\n});
date_|function format_date_it(date){\n    var m = date.getMonth() + 1;\n    var str = date.getDate() + "/" + m + "/" + date.getFullYear();\n    return str;\n}\nfunction date_last_week(){\n    var es = (7*24*60*60*1000);//secondi in una settimana\n    var ts = ( (new Date()).getTime() - es );\n    return new Date(ts);\n};\nvar str = format_date_it( date_last_week() );
indexof_|//var a = ['apple','orange','pear'];\nvar is_found = (a.indexOf("orange") != -1);\nvar has_char = str.indexOf('@') === -1;
jq_submit_|$('form').submit(function(e){\n    e.preventDefault();// prevent the default browser behaviour on this case\n    var isErrorFree = true;\n    // custom validation\n    $('input.required, select.required, textarea.required',this).each(function(){\n        if ( validateElement.isValid(this) == false ){\n            isErrorFree = false;\n        };\n    });\n    if (isErrorFree){ \n\t// disable multiple submissions\n        $(this).find('button, input[type=submit]').attr('disabled', 'disabled');\n\t// send data\n\tvar a_ = $(this).serializeArray();\n\t$.post( url, data, callback, type );\n    }\n    return isErrorFree;\n});\n\n
jq_checked_|$(":checkbox").is(':checked')
define_|define(["my/dependency"],\n    function(dependency) {\n        // private code\n        return function() {\n            // public code\n        }\n    }\n);
jq_foreach_|$.each(a, function(i,key){\|});
json_|var data = JSON.parse(text);\nvar text = JSON.stringify(data);
_reduce_|var sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);// 6
jq_is_empty_|jQuery.isEmptyObject({}); // true\njQuery.isEmptyObject({ foo: "bar" }); // false
timestamp_|var now = new Date().getTime().toString();
jq_extend_|var settings = $.extend({ test: 1 }, opt);\n
jq_form_validate_|// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js\n// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js\n// @see http://jqueryvalidation.org/\n$().ready(function() {\n    // Selecting the form and defining validation method\n    $("#form").validate({\n        // Passing the object with custom rules\n        rules : {\n            // login - is the name of an input in the form\n            login : {\n              // Setting login to be required\n              required : true\n            },\n            email : {\n                required : true,\n                // Setting email pattern for email input\n                email : true\n            },\n            password : {\n                required : true,\n                // Setting minimum and maximum lengths of a password\n                minlength : 5,\n                maxlength : 8\n            }\n        },\n        // Setting error messages for the fields\n        messages: {\n            login: "Enter you login",\n            password: {\n                required: "Enter your password",\n                minlength: "Minimum password length is 5",\n                maxlength: "Maximum password length is 8"\n            },\n            email: "Enter you email"\n        },\n        // Setting submit handler for the form\n        submitHandler: function(form) {\n            form.submit();\n        }\n    });\n});
jq_target_|$('').click(function(e){\nvar el = jQuery(e.target).closest('tr');\n});
jq_get_json_|var r: JQueryXHR = $.getJSON(url: string, data?: Object, function(data: any, textStatus: string, jqXHR: JQueryXHR){\n\n});\n
jq_find_|$( 'li' )\n.find( 'span' )\n.attr( 'title', 'Hover over me' )\n.click(function() {\n    $( this ).addClass( 'clicked' );\n});
jq_by_attribute_|var el = $("[attribute='value']");
now_|var now_ts = (new Date).getTime();//timestamp
jq_data_|data-hidden="true" data-options='{"name":"John"}'\n$("div").data("hidden") === true;\n$("div").data("options").name === "John";
merge_|jq_merge_
jq_serialize_|// URL-encoded notation\nvar url_data = $('form').serialize();\n// array [{ name: "a", value: "1" }]\nvar a_data   = $('form').serializeArray();\n
jq_mouse_over_|$('div').mouseover(function() {\n    $(this).addClass('blue-bg');\n}).mouseleave(function(){\n    $(this).find('.content').fadeOut();\n});
require_|require(["jquery", "undercore"], function($, _) {\n        // $ && _ are available\|\n});\n// see require_ require_once_ include_ jq_require_
extend_|jq_extend_
trim_|var s = $.trim(str);
jq_end_|$( "ul.first" )\n  .find( ".foo" )\n    .css( "background-color", "red" )\n  .end()  // returs a query object\n  .find( ".bar" )\n    .css( "background-color", "green" );
str_replace_|var str = 'John Smith'.replace(/(\\w+)\\s(\\w+)/, '$2, $1');
jq_unique_|var a_unique = $.unique( a_ );
isset_|typeof != 'undefined'\n//  !== void 0
jq_filter_|$(".parent").find(".bar").filter("p");
f_|func_
//--|\|//------------------------------------------------------------------------------
switch_|switch(\|) {\n  case : \n  break;\n  default: \n    //istruzioni \n}
ceil_|var n = Math.ceil(7.004); // 8
rand_|// Returns a random integer between min (included) and max (included)\n// Using Math.round() will give you a non-uniform distribution!\nfunction getRandomIntInclusive(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nvar n = Math.random();// between 0 (inclusive) and 1 (exclusive)\n
require_once_|// see require_ require_once_ include_ jq_require_
jq_hover_|jQuery('#something').hover(\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 1, 1000 )\n.animate( {height:500}, 1000 );\n},\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 0.8, 1000 )\n.animate( {height:200}, 1000 );\n}\n);\n
method_|    method: function() {\n    },
prompt_|var s = prompt("question","default");\nif ( s!=null && s!="" ) {\n}
filter_|var _a = a.filter(function(v){\n    return v.name === "test";\n});
is_numeric_|jq_is_numeric_
join_|array.join(',');
jq_inarray_|var a_ = [ "8", "9", "10", 10 + "" ];\nvar is_ = $.inArray( 10, a_ );
jq_append_|$('<div/>').append(text).css({}).appendTo('#log');\n$('<option/>').attr('value',optionValue).text(optionName).appendTo('#colors');\n// jq_build_\n
jq_checkbox_|$( 'input:checkbox(:not(:disabled))' ).prop( 'checked', 'checked' );
lastIndexOf_|-1 !== window.location.pathname.lastIndexOf('/lampa_Orders/');
unique_|jq_unique_
jq_ajax_multiple_|$.when(\n    getTweets('austintexasgov'),\n    getTweets('greenling_com'),\n    getTweets('themomandpops')\n).done(function(atxArgs, greenlingArgs, momandpopsArgs) {\n    var allTweets = [].concat(atxArgs[0]).concat(greenlingArgs[0]).concat(momandpopsArgs[0]);    \n    alert(sortedTweets);\n});\nvar getTweets = function(user) {\n    var url = 'http://twitter.com/status/user_timeline/' + user + '.json';\n    return $.get(url, { count: 5 }, null, 'jsonp');\n}\n
jq_ajax_setup_|//\n// ajax loading indicator\nvar el_loading = $('<div/>').attr('id','loading').text('loading...').css({\n    display: 'none',\n    position: 'fixed',\n    top: '0',\n    right: '0',\n    padding: '10px',\n    border: '1 px solid #ccc',\n    backgroundColor: 'rgba(255,255,255, 0.4)',\n}).appendTo(document.body);\n\n$( document ).ajaxStart(function () {\n    el_loading.show();\n});\n$( document ).ajaxStop(function () {\n    el_loading.hide('slow');\n});\n// intercetta gli eventi jquery ajax per logging\n$(document).ajaxComplete(function() {\n    console.log( "Triggered ajaxComplete handler." );\n});\n$(document).ajaxError(function() {\n    console.log( "Triggered ajaxError handler." );\n});\n$(document).ajaxSend(function() {\n    console.log( "Triggered ajaxSend handler." );\n});\n$(document).ajaxSuccess(function() {\n    console.log( "Triggered ajaxSuccess handler." );\n});
proxy_|jq_proxy_
replace_|s = s.replace("old","new");
jq_insert_|$( "h2" ).insertAfter( $( ".container" ) );
apply_|fun.apply(this_obj, array_arguments );
jq_load_|// it and all sub-elements have been completely loaded\n$('#book').load(function() {\n\n});
jq_on_load_|jq_on_ready_
jq_key_press_|<input type="text"><span id="test_out">0</span> \n<script type="text/javascript">\nvar i = 0;\n$(function(){\n    $("input").keypress(function(){\n        $("#test_out").text(i += 1);\n    });\n});\n</script>\n
object_|var T = {\n    name: "a", \n    say: function() {\n        alert(this.a); \n    }\n};
while_|while( true ){\|}
template_|_template_
jq_fade_|if (el.is(':visible')) {\nel.fadeOut('slow');\n} else {\nel.fadeIn('slow');\n}
var_|console.log(\|);
url_decode_|var v="JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B";// "JavaScript_шеллы"\nvar v = decodeURIComponent(v);
reg_test_|var re_email = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-]{2,})+\.)+([a-zA-Z0-9]{2,})+$/;\n if ( _.isEmpty(str) || !re_email.test(str)  ) { } else { }
jq_grep_|var a_res_months = $.grep(a_months, function(v, i) {\n    return ( v.indexOf('J') == 0 );\n});\n
jq_by_name_|var email = $("input[name='email']").val();
jq_select_|// lavorare con una select\n// al change di un selct variare le options di una select dipendente\n$('#cod_linea').change(function(){\n           var f = $('#form_item_search');\n           var select = $(this);\n           var val = select.find('option:selected').val()\n           console.log(val);\n           $.ajax({\n               url: '<?=$url_ajax_options?>',\n               type: 'POST',\n               dataType: 'json',\n               data: f.serialize(),\n               success: function( resp_o ) {\n                   console.log(resp_o);\n                   var select_col = $('#cod_collection');\n                   // select_col.empty(); // remove old options\n                   $(select_col).find('option:gt(0)').remove(); // remove all options, but not the first\n\n                   $.each(resp_o , function(i, rec) {\n                           //console.log( rec );\n                           //console.log( rec['ADESCR'] );                           \n                           var html_value =  rec['ANUCOL'];\n                           var html_label =  rec['AAACOL'];\n                           select_col.append($("<option></option>").attr("value", html_value).text(html_label));\n                   });\n               },\n               error: function( req, status, err ) {\n                   console.log( 'something went wrong', status, err );\n               }\n    });\n});\n
jq_deferred_|jq_promise_
settimeout_|var timer = window.setTimeout(function(params){\n    console.log(params);\n}, 500, params);\nwindow.clearTimeout(timer);
interval_|var intervalID = window.setInterval(function(){}, 500); \nclearInterval(intervalID);
jq_scroll_|// todo!
js_log_|console.log();
jq_hasnode_|if( $('#selector').length > 0 ) {}
bind_|fun.bind(this_obj , arg1, arg2 ... );
js_include_|function include(js_url){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = js_url;\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x);\n}
parse_int_|var i = parseInt(s, 10);
byid_|var el = document.getElementById('id');
reduce_|var _a = a.reduce(function(carry, v) {\n    carry = carry + v;\n    return carry;\n}, (var initial=0) );
_count_|_size_
is_array_|$.isArray(\|)
is_string_|_.isString(myVar)\n// typeof myVar === 'string' || myVar instanceof String
jq_merge_|var a = $.merge( [1,2], [3,4] ); // jq_extend_
jq_empty_|// rm all child nodes\n$(selector).empty();
jq_require_|// Load a JavaScript file from the server using a GET HTTP request, then execute it \nvar r:JQueryXHR = $.getScript(url: string, function(script: string, textStatus: string, jqXHR: JQueryXHR){ \n\n});
is_function_|jq_is_function_
jq_ajax_post_|var jqxhr = $.post("ajax/test.html", {k:v}, function( data ) {\n  \tconsole.log( data );   \n}, 'json') \n  .done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
jq_map_|var a = $.map( [2,3,4], function(n){\n   return n*2;\n});//[4, 6, 8]
jq_click_|$('form input:checkbox').on('click', function(e){\n    e.preventDefault();\n        \|});
typeof_|isset_
jq_isnode_|if( $('#selector').length > 0 ) {}
console_|console.log(\|);
reg_replace_|var str = str_result.replace(new RegExp('[a-z]', 'g'), '_');
function_|function(){\n\|}
throw_|throw new Error(msg);
stop_|e.stopPropagation();//bubbling\ne.preventDefault();
jq_filter_f_|$('li').filter(function(index) {\n  return $('strong', this).length == 1;\n}).css('background-color', 'red');
floor_|var n = Math.floor( 45.95 ); //  45
regexp_|var re = /\\w+/;\nvar re_m = regex.exec(text);\nconsole.log(re_m[1]); \n// str_match_ str_replace_
module_|module = function() {\n  // ... module privates and aliases\n\n  // public\n  return {\n    // ... module constants\n    init: function() {\n      return this;\n    },\n\n  };\n}().init();
jq_selector_|jq_selector_list_
jq_ajax_get_|var jqxhr = $.get( '/data/people.html', function( html ){\n  $( '#target' ).html( html );\n}).done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
count_|[].length
jq_ajax_json_|var jqxhr = $.getJSON("/controller/action", { k: v },\n   function(json){\n     console.log("JSON Data: " + json.name);\n}).fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n});
map_|var _a = a.map(function(v,k){\n    v.name = '"'+v.name+'"';\n    return v;\n});
jq_rm_|jq_remove_
jq_dom_node_|var dom_node = $( "li" ).get( 0 );\nconsole.log( dom_node+' '+$.type(dom_node) );
jq_animate_|$( this ).animate({\n    left: '+=50', // increase by 50\n    opacity: 0.25,\n    fontSize: '12px' //camelcase when prop name like "font-size"\n  },  300,  function() {\n    // executes when the animation is done\n  }\n);\n.stop(); // will stop currently running animations \n.delay(milliseconds); // will pause before the execution of the next animation method
localstorage_|if(typeof localStorage !== "undefined") {\n    // update key\n    var = key = 'clickcount';\n    if ( typeof localStorage[key] !== "undefined" ) {\n        localStorage[key] = localStorage[key] + 1;\n    } else {\n        localStorage[key] = 1;\n    }\n    // eliminare dati:\n    // localStorage[key] = null;\n    // localStorage.removeItem(key);\n}\n
_each_|_.each(hash, function(v, k, list){ });
except_|throw "errormsg\|";
timeout_|setTimeout(function(){ alert("Hello"); }, 300);
jq_selector_list_|/*\n    All                         *   \n                                :animated \n    Attribute Contains Prefix   [name|=  value  ]\n    Attribute Contains          [name*=  value  ]\n    Attribute Contains Word     [name~=  value  ]\n    Attribute Ends With         [name$=  value  ]\n    Attribute Equals            [name=  value  ]\n    Attribute Not Equal         [name!=  value  ]\n    Attribute Starts With       [name^=  value  ]\n                                :button\n                                :checkbox \n                                :checked \n    Child                       parent > child   \n    Class                       .class   \n                                :contains   \n                                :disabled \n                                :empty \n                                :enabled \n                                :eq   \n                                :even \n                                :file \n                                :first-child \n                                :first-of-type \n                                :first \n                                :focus \n                                :gt   \n    Has Attribute               [name]\n                                :has   \n                                :header \n                                :hidden \n    ID                          #id   \n                                :image \n                                :input \n                                :lang   \n                                :last-child \n                                :last-of-type \n                                :last \n                                :lt   \n    Multiple Attribute          [name=value][name2=value2″]\n    Multiple                    selector1, 2, N   \n    Next Adjacent               prev + next   \n    Next Siblings               prev ~ siblings   \n                                :not   \n                                :nth-child   \n                                :nth-last-child   \n                                :nth-last-of-type   \n                                :nth-of-type   \n                                :odd \n                                :only-child \n                                :only-of-type \n                                :parent \n                                :password \n                                :radio \n                                :reset \n                                :root \n                                :selected \n                                :submit \n                                :target \n                                :text \n                                :visible \n*/\n
sort_|var a_ = [1, 10, 2, 21]; \na_.sort(); // [1, 10, 2, 21]
json_decode_|try {  \n    var o_ = $.parseJSON(json_str);\n} catch(e) { \n    console.log(e.message); \n}
json_parse_|JSON.parse(text);
url_encode_|var s = encodeURIComponent(v);
class_|// funzione:\nvar Greeter = (function () {\n    // constructor\n    function Greeter(message) {\n        // public\n        this.greeting = message || 'default';\n        // privileged\n        this.publicMethod = function() {\n            alert(privateName + " get from public method!"); \n        }    \t\n    }\n    // public methods\n    Greeter.prototype.greet = function () {\n        return "Hello, " + this.greeting;\n    };\n    // private\n    var privateVar = message || "default"; \n    var privateMethod = function() {\n        return privateVar; \n    }\n    \n    return Greeter;\n})();\n// instance\n// var o = new Greeter("txt");\n
jq_slide_|if (el.height() > 0) {\nel.animate({ height : 0 });\n} else {\nel.animate({ height : '100%' });\n}
jq_is_function_|if ( $.isFunction( settings.onShow ) ) {\nsettings.onShow.call(this);\n}\n
jq_make_array_|// Returns a NodeList\nvar elems = document.getElementsByTagName( "div" );\n// Convert the NodeList to an Array\nvar arr = jQuery.makeArray( elems );\n// Use an Array method on list of dom elements\narr.reverse();\n$( arr ).appendTo( document.body );
jq_proxy_|// Execute you.test() in the context of the `you` object\n// no matter where it is called\n// i.e. the `this` keyword will refer to `you`\nvar youClick = $.proxy( you.func_name, you );\n// this === "person"\n$(selector).on("click", youClick );
unset_|delete obj['index'];
[uscript]
