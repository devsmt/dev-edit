[global]
input_file_|<input type="file" accept=".someext,image/*">
li_|<li>\|</li>
include_js_|js_
<!|html_comment_
javascript_|js_
table_|\|<table id="" border="0" cellpadding="0" cellspacing="0" class="table table-condensed">\n    <caption>Caption</caption>\n    <thead>\n        <tr>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n        </tr>\n    </thead>    \n    <tbody>\n        <tr>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n        </tr>\n    </tbody>\n</table>
img_|<img src="/img/\|" border="0" alt="" onerror="this.src='/img/NA.png'"/>
h2_|<h2>\|</h2>
twb_button_|<button type="button" class="btn btn-primary btn-small">txt</button>
select_|<select name="">\n  <option value="">Value 1</option> \n</select>
nb_|&nbsp;
html_comment_|htmlcomment_
hc_|html_comment_
for_|for($i=0;$i<count($a);$i++){\|}
center_|text-align:center; vertical-align: middle;
qunit_equal_|equal( func(), true, "testname" );
sql_select_|SELECT \nFROM       \nWHERE\nORDER BY
//--|//------------------------------------------------------------------------------
jq_onclick_|$("a").click(function(ev) {\n    ev.preventDefault();    \n});
margin_|margin:4px auto\|;
twb_icon_|<i class="icon-">ï€™</i> icon-download-alt
checkbox_|<input type="checkbox" name="" value="" />
h1_|<h1>\|</h1>
else_|else {\n}
ul_|<ul>\|</ul>
len_|length
fieldset_|<fieldset>\n    <legend>Personalia:</legend>\n\n</fieldset>
radio_|<label for="male">Male</label>\n<input type="radio" name="sex" id="male" value="male">
css_font_|<link href="https://fonts.googleapis.com/css?family=Lato:100" rel="stylesheet" type="text/css">\n<style>\nbody {\n  font-weight: 100;\n  font-family: 'Lato';\n}\n</style>
input_numeric_|<input type="number" name="cod_customer" value="" placeholder="" \n  pattern="[0-9.]+" min="0" max="999" step="1"\n  onkeypress='return /[0-9\\.]/.test(String.fromCharCode(event.charCode))'>
p_|<p>\|</p>
tr_|<tr>\n\t<td>\|\t&nbsp;</td>\n</tr>
script_|<script src="\|"></script>
twb_alert_|<div class="alert alert-success" role="alert">\n\n</div>
elseif_| elseif(\|) {\n}\n
anchor_|<a href="\|"></a>
submit_|<input type="submit" value="Salva" id="">
pre_|<pre>\|</pre>
i_|<i>\|</i>
jqload_|$(function(){\|});
textarea_|<textarea rows="5" cols="80">\|</textarea>
h6_|<h6>\|</h6>
legend_|<fieldset>\n    <legend>description:</legend>\n \n</fieldset>
js_|<script type="text/javascript">\|</script>
small_|<small></small>
lorem_|Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vel libero risus. Sed pellentesque accumsan ex non feugiat. Nulla pharetra in odio non hendrerit.
mailto_|mailto:?subject=some%20subject&body=some%20very%20long%20body. 
foreach_|foreach($a as $k=>$v){\|}
input_|<input type="text" name="\|" value="" maxlength="255" tabindex="0" pattern="[0-9.]+" />\n// HTML5: tel search url email datetime date month week time datetime-local number range color
phpo_|<?=\|?>
htmlcomment_|<!--\nbegin\n-->\|<!--\nend\n-->
b_|<b>\|</b>
sql_insert_|INSERT INTO T2 (EMPID, EMPNAME, EMPADDR)\n     VALUES (DEFAULT, :hv_name, :hv_addr)
td_|<td>\|&nbsp;</td>
autocomplete_|html5_autocomplete_
h5_|<h5>\|</h5>
input_hidden_|<input type="hidden" name="" value="">
html5_autocomplete_|\n<input id="countryInput"\n       type="text"\n       data-bind="value: selectedCountry"\n       list="countryList" />\n\n<datalist id="countryList" data-bind="foreach: countries">\n    <option data-bind="value: country"></option>\n</datalist>
if_|if(!empty(\|)){}
div_|<div>\|</div>
dief_|die(__FUNCTION__."\|");
option_|<option value="" selected></option>
input_num_|input_numeric_
twb_tabs_|<ul class="nav nav-tabs">\n  <li class="active">\n    <a href="#">Home</a>\n  </li>\n  <li><a href="#">...</a></li>\n  <li><a href="#">...</a></li>\n</ul>
background_|background:#ffffff url('img_tree.png') no-repeat right top;
border_|border: 1px solid #\|;
hr_|<hr style="" />
comment_|html_comment_
css_mp0_|margin:0; padding:0;
bs_|&nbsp;
h4_|<h4>\|</h4>
twb_grid_|<div class="container-fluid">\n  <div class="row">\n    <div class="col-xs-6">  </div>\n    <div class="col-xs-6">  </div>\n  </div>\n</div>
css_|<link rel="stylesheet" href="\|">
jq_|<script src="http://code.jquery.com/jquery-latest.min.js" ></script>
span_|<span class="">\|</span>
sql_update_|UPDATE EMPLOYEE\n     SET JOB=NULL, SALARY=0, BONUS=0, COMM=0\n     WHERE WORKDEPT = 'E21' AND JOB <> 'MANAGER'
html_progress_|<progress id="" max="100" value="90"></progress>
new_|$1 $2 = new $1(\|);
form_|<form action="" method="post" action="<?=$_SERVER['PHP_SELF']?>" enctype="multipart/form-data" id="form1">\|\t<input type="submit" value="Salva" id="">\n        <input type="reset" />\n</form>\n<script>\n$(function(){\n$('#form1').submit(function(event) {\n  alert('valid form');\n  event.preventDefault();\n  return true;\n});\n});\n</script>
br_|<br />
label_|<label for="male">Male</label>\n  <input type="radio" name="sex" id="male" />\n  <br />
h3_|<h3>\|</h3>
icon_|<i class="fa fa-fw">\|</i>
style_|<style type="text/css">\|</style>
th_|<th>\|</th>
anchorjs_|<a href="javascript:void(0);" onclick="myfunc();return false"></a>
html_|<!DOCTYPE html>\n<head></head>\n<body>\n\n\n\|</body>\n</html>
php_|<?php\n
input_number_|inut_numeric_
twb_row_|    <div class="container-fluid">\n      <div class="row-fluid">\n\t<div class="span3">\n        </div>\n      </div>\n    </div>
include_css_|css_ style_
[c++]
[sqr]
[nsis2]
[markdown]
link_|[link](http://www.lampa.it)
b_|**bold**
h6_|###### Text {#el_id .pbb }
i_|*italic*
anchor_|link_
pre_|`monospace`
img_|image_
image_|![screenshot](img/mappa_applicativa.png)
[asp]
[latex]
[factor]
[cfscript]
[batch]
[assembly-mcs51]
[vrml2]
[groovy]
[relax-ng-compact]
[icon]
[velocity]
[patch]
[beanshell]
[pl1]
[fortran90]
[pyrex]
[inno-setup]
[inform]
[netrexx]
[eiffel]
[fortran]
[pl-sql9]
[chill]
[json]
[macroscheduler]
[smalltalk]
[mustache-template]
[idl]
[haxe]
[pvwave]
[smarty]
[ada95]
[pl-sql]
[vala]
[apacheconf]
[htaccess]
[clojure]
[io]
[pure]
[sbt]
[properties]
[metapost]
[rhtml]
[powerdynamo]
[vhdl]
[logs]
[maple]
[lotos]
[PowerCenter Parameter File]
[django]
[ada]
[php]
range_|$a_range = range(0, 50, 10);//[10,20,30,40,50]
foreach_|foreach($a_ as $k => $v) {\n\|}
php_|<?php\n\n\|\n?>
min_|$i_min = min([0,$x]);
collapse_|border-collapse:collapse;
global_|$GLOBALS[''] = '';
zf_get_|$this->getRequest()->getParam('name\|');
if_|if( empty(\|) ) {\n    // do init\n}
zf_h_select_|zf_h_select_multi_
try_|try {\n\n\|} catch (Exception $e) {\n    $fmt = 'Exception: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    );\n    $logger = Zend_Registry::get('logger');\n    $logger->err(strip_tags($msg));\n//} finally {\n}\n\n
zf_h_checkbox_|$this->formCheckbox('opt_in', 'yes', null, array('yes', 'no'))
zf_alert_|$this->alert($msg, 'error');
zf_view_|$html = $this->view->render('alternate.phtml');
twb_form_|<form class="form-inline">\n  <div class="form-group">\n    <label for="exampleInputName2">Name</label>\n    <input type="text" class="form-control" id="exampleInputName2" placeholder="Jane Doe">\n  </div>\n  <div class="form-group">\n    <label for="exampleInputEmail2">Email</label>\n    <input type="email" class="form-control" id="exampleInputEmail2" placeholder="jane.doe@example.com">\n  </div>\n  <button type="submit" class="btn btn-default">Send invitation</button>\n</form>
zf_log_|$logger = Zend_Registry::get('logger');\n$logger->info('');\n$logger->warn('');\n$logger->err('');
sprintf_|sprintf('%s %d', $s, $i);
round_|round($f, 2);
filter_str_|filterstr_
header_|header("Location: $url");
zf_url_|echo $this->url($par=array('username' => 'martel'), $route_name='user');
zf_session_|$ses = new Zend_Session_Namespace('_l10n_');\n$ses->var = '';
list_|list($a, $b) = ['a','b'];
for_|for( $i=0; $c=count($a); $i < $c; $i++) {\|}
array_|$\|=array();
unlink_|if( unlink($path) ){}
__MAIN__|// if colled directly, run the tests:\nif (basename($argv[0]) == basename(__FILE__)) {\n    include substr(__FILE__, 0, -4) . 'Test.php';\n}
str_match_|str_match($str, $substr\|) //strpos_
case_|case \|:\nbreak;
sp_|sprintf_
jq_promise_|jq_deferred_
str_pad_|str_pad($s, 5, '_', STR_PAD_LEFT);
dirname_|dirname(__FILE__).'/lib.php'
include_|require_
call_user_func_array_|// Call the $foo->bar() method with 2 arguments\n$foo = new foo;\ncall_user_func_array(array($foo, "bar"), array("three", "four"));
zf_post_|$this->getRequest()->getPost('name\|');
error_reporting_|error_reporting(E_ALL); // Report all PHP errors
array_map_|$values = array_map(function($v) {\n    return '"'.$v.'"';\n}, $a);
date_add_|$date_str = sprintf('2010-09-17');\n$date = new DateTime($date_str);\n$date_period_str = sptintf('P%sD', $i=1); // 'P1D': P1D=Period of 1 day(Y/M/W/D/H/S)\n$date->add(new DateInterval($date_period_str));  \n$str_date = $date->format('Y-m-d');
zf_h_escape_|$this->escape($this->str)
if___|$v = $v ?: $def;
dbg_|var_dump(\|);die();
register_shutdown_function_|register_shutdown_function(function (){ \n    echo "script is shuting down";\n});
sf_get_|$request->getParameter($name);
str_contains_|str_pos_
singleton_|    public static function getInstance() {\n        static $__instance = null;\n        if (null === $__instance) {\n            $__instance = new static();\n        }\n        return $__instance;\n    }\n    // should not circumvent the singleton\n    protected function __construct() { }
__destruct_|function __destruct() {\n\|\n}
number_format_|number_format($number, 2, ',', '.');
__END__|$html = <<<__END__\n\|__END__;\n
namespace_|namespace PrjName {\n    use Exception;\n}\nnamespace {\n// global code\n}
assert_|if( !is_numeric($n) ) {\n    throw new Exception("VARNAME deve essere in formato numerico, '$n' ricevuto");\n}
mktime_|$timestamp = mktime($hour=date("H"), $minute=date("i"), $second=date("s"), $month=date("n"), $day=date("j"), $year=date("Y") );
contruct_|function __construct() {\n    parent::__construct();\n    \|\n}
substr_count_|$c = substr_count($str, $usbstr\|);
zf_route_|$router->addRoute('route_name',\n    new Zend_Controller_Router_Route(\n        'user/:username',\n        array(\n            'controller' => 'user',\n            'action'     => 'info',\n        )\n    )\n);
substr_|substr($s\|,0,2);
issetor_|$\|= isset($a['']) ? $a[''] : null;
implode_|implode(',', array_filter($a, function ($s){ return !empty($s); }) );
constants_|echo '<pre>',var_dump( get_defined_constants(true) ),'</pre>'; // DEBUG\ndie(__FILE__.''.__FUNCTION__);
in_array_|in_array('',$a);
json_encode_|json_encode($a, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
str_reg_|if ( preg_match('/1999/', $s) ) {\n    // ok\n}
whilers_|while ($a = mysql_fetch_assoc($rs)) {\|}
ob_|ob_start();\n$this->debugDumpParams();\n$dump = ob_get_clean();
staticp_|//\npublic static function \|() {\t\t\n    return ; \n}
htmlentities_|//ENT_COMPAT     Converte gli apici doppi e lascia inalterati gli apici singoli.\n//ENT_QUOTES     Converte sia gli apici doppi sia gli apici singoli.\n//ENT_NOQUOTES   Lascia entrambi i tipi di apici inalterati.\n$html = htmlentities($v, ENT_QUOTES, 'UTF-8');
firebug_|FB::send('test');
strpos_|str_pos_
func_|function golang_like_func($str){\n    return [false, "String is invalid"];\n}\nlist($res, $err) = golang_like_func($str);\nif($err){\n  // use $err\n}\n\n
defines_|// includono sia quelle create dalle estensioni sia quelle create con la funzione define()\necho '<pre>',print_r(get_defined_constants());\ndie();
static_|//\n\tprotected static function \| () {\t\t\nreturn ; \n}
jq_ready_|$(function(){\n    // DOM ready\n\|\n});
obj_|new stdClass()
zf_config_|Zend_Registry::get('config')->company->email->support;
sleep_|sleep(10);// seconds
is_callable_|is_callable(array($obj, 'method_name'), false);
date_|date('Y-m-d H:i:s');
dump_|dump(\|,'');//dbg:
zf_cache_get_|$cacheEngine = Zend_Registry::get('cache');\n$c_key = '';\nif( ($c_result = $cacheEngine->load($c_key)) === false ) {\n    // ... do computation\n    $cacheEngine->save($c_result, $c_key);\n} else {\n    // get from cache\n    echo '<pre>',var_dump( $c_result ),'</pre>'; // DEBUG\n    die(__FUNCTION__.__FILE__);\n}
jq_submit_|$( "#target" ).submit(function( event ) {\n  alert( "Handler for .submit() called." );\n  event.preventDefault();\n});
nbsp_|&nbsp;
array_key_exists_|array_key_exists($key, $a\|)
define_|define("\|", "", false);
strip_tags_|$txt = strip_tags($txt, $allowed='<p><a>');
extract_|extract($data, $flgs=EXTR_OVERWRITE, $sprefix=null);
assert_int_|if( !is_numeric($num) ) {\n    throw new Exception("num deve essere in formato numerico, '$num' ricevuto");\n}\n\n
opt_|\t$option = array_merge( array(\n\t), $opt );\n\textract($option);
qry_|$rs = qry(\|$sql, __LINE__, __FILE__);
filter_var_|if (filter_var($str_email, FILTER_VALIDATE_EMAIL)) {\n    echo "This ($str_email) email address is considered valid.";\n}
file_get_contents_|$str_content = file_get_contents( realpath( __DIR__ .'/file.txt') );
phpunit_assert_|$this->assertEquals($expect, $val, $msg='');\n
<<<|$\| = <<<__END__\n__END__;
private_|//\nprivate function \|(){ return true; }
js_comment_|/* \| */
s_|$s_ = '';
pluck_|__::pluck($a, $k);
print_r_|print_r(\|,true);
filterstr_|$v = preg_replace('/[^0-9A-Z$]/', '',  substr(trim($v), 0, 6) );
require_|require_once dirname(__FILE__).'/\|';
array_map_assoc_|$a_err = array_map(function($k, $v) {\n    return "$k => $v";\n}, array_keys($a_err), array_values($a_err) );
destruct_|function __destruct() {\n  // cleanup your DB, disk or RAM cache\n}
array_walk_|array_walk($data, function(&$v, $k, $param) { \n    $v = $k . $param . $v; \n}, 'myparam');
instanceof_|if( !($var instanceof ParentClass) ){ }
pf_|sprintf_
str_replace_|str_replace('','',\|);
__call_|function __call($name, $args){\n  echo "no def: $name  arity: ".count($args)."\\n";\n}
file_put_contents_|file_put_contents(dirname(__FILE__).'', $str, (FILE_APPEND | LOCK_EX));
tempnam_|tempnam(sys_get_temp_dir(), 'PREFIX');
protected_|protected function \|(){}
filter_float_|$f = filter_var($f, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION|FILTER_FLAG_ALLOW_THOUSAND);
f_|function(){}
ol_|<ol class="">\n\|</ol>
file_get_a_|// ottiene contenuto del file in array di righe da processare in successione\n$a_file_lines = file($file_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$process_line = function($line){ return $line; };\nforeach ($a_file_lines as $i => $line) {\n     $a_file_lines[$i] = process_line($line);\n}\n$s_result = implode("\\n", $a_file_lines );\n\n
//--|//----------------------------------------------------------------------------\n//  \|\n//----------------------------------------------------------------------------
switch_|switch($\|){\n  case 0:\n  break;\n  default:\n  break;\n}
intval_|$i_num = intval($s);
preg_match_|// returns 1 pattern matches, 0 if not, FALSE if an error \n$num_matches = preg_match('/^[A-Za-z0-9]{5,7}$/', $str, $a_matches, PREG_OFFSET_CAPTURE);\nif(false === $num_matches) {\n    $a_pcre_err=array_flip(get_defined_constants(true)['pcre']);\n    die( preg_last_error() /*.' '.$a_pcre_err[preg_last_error()]*/ );\n} elseif($num_matches===0) {\n    // no matches\n} else {\n    // ok\n}
strategy_|interface ISerializable {\n    public function serialize();\n}\nclass PHPOutput implements ISerializable {\n    public function serialize()    {\n        return serialize($a);\n    }\n}\nclass JsonOutput implements ISerializable {\n    public function serialize() {\n        return json_encode($a);\n    }\n}\n// caller code will use the strategy preferred at runtime\n$serializer = ;// get a serializer at runtime\n$serializer->serialize();\n\n\n
xml_|$dom = new \\DOMDocument();\n$dom->preserveWhiteSpace = false;\n$dom->load($this->xml_file);\n$xpath = new \\DOMXpath($dom);\n$node_list = $xpath->query('//NodeType[@attr=val]');
ksort_|ksort($a);//in-place sort!
zf_h_e_|zf_h_escape_
rand_|rand(0,100);
method_|protected function \|(hint $v){ \nreturn ; \n}
defined_|defined('MYCONST')
printf_|pf_
zf_cache_|zf_cache_get_
filter_|$v = filter_var($v, FILTER_SANITIZE_EMAIL);
twb_panel_|<div class="panel panel-primary _panel-success _panel-info _panel-warning _panel-danger ">\n  <div class="panel-heading">\n    <h3 class="panel-title">\n        Panel title\n    </h3>\n  </div>\n  <div class="panel-body">\n    Panel content\n  </div>\n</div>\n\n \n
ff_|( \| ) ? ( ) : ( );
__construct_|public function __construct(){\n    parent::__construct();\n}
ctype_|$is_ = ctype_alpha($str); // Only letters\n$is_ = ctype_digit($str); // Only numbers\n$is_ = ctype_space($str); // Only whitespace\n$is_ = ctype_print($str); // Only printable characters\n$is_ = ctype_alnum($str); // Numbers or letters
e_|<?=$\|?>
construct_|public function __construct(){\n   parent::__construct();\n\|}
file_|file_put_contents($path\|,$str);
validate_|filter_var_
array_slice_|array_slice($a, $pos, $len);
date_sub_|date_add_
__map_|__::map(['one'=>1], function($v, $k) {\n  return $v * 3;\n});
hash_sort_|// Sort the multidimensional array\nusort($a_list, function ($rec, $next_rec) {\n        $k = 'column_key';  \n\treturn $rec[$k] > $next_rec[$k];\n});\n     \n
hidden_|<input name="" value="" type="hidden">
ini_get_|$v = ini_get('display_errors');
zf_registry_|if( Zend_Registry::isRegistered('acl') ){\n    $acl = Zend_Registry::get('acl');\n} else {\n    $acl =;\n    Zend_Registry::set('acl', $acl);\n}
zf_action_|public function __Action(){\n    $this->view->myval = null;\n}
apc_get_|$cache_key = ''; //__METHOD__.':'.json_encode(func_get_args());\n$val = apc_fetch($cache_key);\nif(false === $val) {\n    // no cache\n    $val = ''; //todo: calc val\n    apc_store($cache_key, $val, $ttl_secs=0 ); //ttl=0 cached forever\n} else {\n    // from cache\n}\nreturn $val;\n
replace_|preg_replace('/\\s+?(\\S+)?$/', '',$s);
sql_replace_|REPLACE [LOW_PRIORITY | DELAYED] INTO $tbl_name SET col_name=$val
mkdir_|true === mkdir('/path', 0755);
interface_|interface ICommand {\n    // \n    public function run();\n}
zip_|$zip = new \\ZipArchive();\n$file_path = sprintf("/zip/test_%s.zip", date('Ymd_His') );\nif ( $zip->open($file_path, \\ZipArchive::CREATE) !== true ) {\n    $msg = sprintf('Errore: impossibile aprire %s ', $zip_path );\n    throw new Exception($msg);\n}\n$zip->addFromString("testfile.txt" . time(), "#1 This is a test string added as testfilephp.txt.\\n");\n$zip->addFile($target_file_path, "/testfromfile.php");\n$zip->close();
glob_|foreach (glob("*.txt") as $filename) {\n    echo "$filename size " . filesize($filename) . "\\n";\|}
assert_char_|if( !ctype_alnum($s) || 8 >= strlen($s) ) {\n    throw new Exception("VARNAME deve essere in formato stringa, '$s' ricevuto ");\n}
button_|<button onclick="myFunction()">Click me</button>
trait_|trait SayWorld {\n    public function sayHello() {\n        parent::sayHello();\n        echo 'World!';\n    }\n}\nclass MyHelloWorld extends Base {\n    use SayWorld;\n}
methods_|echo '<pre>';\necho implode( "\\n", get_class_methods(\|));\ndie(__FILE__.' '.__FUNCTION__);
while_|while($a=mysql_fetch_array($rs)){\|}
tempname_|$file_path = tempnam(sys_get_temp_dir(), $prefix='X');
set_error_handler_|// defining your own way of handling errors during runtime,\n// you need to do cleanup of data/files when a critical error happens\nset_error_handler(function ($errno, $errstr,  $errfile, $errline, array $errcontext) { \n    // error was suppressed with the @-operator\n    if (0 === error_reporting()) { return false; }\n\t// log your warning or transform in exception:\n        // throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n\t//  is your responsibility to die() if necessary\n\t//  standard PHP error handler is completely bypassed for the error types specified by error_types unless the callback function returns FALSE\n\treturn false;\n}, E_WARNING);\n\n
phpo_|<?=\|;?>
execute_|  public function executeSpese(sfWebRequest $request)\n  {\n\treturn $this->renderText('da implementare');\n  }
finally_|finally {\n\|}
public_|\t//\n\tpublic function \|(){\n\t  return true;\n\t}
var_|echo '<pre>',var_dump(\|),'</pre>'; // DEBUG\ndie(__FUNCTION__.' '.__FILE__.' '.__LINE__);
once_|static $c = 0;\nif( $c === 0 ) {$c++;\n\|\n}
filter_html_|$html = filter_var($html, FILTER_SANITIZE_SPECIAL_CHARS);//escape, not removes, bad html
assert_s_|assert_char_
array_filter_|array_filter($a, function ($s){ return !empty($s); });
location_|header('Location: http://www.test.it/');
goto_|GOTO_LABEL:\ngoto GOTO_LABEL; \n\n
zf_mail_|$mail = new Zend_Mail();\n$mail->setFrom(Zend_Registry::get('config')->email->support);\n$mail->addTo($form->getValue('email'));\n$mail->setSubject("subject");\n// Retrieve the e-mail message text\ninclude "_email_template.phtml";\n$mail->setBodyText($email);\n$mail->send();
zf_h_partial_|echo $this->partial('_partial.phtml', $data=array(\n    'from' => 'Team Framework',\n    'subject' => 'view partials') );
zf_redirect_|$url = $this->view->url(array(),'route_name');\n$this->_redirect($url);
apc_|apc_get_
dir_|dirname(__FILE__).'/lib.php'
phpunit_assert_true_|$this->assertTrue($val);
date_diff_|date_add_
check_|<input type="checkbox" name="<?=setFieldInfoName($currentIndex)?>" value="1" <?=$\|->enabled() ? "checked" : ""?>>
zf_get_view_|$view = Zend_Layout::getMvcInstance()->getView();
base_convert_|base_convert($i, 10, $tobase=36 );
reset_|<input type="reset" />
zf_h_select_multi_|$html_select = $this->formSelect(\n            $name='foo[]',\n            $val=2,\n            $opt=array(\n              'class' => 'baz',\n            ),\n            $a_options=[ 1 => 'One',\n              2 => 'Two',\n              3 => 'Three' ]\n);
file_ext_|$ext = pathinfo($file_path, PATHINFO_EXTENSION);
explode_|explode( ',', $s\|);
zf_h_partial_loop_|$model = array(\n    array('key' => 'Mammal', 'value' => 'Camel'),\n    array('key' => 'Bird', 'value' => 'Penguin')\n);\necho $this->partialLoop('partialLoop.phtml', $model);
array_unique_|$a_ = array_unique($a_ , SORT_STRING);
die_|die(__FUNCTION__.\|);
echo_|echo "\|"; // dbg
str_pos_|strpos($str, $substr\| ) !== false
filter_int_|$int = filter_var($int, FILTER_SANITIZE_NUMBER_INT);
mail_|$mail_res = mail($to, $subject, $message);
exec_|$res = `ls -la`;
out_|echo htmlspecialchars($s, ENT_QUOTES);
const_|const CONSTANT = 'str';
typeof_|$var instanceof ParentClass
zf_env_|'DEVELOPMENT'|'PRODUCTION' == strtoupper(APPLICATION_ENVIRONMENT)
memory_limit_|ini_set("memory_limit","256M");
date_past_|$time_ago = strtotime('-3 months');
function_|//\nfunction \|() {\n    $html = '';\n    $html .= '';\n    return $html;\n}\n
throw_|$msg = sprintf('Errore %s ', \n\|);\nthrow new Exception($msg);
if__|$\| = isset($c) ? $c : null;
date_default_timezone_set_|date_default_timezone_set('Europe/Rome');
coalesce_|$w = $x ?? $y ?? $z;
str_repeat_|str_repeat('tmpl',5)
phpunit_test_|// salva in {$classname}Test.php\nclass {$classname}Test extends PHPUnit_Framework_TestCase {\n    public function test{$testname}(){\n        $this->assertEquals(1, 2);\n    }\n}
a_|$\| = array();
date_format_|$date = DateTime::createFromFormat('Y-m-d', $last_date);\n\t\techo $date->format('d/m/Y');
is_str_|ctype_graph($s) || ctype_space($s)
zf_h_headlink_|<?php \n// setting links in a view script:\n$this->headLink()->appendStylesheet('/styles/basic.css')\n                 ->headLink(array('rel' => 'icon',\n                                  'href' => '/img/favicon.ico'),\n                                  'PREPEND')\n                 ->prependStylesheet('/styles/moz.css',\n                                     'screen',\n                                     true,\n                                     array('id' => 'my_stylesheet'));\n  \n// rendering the links in layout\necho $this->headLink() ?>
array_fill_|array_fill($i=0, $n=10 , $v='');
return_|return\| true;
redis_cache_|// usa composer per gestire le dipendenze\n//require "predis/autoload.php";\n//Predis\\Autoloader::register();\ntry {\n    $R = new Predis\\Client(array(\n        //'scheme' => 'tcp',\n        //'host' => 'localhost',\n        //'port' => port,\n        //'password' => 'password',\n        'persistent' => '1'  // persistent!\n    ));\n} catch (Exception $e) {\n    $fmt = 'Exception Redis Connect: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    );\n    die($msg);\n}\n$k = 'foo';\nif( $R->exists($k) ){\n    $value = $R->get($k);\n    var_dump($value);\n} else {\n    // $R->set($k, "bar");\n    // $v = json_encode($v);\n    $R->setex($k, 60*60*24, "value" );\n}
var_dump_|var_
preg_replace_|$reg_char = '\\,\\;\\-\\+\\*\\/\\(\\)\\[\\]\\:\\.\\!\\?#= ';\n$str = preg_replace('/[^a-zA-Z0-9_]/', '', $str);
zf_user_|$user = Zend_Auth::getInstance()->getIdentity();
map_|array_map_
header_json_|header('Content-Type: application/json');
array_merge_|$a = array_merge( $a_1, $a_2 ...);
array_pluck_|pluck_
asort_|hash_sort_
table_a_|\n// genera tabella\n$html_table = '';\nif( !empty($a_rs) ) {\n    // data mappings\n    $data = array_map(function($a_row) {\n        return [\n            'Nome Campo' => $a_row['field'],\n        ];\n    }, $a_rs);\n\n    $html_table = sprintf('<table class="table"> %s %s </table>',\n        // genera head\n        $s_tr_th = sprintf('<tr>%s</tr>',\n            implode('',\n                array_map(function($v) {\n                    return sprintf("<th>%s</th>", $v);\n            } , $a_cols=array_keys($data[0]) ) )\n        ),\n\n        // genera tr\n        $s_tr_mov = implode('',\n            $a_tr = array_map(function($a_row) {\n                return sprintf('<tr>%s</tr>', \n                    $s_td = implode('', array_map(function($v) {\n                            $contains_euro = strpos($v, '&euro;' ) !== false;\n                            $css = is_numeric($v) || $contains_euro ? 'numeric' : '';\n                            return sprintf('<td class="%s">%s</td>', $css, $v );                        \n                    }, $a_row) ) \n                );\n            }, $data)\n        )\n    );\n}\n
except_|$msg = sprintf('Errore %s', );\nthrow new Exception($msg);
chmod_|chmod(/somedir/somefile', 0755);// use octal val
trace_|echo '<pre>',var_dump( debug_backtrace() ),'</pre>'; // DEBUG\ndie(__FUNCTION__.__FILE__);
sf_|sprintf_
zf_flash_|$this->_helper->flashMessenger->addMessage('');
sort_|asort($a, SORT_STRING);// &$a; asort() for keys, sort() for values, returns bool
json_decode_|$a = json_decode($json_str, $use_assoc=true);
array_reduce_|$reduced = array_reduce($a, function($carry_v, $cur_v) {\n    $carry_v *= $cur_v;\n    return $carry_v;\n}, $initial_v='');
else_|else {\|}
__reject_|$a_ = __::reject($a_=[1,2,3], function($n) {\n  return $n % 2 === 0; \n});\n
class_|// funzione:\nclass \|{\n    public function __construct(){}\n    public function (){}\n}
zf_dbg_|Zend_Debug::dump($, 'label:');
border_|border: 1px solid #\|;
microtime_|$time_start = microtime(true);\n// long operation here\nvar_dump( microtime(true)- $time_start );
move_uploaded_file_|$b_res = move_uploaded_file($tmp_name, $dest_path);
set_time_limit_|set_time_limit(0);
escape_|echo htmlspecialchars($s, ENT_QUOTES);
[yab]
[lua]
[makefile]
[sas]
[rtf]
[ptl]
[gcbasic]
[xsl]
[moin]
code_|<code bash>\|</code>
quote_|<quote "">\|</quote>
[bibtex]
[hxml]
[modula3]
[perl]
[tsp]
[transact-sql]
[lisp]
[smi-mib]
[actionscript]
[pop11]
[progress]
[jamon]
[ini]
[html]
[go]
var_|fmt.Printf("%v", v) //DBG
array_string_|as_ := [...]string{"7", "8","9"}
err_|if err != nil { panic(err) }
print_|fmt.Printf("Hello %d\\n", 23)\nfmt.Fprint(os.Stdout, "Hello ", 23, "\\n")\nfmt.Println("Hello", 23)\nfmt.Println(fmt.Sprint("Hello ", 23))
switch_|    // switch\n    switch os := runtime.GOOS; os {\n    case "darwin":\n        fmt.Println("OS X.")\n    case "linux":\n        fmt.Println("Linux.")\n    default:\n        fmt.Printf("%s.", os)\n    }
rand_|// import "math/rand" "time"\nrand.Seed(time.Now().UnixNano())\nfmt.Println( rand.Intn(100) )
interface_|type Block interface {\n    BlockSize() int\n    Encrypt(src, dst []byte)\n    Decrypt(src, dst []byte)\n}
ife_|if value, err := pack1.Func1(param1); err != nil {\n}
isset_|cities := map[string]string{"city1": "New York", "city2": "Portland"}\n// ok is boolean\nvalue, ok := cities["city2"] // return value if found or ok=false if not found\nif ok {\n    fmt.Println("value: ", value)\n} else {\n    fmt.Println("key not found")\n}
get_env_|str := os.Getenv("HOME")
file_exists_|// import os\nfile := "file.txt"\nif _, err := os.Stat(file); err == nil {\n    fmt.Println(file, "exist!")\n}
explode_|// import strings\n//str := "ADAM, EVE, JAMES"\na_str := strings.Split(str, ",")
class_|// Simple counter server.\ntype Counter struct {\n    n int\n}\n\nfunc (ctr *Counter) ServeHTTP(w http.ResponseWriter, req *http.Request) {\n    ctr.n++\n    fmt.Fprintf(w, "counter = %d\\n", ctr.n)\n}
float_to_string_|// import strconv\nstr := strconv.FormatFloat(12342323.234232, 'f', 6, 64)
_POST_|R *http.Request\nname := R.FormValue("k")
if_|if v, ok := map[k]; ok { \n    fmt.Println(k, v, " key is present")\n}
map_struct_|m = map[string]Vertex{\n    "Bell Labs": Vertex{X:2, Y:5},\n    "Google":    Vertex{X:5, Y:8},\n}\nfor k, v := range m {\n    fmt.Printf("The value for %s: %d %d \\n", k, v.X, v.Y )\n}
flag_|    var goRoot = "";\n    flag.StringVar(&goRoot, "goroot", goRoot, "Go root directory")
function_|func Fnamw(url string) (string, error) {\n    if ok {\n        return res, nil\n    }\n    return "", fmt.Errorf("not found: %s", url)\n}
str_replace_|// import stings\nstr := strings.Replace(my_str, " ", "", -1)
new_|//for arrays, structs and all value types: returns pinter\nvar f File = new(File)
file_open_|w, err := os.Create("output.txt")\nif err != nil {\n    panic(err)\n}\ndefer w.Close()
make_|//for slices, maps and channels: use make, initilize to zero\n//for arrays, structs and all value types: use new\nvar v  []int = make([]int, 100) // slice int inizializzata a 0 di 100 elementi
struct_|type Circle struct {\nx, y, r float64\n}\nc := new(Circle)\nc := Circle{x: 0, y: 0, r: 5}\nfmt.Println(c.x, c.y, c.r)
echo_|//import "fmt"\nfmt.Println("Hello", 23)
_GET_|R http.Request\nstr := R.URL.Query().Get("k");
mapi_|imap := map[string]int{\n    "a": 1,\n    "b": 2,\n}
file_put_contents_|// import os\nfile, err := os.OpenFile("input.txt", os.O_APPEND|os.O_WRONLY,0600)\nif err != nil {\n    panic(err)\n}\ndefer file.Close()\nif _, err = file.WriteString(" this is the APPENDED text"); err != nil {\n    panic(err)\n}
args_|func myadd(args ...int) int {\n    total := 0\n    for _, v := range args {\n        total += v\n    }\n    return total\n}
argv_|// import "flag"\nflag.Parse() \narg := flag.Arg(0) // get 1st argument
for_|for i := 0; i < len(p); i++ {\n    fmt.Printf("p[%d] == %d\\n", i, p[i])\n}
array_int_|array := [...]int{7, 8, 9}
file_get_contents_|// import "io/ioutil"\nfile, err := ioutil.ReadFile("testfile.txt")\nif err != nil {\n    fmt.Println(err)\n    return\n}\n// out the file content\nfmt.Println(string(file))
method_|func (f *fakeFetcher) Fetch(url string) (body string, urls []string, error) {\n    res, ok := some_method_call();\n    if ok {\n        return res.body, res.urls, nil\n    }\n    return "", nil, fmt.Errorf("not found: %s", url)\n}
md5_|//import "crypto/md5"\nhash := md5.New()\nio.WriteString(hash, my_str)  // append into the hash\nfmt.Printf("%x", hash.Sum(nil)) // get the hash
log_|log.Fatal("$USER not set")
delete_|delete(map, "key")
foreach_|    for k, v := range pow {\n        fmt.Printf("2**%d = %d\\n", k, v)\n    }
unset_|cities := map[string]string{ "city1":"New York", "city2":"Adelaide" };\ndelete(m, k)  // remove element m[k] from map m
main_|/*\nscopo del programma:\n*/\npackage main\nimport (\n    "fmt"\n)\nfunc init(){}\nfunc main() {\n    fmt.Println("Hello, go")\n}
array_|slice1 := []int{1,2,3}
map_|mi := make(map[string]int)\nmi["Answer"] = 42    \nfor k, v := range mi {\n}\n
dir_walk_|// import "os", "path/filepath"\n      dirname := "." + string(filepath.Separator)\n      d, err := os.Open(dirname)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      defer d.Close()\n      files, err := d.Readdir(-1)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      fmt.Println("Reading "+ dirname)\n      for _, file := range files {\n          if file.Mode().IsRegular() {\n              if filepath.Ext(file.Name()) == ".png" {\n                fmt.Println(file.Name())\n              }\n          }\n      }
[sgml]
[bcel]
[psp]
[antlr]
[PostgreSQL]
[cmake]
[ant]
[assembly-m68k]
[omnimark]
[interlis]
[mxml]
[avro]
[cvs-commit]
[lilypond]
[jsp]
[foxpro]
[rfc]
[tex]
[mail]
[assembly-macro32]
[svn-commit]
[aspect-j]
[squidconf]
[rview]
[jhtml]
[jedit-actions]
[gradle]
[embperl]
[mysql]
[rd]
[zpt]
[objective-c]
[mqsc]
[lex]
[rust]
[prolog]
[assembly-r2000]
[sdl/pr]
[hex]
[swig]
[javafx]
[rebol]
[s+]
[dsssl]
[forth]
[nqc]
[RPG]
function_|     D calc_int        PR            10I 0\n     D    parm1                       5I 0 VALUE\n      * must match the corresponding prototype\n      * (PI is optional if the SubR does not return and does not have any parameters)\n      * Other def of variables, constants and prototypes, are LOCAL definitions\n      * Calc may refer to both local and global definitions\n      * SubR must contain a RETURN operation\n     P calc_int        B\n     D calc_int        PI            10I 0\n     D    parm1                       5I 0 VALUE\n     D Result          S             10I 0\n      /free\n         Result = parm1 +1;\n         return Result;\n      /end-free\n     P                 E
read_|read(e) File_Name;\nif %error(File_Name);\n    // TODO: error reporting\nelse;\n    dow not %eof(File_Name);\n        // TODO: process record\n        read File_Name;// read next\n    enddo;\nelse;
dou_|dou exit;\n    if cond = 1;\n        exit = *on;\n    else;\nenddo;
free_|/free\n/end-free
setgt_|setgt *Hival FileName;//go to file EOF\nReadP FileName;\ndow not %eof(FileName);\n    // process record\n    ReadP FileName;\nenddo;
sub_|begsr name;\nendsr;
setll_|setll *loval FileName;\ndow (1=1);\n  read FileName;\n  if %eof;\n    leave;\n  endif;\n  if $oo <=0;\n    iter;\n  endif;\nenddo;
chain_|      * tabella di base\n     F intct30L uf a e           k disk    rename(intct0:intct_30) prefix(t_)\n      * DS Key, Ã¨ automaticamente qualified\n     D OrdRecKeys      ds                  likerec(intct_30:*key)\n\n      /free\n         OrdRecKeys.t_tcoage   = i_coage;\n         OrdRecKeys.t_tanord   = i_anord;//puoi usare campi multipli\n         chain(e) %kds(OrdRecKeys) intct_30;\n         if %error;\n           // TODO: report key not found\n         endif;\n         if %found();\n           // t_tdaord accessibile... elabora il record come in fixed\n         endif;\n      /end-free
atoi_|%unsh()
replace_|\nresult_str = %replace(sustr:s1:%scan(sustr:s1):%len(sustr));
for_|D $i              s              3u 0\nfor $i=1 to %elem(ArrayName);\n// for $i = %elem(ArrayName) downto 1 by 1;\n    ArrayName($i);\n    //iter; leave; \nendfor;\n
h_|     H DECEDIT('0,') DATEDIT(*YMD/)\n     H option(*srcstmt : *nodebugio)\n     H dftactgrp(*no) bnddir('AW')
switch_|    select;\n        when opt = 'A';\n            exsr AddRec;\n        when opt = 'D';\n            exsr DelRec;\n        when opt = 'C';\n            exsr ChgRec;\n    endsl;
try_|monitor;\n\non-error;\n    retval = 'ERROR';\nendmon;
monitor_|monitor;\n    \non-error;\n    retval = 'ERROR';\nendmon;
while_|    dow not *in03;\n    enddo;
sql_select_many_|     D $matM2          ds                  QUALIFIED\n     D  des1                         70a\n     D  des2                         70a\n     * per estrarre tutti i campi \n     D $zntcl        E DS                  QUALIFIED OCCURS( 50 ) INZ\n     D                                     EXTNAME( zntcl00f )\n \n     exec sql select padem1, padem2 into :$MATM2 from MATM200f;\n     if SQLCOD<>0;\n        errore = '1';\n        o_errstr  = 'SQL error SQLCOD: '+%char(SQLCOD) ;\n        o_errn = SQLCOD;\n     endif;
*--|*-----------------------------------------------------------------------
string_|%char() \n// cast a char di I e F
date_|//*ISO: \n//*USA: 12312004\nD date   S    D\ndate = %char( %date(ymd:*ISO) : *USA ); \ndate = %date('040596':*MDY0);// date='1996-04-05'
callpp_|// per usare i prototipi occorrono delle specifiche\nH dftactgrp(*no) bnddir('AW')\n  /copy *libl/srccpy,cpy_protaw\n     // prototipo di funzione, su modulo esterno\n     D aw_getc         pr             1n   EXTPROC('AW_GETC')\n     D   aw_getc_daor                 8p 0 value\n     D   aw_getc_nuor                11p 0 value\n     D   aw_getc_note                30A\n\n       // chiamata di una funzione con prototipo\n       callp aw_getc(da_ord:nu_ord:$awc_note);
copy_|/COPY $lib/$file,$function\n/IF NOT DEFINED $MODNAME\n/DEFINE $MODNAME\n    // code goes here\n/ENDIF
str_pos_|pos = %scan('test':s_email);
dow_|    dow not *in03;\n    enddo;
if_|if ();\nelseif ();\nelse;\nendif;
charat_|pos = %check('@':s_email);
callp_|// prototipo comando esterno\n// uso:\n//       $cmd = 'CHGJOB CCSID(*SYSVAL)';\n//       callp exec(%trim($cmd):%len(%trim($cmd)));\n     D myexec          pr                  extpgm('lib/QCMDEXC')\n     D   ex_cmd                   32702a   const\n     D   ex_cmdlen                   15p 5 const\n\n\n
sql_select_one_|exec SQL  SELECT FName, LName, email INTO :fstname,:lstname,:email\n  FROM  contacts\n    WHERE cstnbr = :client\n    FETCH FIRST ROW ONLY;\nif (SqlCod<>0 or SQLSTATE >= '02000'); \n    // NOT FOUND leavesr;\nelse;  \n    // FOUND\nendif;\n\n
char_replace_|str_dec = %xlate('$.,':' ':'$1,000.11');
strtoupper_|     D U_case          C                   CONST('ABCDEFGHIJKLMNOPQRST-\n     D                                     UVWXYZAEEIOU')\n     D L_Case          C                   CONST('abcdefghijklmnopqrst-\n     D                                     uvwxyzÃ Ã¨Ã©Ã¬Ã²Ã¹')\n     $$_des = %xlate(l_case:u_case:$$_des);
int_|%int() \n//usa unsh() per float, cast a positivo
[s#]
[fhtml]
[occam]
[objectrexx]
[rpm-spec]
[apdl]
[myghty]
[cplex-lp]
[kotlin]
[scala]
[tcl]
[rcp]
[template-toolkit]
[sip]
[python]
[i4gl]
[clips]
[roff]
[rest]
[stata]
[twiki]
[text]
code_|<code bash>\n\|\n</code>
class_|// funzione:\nclass \|// extends implements\n{\n\n}
call_|PWD=`pwd`\n# or PWD=$(pwd)
printf_|System.out.printf("%s,%.2f", s, f);
glob_|foreach (glob("*.txt") as $filename) {\n    echo "$filename size " . filesize($filename) . "\\n";\n}
[awk]
[verilog]
[outline]
[erlang]
[creole]
code_|<code php>\|</code>
html5_progressbar_|<progress max="100" value="80"></progress>\n<style type="text/css">\n    progress[value] {\n      /* Reset the default appearance */\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n\n      /* Get rid of default border in Firefox. */\n      border: none;\n\n      width: 250px;\n      height: 20px;\n\n      background-color: blue;\n      /* For IE10 */\n      color: blue;\n    }\n</style>
image_|{{image.png}}
[yaml]
[assembly-ags]
[shellscript]
dirname_|DIRNAME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
[gettext]
[jcl]
[jflex]
[d]
[c]
[coldfusion]
[b]
[maven]
[typoscript]
[scheme]
[dart]
[antlr4]
[texinfo]
[slax]
[assembly-agc]
[java]
ne|nextElement()
Il|SwingUtilities.invokeLater(new Runnable()\n{\n\tpublic void run()\n\t{\n\t\t\|\n\t}\n});
date_|import java.util.Date;\nimport java.util.Formatter;\n\nString name = "";\nDate today = new Date();\nFormatter formatter = new Formatter();    \nformatter.format(" sono le %tT", today);\nSystem.out.println(formatter);
W|while($1)\n{\n\t\|\n}
V|Vector
Fd|for(int $1 = $2 - 1; $1 >= 0; $1--)\n{\n\t\|\n}
serr|System.err.println(\|);
print_|System.out.println(s);
Fc|for(int $1 = 0; $1 < $2.size(); $1++)\n{\n\t$3 \| = ($3)$2.get($1);\n}
Ie|if($1)\n{\n\t|\n}\nelse\n{\n\t\n}\n
VDE|VFS.DirectoryEntry
S|String
JE|JEditTextArea
Fa|for(int $1 = 0; $1 < $2.length; $1++)\n{\n\t$3 \| = $2[$1];\n}
P|public
O|Object
N|$1 $2 = new $1(\|);
gta|getTextArea()
gp|jEdit.getProperty(\|)
I|if($1)\n{\n\t\|\n}
H|Hashtable
F|for(int $1 = 0; $1 < $2; $1++)\n{\n\t\|\n}
Br|BufferedReader $1 = new BufferedReader(\|);
E|Exception
D|do\n{\n\t\|\n}\nwhile($1);
sp|jEdit.setProperty(\|);
Mal|MalformedURLException
C|$1 $2 = ($1)\|
B|Buffer
ogs|import org.gjt.sp.
hme|hasMoreElements()
El|else\n{\n\t\|\n}
IO|IOException
gb|getBuffer()
IN|$1 $2 = ($1)$3.next();
Ei|else if($1)\n{\n\t\|\n}
chs|Box.createHorizontalStrut(\|)
Cget|($1)$2.get($3)
class_|/**\n * funzione\n */\npublic class __class__ {\n    private double amount;\n    public __class__(String owner) {\n        this.owner = owner;\n    }\n}
sbp|jEdit.setBooleanProperty(\|);
cg|Box.createGlue()
logw|Log.log(Log.WARNING,this,\|);
CtoArray|($1[])$2.toArray(new $1[$2.size()])
logn|Log.log(Log.NOTICE,this,\|);
logm|Log.log(Log.MESSAGE,this,\|);
DMTN|DefaultMutableTreeNode
printf_|System.out.printf(" %s,  %.2f ", s, f );
loge|Log.log(Log.ERROR,this,\|);
cvs|Box.createVerticalStrut(\|)
logd|Log.log(Log.DEBUG,this,\|);
sprintf_|String s = String.format("result:%4d", i );\n
WI|while($1.hasNext())\n{\n\t\|\n}
ogsu|import org.gjt.sp.util.
array_list_|Collection<String> l = new ArrayList<String>();\nl.add("");\n\nIterator<String> it=l.iterator();\nwhile(it.hasNext()){ String tmp = it.next(); }
gbp|jEdit.getBooleanProperty(\|)
main_|// mkdir -p it/ev/prj\n// javac MyApp.java\n// java it.ev.prj.MyApp\npackage it.ev.prj;\npublic class MyApp {\npublic static void main(String[] args) {\|}\n}
sout|System.out.println(\|);
map_|Map<Integer, String> hash = new HashMap<Integer, String>();\nhash.put(2, "");
ogsj|import org.gjt.sp.jedit.
[assembly-parrot]
[xml]
[dot]
[rakefile]
[cil]
[powershell]
[postscript]
[logtalk]
[sql-loader]
[redcode]
[literate-haskell]
[renderman-rib]
[doxygen]
[javacc]
[pike]
[ruby]
[applescript]
[ml]
[pascal]
//--|//------------------------------------------------------------------------------
case_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
while_|cds.First;\nwhile(not cds.EOF) do begin\n  cds.Next;\nend;
switch_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
[c#]
[bbj]
[freemarker]
[coffeescript]
[vbscript]
[url]
[visualbasic]
[povray]
[jmk]
[icalendar]
[slate]
[tld]
[shtml]
[haskell]
[gsp]
[hlsl]
[n3]
[typescript]
var_|println('__FUNCTION__()', \|);
_filter_|var a_even = _.filter([1, 2, 3, 4], function(num){ return num % 2 == 0; });
preg_scan_|"dolor sit amet".match(/\\w+/g);
reg_get_|rx = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nm = rx.exec('2009-06-03');\nyr = m[1];\nmo = m[2];\ndy = m[3];
date_|moment().format('YYYY-MM-DD HH:mm:ss');
jq_json_|$.getJSON( "ajax/test.json", function( data ) {\n  var items = [];\n  $.each( data, function( key, val ) {\n    items.push( "<li id='" + key + "'>" + val + "</li>" );\n  });\n \n  $( "<ul/>", {\n    "class": "my-new-list",\n    html: items.join( "" )\n  }).appendTo( "body" );\n});
func_|function(){}
date_now_|var t:number = (new Date()).getTime() / 1000
date_make_|var yr = 1999;\nvar mo = 9;\nvar dy = 10;\nvar hr = 23;\nvar mi = 30;\nvar ss = 0;\nvar t = new Date(yr, mo - 1, dy, hr, mi, ss);
dict_bb_|var a_list: _.Dictionary<string> = {};
a_num_|var a_: Array<number> = [1, 2];
hash_|dict_js_
construct_|constructor(public x: number ) { \n  //sueper();\n}\n//public getX() { return this.x; }\n
count_|[].length\n//var k_num:number = _.size(hash);
cache_|var key:string = _.str.sprintf('%s_%s_%s', 'app.adapters.items', searchKey, use_bestsellers );\n        if( MemCache.has(key) ) {\n            results = MemCache.get(key);\n        } else {\n            // compute list\n            results = getItemsFilterd(searchKey, use_bestsellers);\n        }
interface_rec_|interface Person {\n  name: string,\n  alma_mater?: string\n}
reg_replace_|str.replace(/[^A-Za-z0-9_]+/g, "_");
date_add_|// use moment()\nvar t1 = new Date();\nvar delta = (10 * 60 + 3) * 1000;\nvar t2 = new Date(t1.getTime() + delta);
bb_view_|// var instance = new __app__.Views.__viewName__({\n//     el: $('#myid'),\n//     model: mymodel\n// });\n// instance.render().delegateEvents();\n__app__.Views.__viewName__ = Backbone.View.extend({\n    initialize: function (opt) {\n        this.listenTo(this.model, 'change', this.render);\n    },\n    events: {\n        "click .toggle":  "onToggleClick",\n    },\n    render: function () {\n        var data = this.model.attributes;\n        var html = template_func(data);\n        this.$el.html(html);\n        // subviews: preferibile configurarle per renderle manualmente\n        // this.collection.each(function(m){\n        //     var tmpView = new subView({ model: m });\n        //     this.$el.append(tmpView.render().el);\n        // }, this);\n        return this;\n    },\n    //onToggleClick: function(event){\n    //    this.model.set({name:$("#name").val()});\n    //}\n});
array_merge_|var a = _.extend(a1, a2);
interface_|interface IEventFunc extends Function {\n    (message: string): void;\n    func(): string;\n}\n\n
isset_|typeof_
str_match_|var m = /\\d{4}/.exec(s);\nif (m) {\n  var match:string = m[0];\n}
enum_|enum Color {Red, Green, Blue};\nvar c: Color = Color.Green; //  c = 1:
typeof_|typeof \| !== 'undefined'
console_|log_
dict_|dict_js_
substr_|str.substring(0,2);
now_|moment().format('YYYY-MM-DD hh:mm:ss')
date_parts_|t.getHours();\nt.getMinutes();\nt.getSeconds();
void_|if ( value === void 0) { value = 0; }
lambda_|var sqr2: (x: number) => number = (x) => {\n  return x * x;\n};
throw_|throw new Error("msg");
class_|class AClass {\n    constructor(m: string) {\n    }\n}\nclass BClass extends AClass {\n    private str: string;\n    private el: HTMLElement;\n    private num: number;\n    constructor(m: string) {\n        super("aaa");\n        this.str = m;\n    }\n    public getStr() {\n        return "str: " + this.str;\n    }\n    public static member(b: string): string { return ''; }\n}
in_array_|_.indexOf([], val) !== -1
func_get_args_|function test(s: string, â€¦rest: string[]): void {\n  console.log(s);\n  if (rest.length)\n    console.log(rest[rest.length - 1]);\n}
if_|if( typeof_ ) { }
function_|//\nfunction add(x: number): number {\n    return x;\n}
str_replace_|s = "do re mi mi mi";\ns.replace(/mi/g, "ma");
dict_js_|var item_list: { [k: string]: Object; } = { };
json_encode_|var str:string = JSON.parse(obj);
a_str_|var a_: Array<string> = ['a','b'];
public_|public \|():boolean {\nreturn true;\n}
closure_|function make_counter(): () => number {\n  var i = 0;\n\n  return function() {\n    i += 1;\n    return i;\n  }\n}
jq_get_json_|var r:JQueryXHR = $.getJSON(url: string, data?: Object, \n\tfunction(data: any, textStatus: string, jqXHR: JQueryXHR){\n});\n
get_|    private _name: string;\n    get name(): string {\n        return this._name;\n    }\t\n    set name(s: string) {\n        this._name = s; \n    }
opt_|p_options:{[k: string]:any;}\nvar options = _.extend({         \n    param: true\n}, p_options );
overload_|interface IFoo {\n    bar: {\n        (s: string): number;\n        (n: number): string;\n    }\n}\nclass Foo{\n    public bar(s: string): number;\n    public bar(n: number): string;\n    public bar(arg: any): any {\n        if (typeof(arg) === 'number'){\n            return arg.toString();\n        }\n        if (typeof(arg) === 'string'){\n            return arg.length;\n        }\n    }\n}
module_|module M {\n    export class C {\n    }\n}
static_|static member(b:string):string { return ''; }
each_|_.each(a_list, function(v, k, list) {\|});
replace_|str=str.replace("A", "B");
printf_|_.str.sprintf('%s/%s', 1,2 );
_each_|_.each(hash, function(v, k, list){ });
for_|for( var i=0; i<a_list.length; i++ ) {\|}
sprintf_|var s = _.str.sprintf('%s (%s)', a['x'], a['y']);
reference_|/// <reference path="jquery.d.ts" />
foreach_|[1, 2, 3].forEach((item, index, array) => { console.log(item); });
try_|try {\n\|} catch(e) {\n    // e.message\n}
array_|a: TypeName[];
json_decode_|var obj:any = JSON.parse(json);
[plaintex]
[cobol]
[csv]
[css]
hide_|visibility:hidden;\n/*occupa posto nel layout*/
shadow_|/* oriz vert blur_radius spread radius */\n                -webkit-box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.5);
dbg_|border: 1px solid #\|;/*dbg*/
gradient_|// use less or sass mixin
show_|display:block;
media_|mediaquery_
mediaquery_|/* 480 768 */\n@media only screen and (max-width : 1024px) {\n}
remove_|display: none;
alpha_|opacity:0.85;\nfilter:alpha(opacity=85);
[assembly-x86]
[binsource-agc]
[ans-forth94]
[javascript]
foreach_|a.forEach(function(v,k){\n    // console.log(v);\n});\n// IE<=8 \n// for(var k in a){ if(a.hasOwnProperty(k)){ var v = a[k]; }}
js_require_|js_include_
min_|var n = Math.min(n1,n2);
jq_is_|$( "ul" ).click(function( event ) {\n  var target = $( event.target );\n  if ( target.is( "li" ) ) {\n    target.css( "background-color", "red" );\n  }\n});
yui_ajax_|var t = YAHOO.util.Connect.asyncRequest('GET', url, {\n        success: function(o) {\n            // o.status\n            // o.statusText\n            // o.responseText\n            // o.argument\n        },\n        failure: function(o) { },\n        // Passing an array of arguments to both the success and failure callback\n        argument: [argument1, argument2, argument3]\n    },\n    null /* "new=1&old=2" */\n);
if_|if( $jq_selection.length && !_.isEmpty(o) ) {\|}
_sprintf_|var s = _.str.sprintf('%s', val);
jq_attr_|$(selector).attr(k, v);
jq_build_|$('<div/>', {\n    'id':'myDiv',\n    'class':'myClass',\n    'style':'cursor:pointer;font-weight:bold;',\n    'html':'<span>For HTML</span>',\n    'click':function(){ alert(this.id) },\n    'mouseenter':function(){ $(this).css('color', 'red'); },\n    'mouseleave':function(){ $(this).css('color', 'black'); }\n}).appendTo('body');
reg_get_|var regexp = new RegExp(s_query, 'gi');\nvar res = str.match(regexp);
redirect_|window.location = "http://www.name.com/";
try_|try {\n\|} catch(e){\n        //console.log(e.message); \n\t//alert(format_exception(e));\n} finally {}
jq_ajax_|$.ajax({\n  url: '/data/people.json',\n  type: 'POST',\n  dataType: 'json',\n  success: function( resp_o ) {\n    $( '#target').html( resp_o.name );\n  },\n  error: function( req, status, err ) {\n    console.log( 'something went wrong', status, err );\n  }\n});
_template_|var html = _.template("<%=k%>").call(this, {k: "aa"});
jq_post_|jq_ajax_post_
include_once_|// see require_ require_once_ include_ jq_require_
jq_prop_|var el = $(selector).prop(k, v); // see jq_attr_
sprintf_|_sprintf_
jq_effects_|$(this).show()       ;// Show the selected elements.\n$(this).hide()       ;// Hide the selected elements.\n$(this).fadeIn()     ;// Animate the opacity of the selected elements to 100%.\n$(this).fadeOut()    ;// Animate the opacity of the selected elements to 0%.\n$(this).slideDown()  ;// Display the selected elements with a vertical sliding motion.\n$(this).slideUp()    ;// Hide the selected elements with a vertical sliding motion.\n$(this).slideToggle();// Show or hide the selected elements with a vertical sliding motion
jq_html_|// Load HTML from the server and place into the matched elements\n$("#result").load("ajax/test.html", function() {\n    alert( "Load was performed." );\n});
preg_|reg_replace_
for_|for( var i=0; i<a.length; i++) {\|}
call_|fun.call(this_obj, arg1, arg2, ... );
str_match_|var is_found = 'For more information, see Chapter 3.4.5.1'.match( /(chapter \\d+(\\.\\d)*)/i );\nconsole.log(is_found);
to_array_|var args = Array.prototype.slice.call(arguments);
is_empty_|jq_is_empty_
_map_|var a_=_.map([1, 2, 3], function(num){ return num * 3; }); // [3, 6, 9]\nvar a_=_.map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; }); // [3, 6, 9]
jq_promise_|/* per una operazione asincrona ritorna .promise(), intercetta il .done() con una callback\n$( "div" ).promise().done(function() {\n     // op Finished!\n});\n$.when( effect() ).done(function() {\n    // op Finished!\n}); */\n\nfunction doSomethingLater( fn, time ) {\n  var dfd = $.Deferred();\n  setTimeout(function() {\n    dfd.resolve( fn() );\n  }, time || 0);\n  return dfd.promise();\n}\nvar success = function( resp ) {\n  $( '#target' ).html( 'it worked' );\n};\nvar err = function( req, status, err ) {\n  $( '#target' ).html( 'it failed' );\n};\nvar dfd = doSomethingLater(function() { /* onTimeOut */ }, 100);\ndfd.then( success, err );\n
include_|LazyLoad.js(['foo.js', 'bar.js', 'baz.js'], function () {\n  alert('all files have been loaded');\n});\n// see require_ require_once_ include_ jq_require_ js_include_
jq_json_|jq_ajax_json_
jq_disable_|// su checkbox\n$('form#form_id #checkid').change(function(){\n    if( this.checked ){\n        $('form#form_id input:text').attr('disabled','disabled');\n    } else {\n        $('form#form_id input:text').removeAttr('disabled');\n    }\n}).trigger('change');\n\n// tutti i submit di una form\n$('form#form_id').map(function(){\n    var selector_btn = 'input[type=button], input[type=submit], :submit';\n    $(this).find(selector_btn).prop('disabled', true);\n});
jq_dom_map_|$("input").map(function(){\n      return $(this).val();\n    }).get().join(", ")
jq_contains_|str_contains_
jq_is_numeric_|var is_num = $.isNumeric( num );
jq_get_|jq_ajax_get_
jq_wrap_all_|$( ".inner" ).wrapAll( "<div class='my_css' />");
str_contains_|var is_containing_x = url.search(/xxx/) != -1;\nvar is_containing_x = /yes/i.test('xxx') ;\nvar is_containing_x = str.toLowerCase().indexOf("xxx) >= 0);
is_object_|function is_object(v) {\n    //One of the quirks of JavaScript is that typeof null returns "object". But itâ€™s not an object. So letâ€™s check for that, too\n    return (v instanceof Object && v.toString() == '[object Object]');\n}
jq_remove_|// elimina dal DOM i nodi selezionati\n$(selector).remove();
jq_wrap_|$("p").slice(1,3).wrap("<i></i>");\n
clo_|func_
factory_|function createObject(name) \n{\n  var privateName = name || "I am private name";\n  var privateMethod = function () {\n    return "result of private"; \n  }\n  return {\n    publicName: "I am public name",\n    publicMethod: function () {\n           alert("privateName is " + privateName + ", privateMethod called: "+ privateMethod()); \n      }\n  }\n}
jq_each_|$.each(associative_array, function(key, value) { \n  alert(key + ': ' + value); \n});
_size_|var a_={one: 1, two: 2, three: 3};// 3\nvar c = _.size(a_);
jq_exists_|jq_hasnode_
substr_|str.substr( beg=0, len=4);
max_|var n = Math.max(n1,n2);
in_array_|var is_present = ["Banana", "Orange"].indexOf("Apple") >= 0; // jq_inarray_
json_encode_|var text = JSON.stringify(data);
log_|console.log(\|);
yui_style_|YAHOO.util.Dom.setStyle(__display_id, 'border', "1px solid "+color );
func_|var f = function(){\n};
static_|myclass.method = function() {\n};
jq_ready_|$(function(){\|});
jq_delegate_|$( "table" ).delegate( "td", "click", function() {\n  $( this ).toggleClass( "chosen" );\n});
_empty_|_.isEmpty(|)
date_|function format_date_it(date){\n    var m = date.getMonth() + 1;\n    var str = date.getDate() + "/" + m + "/" + date.getFullYear();\n    return str;\n}\nfunction date_last_week(){\n    var es = (7*24*60*60*1000);//secondi in una settimana\n    var ts = ( (new Date()).getTime() - es );\n    return new Date(ts);\n};\nvar str = format_date_it( date_last_week() );
indexof_|//var a = ['apple','orange','pear'];\nvar is_found = (a.indexOf("orange") != -1);\nvar has_char = str.indexOf('@') === -1;
jq_submit_|$('form').submit(function(e){\n    e.preventDefault();// prevent the default browser behaviour on this case\n    var isErrorFree = true;\n    // custom validation\n    $('input.required, select.required, textarea.required',this).each(function(){\n        if ( validateElement.isValid(this) == false ){\n            isErrorFree = false;\n        };\n    });\n    if (isErrorFree){ \n\t// disable multiple submissions\n        $(this).find('button, input[type=submit]').attr('disabled', 'disabled');\n\t// send data\n\tvar a_ = $(this).serializeArray();\n\t$.post( url, data, callback, type );\n    }\n    return isErrorFree;\n});\n\n
jq_checked_|$(":checkbox").is(':checked')
define_|define(["my/dependency"],\n    function(dependency) {\n        // private code\n        return function() {\n            // public code\n        }\n    }\n);
jq_foreach_|$.each(a, function(i,key){\|});
json_|var data = JSON.parse(text);\nvar text = JSON.stringify(data);
_reduce_|var sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);// 6
jq_is_empty_|jQuery.isEmptyObject({}); // true\njQuery.isEmptyObject({ foo: "bar" }); // false
timestamp_|var now = new Date().getTime().toString();
jq_extend_|var settings = $.extend({ test: 1 }, opt);\n
jq_form_validate_|// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js\n// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js\n// @see http://jqueryvalidation.org/\n$().ready(function() {\n    // Selecting the form and defining validation method\n    $("#form").validate({\n        // Passing the object with custom rules\n        rules : {\n            // login - is the name of an input in the form\n            login : {\n              // Setting login to be required\n              required : true\n            },\n            email : {\n                required : true,\n                // Setting email pattern for email input\n                email : true\n            },\n            password : {\n                required : true,\n                // Setting minimum and maximum lengths of a password\n                minlength : 5,\n                maxlength : 8\n            }\n        },\n        // Setting error messages for the fields\n        messages: {\n            login: "Enter you login",\n            password: {\n                required: "Enter your password",\n                minlength: "Minimum password length is 5",\n                maxlength: "Maximum password length is 8"\n            },\n            email: "Enter you email"\n        },\n        // Setting submit handler for the form\n        submitHandler: function(form) {\n            form.submit();\n        }\n    });\n});
jq_target_|$('').click(function(e){\nvar el = jQuery(e.target).closest('tr');\n});
jq_get_json_|var r: JQueryXHR = $.getJSON(url: string, data?: Object, function(data: any, textStatus: string, jqXHR: JQueryXHR){\n\n});\n
jq_find_|$( 'li' )\n.find( 'span' )\n.attr( 'title', 'Hover over me' )\n.click(function() {\n    $( this ).addClass( 'clicked' );\n});
jq_by_attribute_|var el = $("[attribute='value']");
now_|var now_ts = (new Date).getTime();//timestamp
jq_data_|data-hidden="true" data-options='{"name":"John"}'\n$("div").data("hidden") === true;\n$("div").data("options").name === "John";
merge_|jq_merge_
jq_serialize_|// URL-encoded notation\nvar url_data = $('form').serialize();\n// array [{ name: "a", value: "1" }]\nvar a_data   = $('form').serializeArray();\n
jq_mouse_over_|$('div').mouseover(function() {\n    $(this).addClass('blue-bg');\n}).mouseleave(function(){\n    $(this).find('.content').fadeOut();\n});
require_|require(["jquery", "undercore"], function($, _) {\n        // $ && _ are available\|\n});\n// see require_ require_once_ include_ jq_require_
extend_|jq_extend_
trim_|var s = $.trim(str);
jq_end_|$( "ul.first" )\n  .find( ".foo" )\n    .css( "background-color", "red" )\n  .end()  // returs a query object\n  .find( ".bar" )\n    .css( "background-color", "green" );
str_replace_|var str = 'John Smith'.replace(/(\\w+)\\s(\\w+)/, '$2, $1');
jq_unique_|var a_unique = $.unique( a_ );
isset_|\| !== void 0
jq_filter_|$(".parent").find(".bar").filter("p");
f_|func_
//--|\|//------------------------------------------------------------------------------
switch_|switch(\|) {\n  case : \n  break;\n  default: \n    //istruzioni \n}
ceil_|var n = Math.ceil(7.004); // 8
rand_|var n = Math.random();// between 0 (inclusive) and 1 (exclusive)\n
require_once_|// see require_ require_once_ include_ jq_require_
jq_hover_|jQuery('#something').hover(\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 1, 1000 )\n.animate( {height:500}, 1000 );\n},\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 0.8, 1000 )\n.animate( {height:200}, 1000 );\n}\n);\n
method_|    method: function() {\n    },
prompt_|var s = prompt("question","default");\nif ( s!=null && s!="" ) {\n}
filter_|var _a = a.filter(function(v){\n    return v.name === "test";\n});
is_numeric_|jq_is_numeric_
join_|array.join(',');
jq_inarray_|var a_ = [ "8", "9", "10", 10 + "" ];\nvar is_ = $.inArray( 10, a_ );
jq_append_|$('<div/>').append(text).css({}).appendTo('#log');\n$('<option/>').attr('value',optionValue).text(optionName).appendTo('#colors');\n// jq_build_\n
jq_checkbox_|$( 'input:checkbox(:not(:disabled))' ).prop( 'checked', 'checked' );
lastIndexOf_|-1 !== window.location.pathname.lastIndexOf('/lampa_Orders/');
unique_|jq_unique_
jq_ajax_setup_|// intercetta gli eventi jquery ajax per logging\n$(document).ajaxComplete(function() {\n    console.log( "Triggered ajaxComplete handler." );\n});\n$(document).ajaxError(function() {\n    console.log( "Triggered ajaxError handler." );\n});\n$(document).ajaxSend(function() {\n    console.log( "Triggered ajaxSend handler." );\n});\n$(document).ajaxSuccess(function() {\n    console.log( "Triggered ajaxSuccess handler." );\n});
proxy_|jq_proxy_
replace_|s.replace("old","new");
jq_insert_|$( "h2" ).insertAfter( $( ".container" ) );
apply_|fun.apply(this_obj, array_arguments );
jq_load_|// it and all sub-elements have been completely loaded\n$('#book').load(function() {\n\n});
jq_key_press_|<input type="text"><span id="test_out">0</span> \n<script type="text/javascript">\nvar i = 0;\n$(function(){\n    $("input").keypress(function(){\n        $("#test_out").text(i += 1);\n    });\n});\n</script>\n
object_|var T = {\n    name: "a", \n    say: function() {\n        alert(this.a); \n    }\n};
while_|while( true ){\|}
template_|_template_
jq_fade_|if (el.is(':visible')) {\nel.fadeOut('slow');\n} else {\nel.fadeIn('slow');\n}
var_|console.log(\|);
url_decode_|var v="JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B";// "JavaScript_ÑˆÐµÐ»Ð»Ñ‹"\nvar v = decodeURIComponent(v);
reg_test_|var re_email = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-]{2,})+\.)+([a-zA-Z0-9]{2,})+$/;\n if ( _.isEmpty(str) || !re_email.test(str)  ) { } else { }
jq_grep_|var a_res_months = $.grep(a_months, function(v, i) {\n    return ( v.indexOf('J') == 0 );\n});\n
jq_by_name_|var email = $("input[name='email']").val();
jq_select_|// lavorare con una select\n// al change di un selct variare le options di una select dipendente\n$('#cod_linea').change(function(){\n           var f = $('#form_item_search');\n           var select = $(this);\n           var val = select.find('option:selected').val()\n           console.log(val);\n           $.ajax({\n               url: '<?=$url_ajax_options?>',\n               type: 'POST',\n               dataType: 'json',\n               data: f.serialize(),\n               success: function( resp_o ) {\n                   console.log(resp_o);\n                   var select_col = $('#cod_collection');\n                   // select_col.empty(); // remove old options\n                   $(select_col).find('option:gt(0)').remove(); // remove all options, but not the first\n\n                   $.each(resp_o , function(i, rec) {\n                           //console.log( rec );\n                           //console.log( rec['ADESCR'] );                           \n                           var html_value =  rec['ANUCOL'];\n                           var html_label =  rec['AAACOL'];\n                           select_col.append($("<option></option>").attr("value", html_value).text(html_label));\n                   });\n               },\n               error: function( req, status, err ) {\n                   console.log( 'something went wrong', status, err );\n               }\n    });\n});\n
jq_deferred_|jq_promise_
settimeout_|var timer = window.setTimeout(function(params){\n    console.log(params);\n}, 500, params);\nwindow.clearTimeout(timer);
interval_|var intervalID = window.setInterval(function(){}, 500); \nclearInterval(intervalID);
jq_scroll_|// todo!
js_log_|console.log();
jq_hasnode_|if( $('#selector').length > 0 ) {}
bind_|fun.bind(this_obj , arg1, arg2 ... );
js_include_|function include(js_url){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = js_url;\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x);\n}
byid_|var el = document.getElementById('id');
reduce_|var _a = a.reduce(function(carry, v) {\n    carry = carry + v;\n    return carry;\n}, (var initial=0) );
_count_|_size_
is_array_|$.isArray(\|)
jq_merge_|var a = $.merge( [1,2], [3,4] );
jq_empty_|// rm all child nodes\n$(selector).empty();
jq_require_|// Load a JavaScript file from the server using a GET HTTP request, then execute it \nvar r:JQueryXHR = $.getScript(url: string, function(script: string, textStatus: string, jqXHR: JQueryXHR){ \n\n});
is_function_|jq_is_function_
jq_ajax_post_|var jqxhr = $.post("ajax/test.html", {k:v}, function( data ) {\n  \tconsole.log( data );   \n}, 'json') \n  .done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
jq_map_|var a = $.map( [2,3,4], function(n){\n   return n*2;\n});//[4, 6, 8]
jq_click_|$('form input:checkbox').live('click', function(e){\ne.preventDefault();\n        \|});
typeof_|isset_
jq_isnode_|if( $('#selector').length > 0 ) {}
console_|console.log(\|);
reg_replace_|var str = str_result.replace(new RegExp('[a-z]', 'g'), '_');
function_|function(){\n\|}
throw_|throw new Error(msg);
stop_|e.stopPropagation();//bubbling\ne.preventDefault();
jq_filter_f_|$('li').filter(function(index) {\n  return $('strong', this).length == 1;\n}).css('background-color', 'red');
floor_|var n = Math.floor( 45.95 ); //  45
regexp_|var re = /\\w+/;\nvar re_m = regex.exec(text);\nconsole.log(re_m[1]); \n// str_match_ str_replace_
module_|module = function() {\n  // ... module privates and aliases\n\n  // public\n  return {\n    // ... module constants\n    init: function() {\n      return this;\n    },\n\n  };\n}().init();
jq_selector_|jq_selector_list_
jq_ajax_get_|var jqxhr = $.get( '/data/people.html', function( html ){\n  $( '#target' ).html( html );\n}).done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
count_|[].length
jq_ajax_json_|var jqxhr = $.getJSON("/controller/action", { k: v },\n   function(json){\n     console.log("JSON Data: " + json.name);\n}).fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n});
map_|var _a = a.map(function(v,k){\n    v.name = '"'+v.name+'"';\n    return v;\n});
jq_rm_|jq_remove_
jq_dom_node_|var dom_node = $( "li" ).get( 0 );\nconsole.log( dom_node+' '+$.type(dom_node) );
jq_animate_|$( this ).animate({\n    left: '+=50', // increase by 50\n    opacity: 0.25,\n    fontSize: '12px' //camelcase when prop name like "font-size"\n  },  300,  function() {\n    // executes when the animation is done\n  }\n);\n.stop(); // will stop currently running animations \n.delay(milliseconds); // will pause before the execution of the next animation method
localstorage_|if(typeof localStorage !== "undefined") {\n    // update key\n    var = key = 'clickcount';\n    if ( typeof localStorage[key] !== "undefined" ) {\n        localStorage[key] = localStorage[key] + 1;\n    } else {\n        localStorage[key] = 1;\n    }\n    // localStorage[key]\n}\n
_each_|_.each(hash, function(v, k, list){ });
except_|throw "errormsg\|";
timeout_|setTimeout(function(){ alert("Hello"); }, 300);
jq_selector_list_|/*\n    All                         *   \n                                :animated \n    Attribute Contains Prefix   [name|=  value  ]\n    Attribute Contains          [name*=  value  ]\n    Attribute Contains Word     [name~=  value  ]\n    Attribute Ends With         [name$=  value  ]\n    Attribute Equals            [name=  value  ]\n    Attribute Not Equal         [name!=  value  ]\n    Attribute Starts With       [name^=  value  ]\n                                :button\n                                :checkbox \n                                :checked \n    Child                       parent > child   \n    Class                       .class   \n                                :contains   \n                                :disabled \n                                :empty \n                                :enabled \n                                :eq   \n                                :even \n                                :file \n                                :first-child \n                                :first-of-type \n                                :first \n                                :focus \n                                :gt   \n    Has Attribute               [name]\n                                :has   \n                                :header \n                                :hidden \n    ID                          #id   \n                                :image \n                                :input \n                                :lang   \n                                :last-child \n                                :last-of-type \n                                :last \n                                :lt   \n    Multiple Attribute          [name=value][name2=value2â€³]\n    Multiple                    selector1, 2, N   \n    Next Adjacent               prev + next   \n    Next Siblings               prev ~ siblings   \n                                :not   \n                                :nth-child   \n                                :nth-last-child   \n                                :nth-last-of-type   \n                                :nth-of-type   \n                                :odd \n                                :only-child \n                                :only-of-type \n                                :parent \n                                :password \n                                :radio \n                                :reset \n                                :root \n                                :selected \n                                :submit \n                                :target \n                                :text \n                                :visible \n*/\n
sort_|var a_ = [1, 10, 2, 21]; \na_.sort(); // [1, 10, 2, 21]
json_decode_|var o_ = $.parseJSON(json_str);
json_parse_|JSON.parse(text);
url_encode_|var s = encodeURIComponent(v);
class_|// funzione:\nvar Greeter = (function () {\n    // constructor\n    function Greeter(message) {\n        // public\n        this.greeting = message || 'default';\n        // privileged\n        this.publicMethod = function() {\n            alert(privateName + " get from public method!"); \n        }    \t\n    }\n    // public methods\n    Greeter.prototype.greet = function () {\n        return "Hello, " + this.greeting;\n    };\n    // private\n    var privateVar = message || "default"; \n    var privateMethod = function() {\n        return privateVar; \n    }\n    \n    return Greeter;\n})();\n// instance\n// var o = new Greeter("txt");\n
jq_slide_|if (el.height() > 0) {\nel.animate({ height : 0 });\n} else {\nel.animate({ height : '100%' });\n}
jq_is_function_|if ( $.isFunction( settings.onShow ) ) {\nsettings.onShow.call(this);\n}\n
jq_make_array_|// Returns a NodeList\nvar elems = document.getElementsByTagName( "div" );\n// Convert the NodeList to an Array\nvar arr = jQuery.makeArray( elems );\n// Use an Array method on list of dom elements\narr.reverse();\n$( arr ).appendTo( document.body );
jq_proxy_|// Execute you.test() in the context of the `you` object\n// no matter where it is called\n// i.e. the `this` keyword will refer to `you`\nvar youClick = $.proxy( you.func_name, you );\n// this === "person"\n$(selector).on("click", youClick );
unset_|delete obj['index'];
[uscript]
[gnuplot]
[xq]
