[global]
twb_table_|<div class="table-responsive">\n  <table class="table table-striped  table-bordered table-hover table-condensed">\n    ...\n  </table>\n</div>
twb_popover_|<span  \n  data-toggle="popover" \n  title="Popover title" \n  onclick="$(this).popover({html:true});"  \n  data-content="And here`s some amazing content.</br> <a href=#>It`s very engaging.</a> </br> Right? " \n> %s </span>
input_file_|<input type="file" accept=".someext,image/*">
li_|<li>\|</li>
include_js_|js_
<!|html_comment_
javascript_|js_
twb_btn_dropdowns_|<!-- v2.2.2 -->\n<div class="input-append">\n  <input class="span2" id="appendedDropdownButton" type="text">\n  <div class="btn-group">\n    <button class="btn dropdown-toggle" data-toggle="dropdown">\n      Action\n      <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n      ...\n    </ul>\n  </div>\n</div>
table_|\|<table id="" border="0" cellpadding="0" cellspacing="0" class="table table-condensed">\n    <caption>Caption</caption>\n    <thead>\n        <tr>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n            <th> content </th>\n        </tr>\n    </thead>    \n    <tbody>\n        <tr>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n            <td> content </td>\n        </tr>\n    </tbody>\n</table>
img_|<img src="/img/\|" border="0" alt="" onerror="this.src='/img/NA.png'"/>
h2_|<h2>\|</h2>
twb_button_|<!--\nbtn-large   btn-small   btn-mini\n\nbtn-primary  \nbtn-info   \t\nbtn-success \nbtn-warning\t \nbtn-danger\t \nbtn-inverse\t \nbtn-link\t\n\nbtn-block   disabled \n-->\n<button type="button" class="btn btn-primary btn-small">txt</button>
select_|<select name="">\n  <option value="">Value 1</option> \n</select>
nb_|&nbsp;
html_comment_|htmlcomment_
hc_|html_comment_
for_|for($i=0;$i<count($a);$i++){\|}
center_|text-align:center; vertical-align: middle;
qunit_equal_|equal( func(), true, "testname" );
sql_select_|SELECT \nFROM       \nWHERE\nORDER BY
//--|//------------------------------------------------------------------------------
jq_onclick_|$("a").click(function(ev) {\n    ev.preventDefault();    \n});
margin_|margin:4px auto\|;
twb_icon_|<i class="icon-print"></i>
checkbox_|<input type="checkbox" name="" value="" />
h1_|<h1>\|</h1>
fontfamily_|font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
else_|else {\n}
ul_|<ul>\|</ul>
len_|length
fieldset_|<fieldset>\n    <legend>Personalia:</legend>\n\n</fieldset>
radio_|<label for="male">Male</label>\n<input type="radio" name="sex" id="male" value="male">
css_font_|<link href="https://fonts.googleapis.com/css?family=Lato:100" rel="stylesheet" type="text/css">\n<style>\nbody {\n  font-weight: 100;\n  font-family: 'Lato';\n}\n</style>
input_numeric_|<input type="number" name="cod_customer" value="" placeholder="" \n  pattern="[0-9.]+" min="0" max="999" step="1"\n  onkeypress='return /[0-9\\.]/.test(String.fromCharCode(event.charCode || event.keyCode))'>
p_|<p>\|</p>
tr_|<tr>\n\t<td>\|\t&nbsp;</td>\n</tr>
twb_col_|<div class="col-lg-6 col-md-6 col-xs-12"> aaa </div>
script_|<script src="\|"></script>
twb_alert_|<div class="alert alert-success" role="alert">\n\n</div>
elseif_| elseif(\|) {\n}\n
css_input_type_text_|input[type="text"]
anchor_|<a href="\|"></a>
submit_|<input type="submit" value="Salva" id="">
twb_form_actions_|<!-- v2.2.2 -->\n<div class="form-actions">\n  <button type="submit" class="btn btn-primary">Save changes</button>\n  <button type="button" class="btn">Cancel</button>\n</div>
html5_progressbar_|<progress max="100" value="80"></progress>\n<style >\n    progress[value] {\n      -webkit-appearance: none;\n         -moz-appearance: none;\n              appearance: none;\n      border: none;\n\n      width: 250px;\n      height: 20px;\n\n      background-color: blue; color: blue;\n    }\n</style>
pre_|<pre>\|</pre>
i_|<i>\|</i>
jqload_|$(function(){\|});
textarea_|<textarea rows="5" cols="80">\|</textarea>
h6_|<h6>\|</h6>
legend_|<fieldset>\n    <legend>description:</legend>\n \n</fieldset>
js_|<script type="text/javascript">\|</script>
small_|<small></small>
patterns_|// Creazionali\n//     pattern_abstract_factory_ //espone al client una interfaccia che genera istanze, evita la necessità di specificare i nomi delle classi concrete\n//     pattern_builder_  //crea un oggetto, occupandosi di ricostruire uno stato complesso e valido e/o dipendenze di istanze numerose\n//     pattern_factory_  //crea istanze configurate appropriatamente per il contesto\n//     pattern_prototype_//clona oggetto esistente anzichè crearlo da vuoto\n//     pattern_singleton_//permette una sola istanza di oggetto\n// Strutturali\n//     pattern_adapter_  //sistemi differenti permettono le stesse operazioni(interfaccia)\n//     pattern_bridge_   //wrappa sistemi differenti esponendo una interfaccia nota\n//     pattern_composite_ //permette operazioni su un gruppo di oggetti come se si trattasse di un singolo ogggetto(espongono interfaccia condivisa)\n//     pattern_decorator_ //wrappa e aumenta le funzionalità di funzione o metodo o oggetto\n//     pattern_facade_    //espone una api semplificata su metodi di base altrimenti complessi/verbosi\n//     pattern_flyweight_ //risparmio memoria mettendo dati comuni (intrinsicState) a un gruppo di oggetti, in un singolo oggetto separato\n//     pattern_proxy_  // lazy loading, permette di memorizzare e riutilizzare il risultato di computazioni o IO\n// Comportamentali\n//     pattern_chain_ pattern_chain_of_responsibility_ //si costruisce una catena di oggetti che gestiscono una richiesta, si passa la richiesta alla catena, la catena si interrompe se un oggetto consuma la richeiesta\n//     pattern_command_  //isolare la porzione di codice che effettua un'azione complessa(Command) dalla classe che ne richiede l'esecuzione\n//     pattern_interpreter_ //\n//     pattern_iterator_ //permette di usare un oggetto come una lista\n//     pattern_mediator_ //le entità coinvolte una iterazione di oggetti, devono fare riferimento solamente al mediatore\n//     pattern_memento_ //l'operazione di estrarre lo stato interno di un oggetto, per poterlo poi ripristinare in un secondo momento\n//     pattern_observer_ // SplObserver_ un Subject notifica gli Observer se il suo stato cambia\n//     pattern_state_ // separa comportamento (a run-time) in funzione dello stato in cui si trova l'oggetto che implementa lo stato e il cambiamento di stato\n//     pattern_strategy_ //isola in un oggetto(intercambiabile) un algoritmo\n//     pattern_template_method_ //definire la struttura di un algoritmo lasciando alle sottoclassi il compito di implementarne alcuni passi\n//     pattern_visitor_ //delega un oggetto che processerà una lista di oggetti
lorem_|Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vel libero risus. Sed pellentesque accumsan ex non feugiat. Nulla pharetra in odio non hendrerit.
mailto_|mailto:?subject=some%20subject&body=some%20very%20long%20body.
foreach_|foreach($a as $k=>$v){\|}
twb_form_horizontal_|<!-- v2.2.2 -->\n<form class="form-horizontal">\n  <div class="control-group">\n    <label class="control-label" for="inputEmail">Email</label>\n    <div class="controls">\n      <input type="text" id="inputEmail" placeholder="Email">\n    </div>\n  </div>\n  <div class="control-group">\n    <label class="control-label" for="inputPassword">Password</label>\n    <div class="controls">\n      <input type="password" id="inputPassword" placeholder="Password">\n    </div>\n  </div>\n  <div class="control-group">\n    <div class="controls">\n      <label class="checkbox">\n        <input type="checkbox"> Remember me\n      </label>\n      <button type="submit" class="btn">Sign in</button>\n    </div>\n  </div>\n</form>
input_|<input type="text" name="\|" value="" maxlength="255" tabindex="0" pattern="[0-9.]+" />\n// HTML5: tel search url email datetime date month week time datetime-local number range color
phpo_|<?=\|?>
htmlcomment_|<!--\nbegin\n-->\|<!--\nend\n-->
b_|<b>\|</b>
sql_insert_|INSERT INTO T2 (EMPID, EMPNAME, EMPADDR)\n     VALUES (DEFAULT, :hv_name, :hv_addr)
td_|<td>\|&nbsp;</td>
autocomplete_|html5_autocomplete_
h5_|<h5>\|</h5>
input_hidden_|<input type="hidden" name="" value="">
caret_|&#9660;
html5_autocomplete_|\n<input id="countryInput"\n       type="text"\n       data-bind="value: selectedCountry"\n       list="countryList" />\n\n<datalist id="countryList" data-bind="foreach: countries">\n    <option data-bind="value: country"></option>\n</datalist>
css_attribute_like_|img[attribute~="value"] { }
if_|if(!empty(\|)){}
div_|<div>\|</div>
dief_|die(__FUNCTION__."\|");
option_|<option value="" selected></option>
input_num_|input_numeric_
sql_truncate_|truncate table $table_name
twb_tabs_|<ul class="nav nav-tabs">\n  <li class="active">\n    <a href="#">Home</a>\n  </li>\n  <li><a href="#">...</a></li>\n  <li><a href="#">...</a></li>\n</ul>
twb_form_leftaligned_|<form class="form-inline">\n  <div class="form-group">\n    <label for="exampleInputName2">Name</label>\n    <input type="text" class="form-control" id="exampleInputName2" placeholder="Jane Doe">\n  </div>\n  <div class="form-group">\n    <label for="exampleInputEmail2">Email</label>\n    <input type="email" class="form-control" id="exampleInputEmail2" placeholder="jane.doe@example.com">\n  </div>\n  <button type="submit" class="btn btn-default">Send invitation</button>\n</form>\n\n<!-- twb v2.2.2 -->\n<form class="form-inline">\n  <div class="form-group">\n    <label for="exampleInputName2">Name</label>\n    <input type="text" class="form-control" id="exampleInputName2" placeholder="Jane Doe">\n  </div>\n  <div class="form-group">\n    <label for="exampleInputEmail2">Email</label>\n    <input type="email" class="form-control" id="exampleInputEmail2" placeholder="jane.doe@example.com">\n  </div>\n  <button type="submit" class="btn btn-default">Send invitation</button>\n</form>\n\n
background_|background:#ffffff url('img_tree.png') no-repeat right top;
border_|border: 1px solid #\|;
hr_|<hr style="" />
comment_|html_comment_
css_mp0_|margin:0; padding:0;
bs_|&nbsp;
twb_panel_|<div class="panel panel-primary _panel-success _panel-info _panel-warning _panel-danger ">\n  <div class="panel-heading">\n    <h3 class="panel-title">\n        Panel title\n    </h3>\n  </div>\n  <div class="panel-body">\n    Panel content\n  </div>\n</div>\n\n \n
h4_|<h4>\|</h4>
twb_grid_|<div class="container-fluid">\n  twb_row_\n</div>
css_|<link rel="stylesheet" href="\|">
solid_|Single responsibility: class should have one, and only one, function.\nOpen–closed: should be possible to extend the behavior of a class without modifying it.\nLiskov substitution: subclasses should be substitutable for their superclasses\nInterface segregation: many small, client-specific interfaces are better than one general-purpose interface.\nDependency inversion: depends on abstractions not concretions
jq_|<script src="http://code.jquery.com/jquery-latest.min.js" ></script>
window_open_|var w_opt = "top=10, left=10, width=250, height=200, status=no, menubar=no, toolbar=no scrollbars=no";\nvar url = '';\nvar w_ = window.open(url, '', w_opt);\n// w_.document.write("<html>\\n");\n// w_.document.write("<div align=center> Popup </div>\\n");\n// w_.document.write("</html>");
span_|<span class="">\|</span>
pattern_chain_of_responsibility_|pattern_chain_
sql_update_|UPDATE EMPLOYEE\n     SET JOB=NULL, SALARY=0, BONUS=0, COMM=0\n     WHERE WORKDEPT = 'E21' AND JOB <> 'MANAGER'
html_progress_|<progress id="" max="100" value="90"></progress>
twb_form_inline_|<!-- v2.2.2 -->\n<form class="form-inline">\n  <input type="text" class="input-small" placeholder="Email">\n  <input type="password" class="input-small" placeholder="Password">\n  <label class="checkbox">\n    <input type="checkbox"> Remember me\n  </label>\n  <button type="submit" class="btn">Sign in</button>\n</form>
getById_|document.getElementById('username').value
new_|$1 $2 = new $1(\|);
pattern_|patterns_
form_|<form method="post" action="<?=$_SERVER['PHP_SELF']?>" enctype="multipart/form-data" id="form_1">\|\t<input type="submit" value="Salva" id="">\n        <input type="button" value="Reset" id="form_reset"/>\n</form>\n<script>\n$(function(){\n    $('#form_1').submit(function(event) {\n      alert('valid form');\n      event.preventDefault();\n      return true;\n    });\n    $('#form_1 #form_reset').click(function(){\n        var f = $(this).parents('form');\n        f.find('input:text, input:password, input:file, select, textarea').val('');\n        f.find('input:radio, input:checkbox').removeAttr('checked').removeAttr('selected');\n    });\n});\n</script>
br_|<br />
label_|<label for="male">Male</label>\n  <input type="radio" name="sex" id="male" />\n  <br />
h3_|<h3>\|</h3>
icon_|<i class="fa fa-fw">\|</i>
style_|<style type="text/css">\|</style>
th_|<th>\|</th>
anchorjs_|<a href="javascript:void(0);" onclick="myfunc();return false"></a>
html_|<!DOCTYPE html>\n<head></head>\n<body>\n\n\n\|</body>\n</html>
php_|<?php\n
input_number_|inut_numeric_
twb_row_|    <div class="container-fluid">\n      <div class="row-fluid">\n\t<div class="span3">\n        </div>\n      </div>\n    </div>
include_css_|css_ style_
[c++]
[sqr]
[nsis2]
[markdown]
pre_|`monospace`
img_|image_
i_|*italic*
image_|![screenshot](img/mappa_applicativa.png)
h6_|###### Text {#el_id .pbb }
b_|**bold**
link_|[link](http://www.lampa.it)
code_|<code>\n</code>
anchor_|link_
[asp]
[latex]
[factor]
[cfscript]
[batch]
[assembly-mcs51]
[vrml2]
[groovy]
[relax-ng-compact]
[icon]
[velocity]
[patch]
[beanshell]
[pl1]
[fortran90]
[pyrex]
[inno-setup]
[inform]
[netrexx]
[eiffel]
[fortran]
[pl-sql9]
[chill]
[json]
[macroscheduler]
[smalltalk]
[mustache-template]
[idl]
[haxe]
[pvwave]
[smarty]
[ada95]
[pl-sql]
[vala]
[apacheconf]
[htaccess]
[clojure]
[io]
[pure]
[sbt]
[properties]
[metapost]
[rhtml]
[powerdynamo]
[vhdl]
[logs]
[maple]
[lotos]
[PowerCenter Parameter File]
[django]
[ada]
[php]
tempname_|$file_path = tempnam(sys_get_temp_dir(), $prefix='X');
substr_|substr($s\|,0,2);\n\n// str = grp.0001-0002-0004\n$strip_str = substr($str, $i_pos=1+strpos($str, ".") );\n// rturn 0001-0002-0004\n\n
str_pos_|strpos($str, $substr\| ) !== false
array_walk_|array_walk($data, function(&$v, $k, $param) { \n    $v = $k . $param . $v; \n}, 'myparam');
validate_|filter_var_
staticp_|//\npublic static function \|() {\t\t\n    return ; \n}
assert_s_|assert_char_
xml_|$dom = new \\DOMDocument();\n$dom->preserveWhiteSpace = false;\n$dom->load($this->xml_file);\n$xpath = new \\DOMXpath($dom);\n$node_list = $xpath->query('//NodeType[@attr=val]');
trim_|$str=trim($str, $charlist='.,');
mkdir_|true === mkdir('/path', 0755);
select_a_|$select_val  = 'M1';\n$select_name = 'i_cdlis';\n$a_options = ['M1' => 'M1', 'S0' => 'S0'];\n$_build_select = function($a_options, $select_val, $select_name ){\n    $a_options = array_map(function($k, $v) use($select_val) {\n        return sprintf('<option value="%s" %s>%s</option>', $v, ($select_val == $v ? 'selected':''), $k);\n    } , array_keys($a_options), array_values($a_options) );\n    $html_options = implode("\\n", $a_options );\n    $html_select = sprintf('<select name="%s" style="width:50px;">%s</select>', $select_name, $html_options);\n    return $html_select;\n};\necho $_build_select($a_options, $select_val, $select_name );
filter_html_|$html = filter_var($html, FILTER_SANITIZE_SPECIAL_CHARS);//escape, not removes, bad html
pluck_|__::pluck($a, $k);
is_str_|ctype_graph($s) || ctype_space($s)
__MAIN__|// if colled directly, run the tests:\nif (basename($argv[0]) == basename(__FILE__)) {\n    include substr(__FILE__, 0, -4) . 'Test.php';\n}
round_|round($f, 2);
filterstr_|$v = preg_replace('/[^0-9A-Za-z_ ]/', '', substr(trim($v), 0, 6) );
reset_|<input type="reset" />
sort_|ksort($a);//  for keys!\nasort($a, SORT_STRING);// &$a;  sort values! returns bool\n// uasort  Sort an array with a user-defined comparison function and maintain index association\nuasort( &$a, function($a, $b) {\n    if ($a == $b) {\n        return 0;\n    }\n    return ($a < $b) ? -1 : 1;\n});
table_a_|\n// genera tabella\n$a_rs = __RS__;\n$html_table = '';\nif( !empty($a_rs) ) {\n    // data mappings\n    $data = array_map(function($a_row) {\n        return [\n            'Nome Campo' => $a_row['field'],\n        ];\n    }, $a_rs);\n    $first_index = current(array_keys($data));\n    $html_table = sprintf('<table class="table table-condensed table-bordered table-striped"> %s %s </table>',\n        // genera head\n        $s_tr_th = sprintf('<tr>%s</tr>',\n            implode('',\n                array_map(function($v) {\n                    return sprintf("<th>%s</th>", $v);\n            } , $a_cols=array_keys($data[$first_index]) ) )\n        ),\n\n        // genera tr\n        $s_tr_mov = implode('',\n            $a_tr = array_map(function($a_row) {\n                return sprintf('<tr>%s</tr>', \n                    $s_td = implode('', array_map(function($v) {\n                            $contains_euro = strpos($v, '&euro;' ) !== false;\n                            $css = is_numeric($v) || $contains_euro ? 'numeric' : '';\n                            return sprintf('<td class="%s">%s</td>', $css, $v );                        \n                    }, $a_row) ) \n                );\n            }, $data)\n        )\n    );\n} else {\n    $html_table = $V->alert('nessun record trovato per i parametri selezionati');\n}\n
cli_|php_cli_
htmlentities_|//ENT_COMPAT     Converte gli apici doppi e lascia inalterati gli apici singoli.\n//ENT_QUOTES     Converte sia gli apici doppi sia gli apici singoli.\n//ENT_NOQUOTES   Lascia entrambi i tipi di apici inalterati.\n$html = htmlentities($v, ENT_QUOTES, 'UTF-8');
date_diff_|date_add_
chart_pie_|include ("../../jpgraph/jpgraph.php");\ninclude ("../../jpgraph/jpgraph_pie.php");\n$data = [12, 15, 23, 18, 5];\n// Create the Pie Graph.\n$piechart = new PieGraph(300,350);\n// Set a title for the plot\n$piechart->title->Set("Sample Pie Chart");\n$piechart->title->SetFont(FF_VERDANA,FS_BOLD,12);\n$piechart->title->SetColor("darkblue");\n$piechart->legend->Pos(0.1,0.2);\n// Create pie plot\n$pPlot = new PiePlot($data);\n$pPlot->SetCenter(0.5,0.55);\n$pPlot->SetSize(0.3);\n// Setup the labels\n$pPlot->SetLabelType(PIE_VALUE_PER);\n$pPlot->value->Show();\n$pPlot->value->SetFont(FF_ARIAL,FS_NORMAL,9);\n$pPlot->value->SetFormat('%2.1f%%');\n// Add and stroke\n$piechart->Add($pPlot);
preg_quote_|$reg = preg_quote($reg, '/');
dba_|$id = dba_open("/tmp/test.db", "n", "db2");\nif (!$id) {\n    die( "dba_open failed\\n" );\n}\ndba_replace("key", "This is an example!", $id);\nif (dba_exists("key", $id)) {\n    echo dba_fetch("key", $id);\n    dba_delete("key", $id);\n}\n// read all the keys to read all the db\n$key = dba_firstkey($id);\nwhile ($key != false) {\n    $a_keys[] = $key;\n    $key = dba_nextkey($id);\n}\ndba_close($id);
memory_get_peak_usage_|round(memory_get_peak_usage() / (1024 * 1024), 2) . 'MB',
except_|$msg = sprintf('Errore %s', );\nthrow new Exception($msg);
js_comment_|/* \| */
str_repeat_|str_repeat('tmpl',5)
bc_|bcscale(4);// setta il default scale, va settato prima delle chiamate\n$a = '1.234';\n$b = '5';\necho bcadd($a, $b);     // 6\necho bcadd($a, $b, 4);  // 6.2340\necho bcsub($a, $b);     // -3\necho bcsub($a, $b, 4);  // -3.7660\necho bcmul('1.34747474747', '35', 3); // 47.161\necho bcmul('2', '4'); // 8\necho bcdiv('105', '6.55957', 3);  // 16.007\n// compare ==\n// Returns 0 if the two operands are equal, 1 if the left_operand is larger than the right_operand, -1 otherwise.\necho bccomp('1', '2') . "\\n";   // -1\necho bccomp('1.00001', '1', 3); // 0, EQUAL\necho bccomp('1.00001', '1', 5); // 1, first operand is bigger\n\n// bcmod bcpow bcsqrt\n\n\n\n
zf_forward_|// $this->_helper->flashMessenger->addMessage('confirm msg');\nreturn $this->_forward($action="index");
global_|$GLOBALS[''] = '';
zf_alert_|$this->alert($msg, 'error');
destruct_|function __destruct() {\n  // cleanup your DB, disk or RAM cache\n}
hidden_|<input name="" value="" type="hidden">
switch_|switch($\|){\n  case 0:\n  break;\n  default:\n  break;\n}
date_past_|$time_ago = strtotime('-3 months');
contruct_|function __construct() {\n    parent::__construct();\n    \|\n}
zf_route_|$router->addRoute('route_name',\n    new Zend_Controller_Router_Route(\n        'user/:username',\n        [\n            'controller' => 'user',\n            'action'     => 'info',\n        ]\n    )\n);
trace_|echo '<pre>',var_dump( debug_backtrace() ),'</pre>'; // DEBUG\ndie(__FUNCTION__.__FILE__);
publics_|staticp_
var_dump_|var_
qry_|$rs = qry(\|$sql, __LINE__, __FILE__);
methods_|echo '<pre>';\necho implode( "\\n", get_class_methods(\|));\ndie(__FILE__.' '.__FUNCTION__);
__destruct_|function __destruct() {\n\|\n}
button_|<button onclick="myFunction()">Click me</button>
file_|file_put_contents($path\|,$str);
return_|return\| true;
array_slice_|array_slice($a, $pos, $len);
array_pad_|$a = array_pad($a_input, 20, '0' );
json_decode_|$a = json_decode($json_str, $use_assoc=true);
zf_redirect_|$url = $this->view->url(['controller'=>'items','action'=>''], $r_name='default');\nreturn $this->_redirect($url);\n
die_|die(__FUNCTION__.\|);
chmod_|chmod(/somedir/somefile', 0755);// use octal val
array_key_exists_|array_key_exists($key, $a\|)
test_|function ok($res, $expected, $label ) {\n    $GLOBALS['test_count']++;\n    if( $res === $expected ) {\n        echo colored( "ok $label \\n", 'green' );\n    } elseif( $res == $expected ) {\n        echo printc( "ok (but type differ) $label \\n", 'green' );\n    } else {\n        echo colored( sprintf("ERROR(%s)    GOT<>EXP  %s<>%s \\n",\n            $label, json_encode($res), json_encode($expected)\n        ) , 'red' );\n    }\n}\nfunction is($res, $label ) {\n    return ok($res, $expected=true, $label );\n}\nfunction colored($str, $foreground_color = 'green' ) {\n    static $a_fg = [ 'red' => '0;31', 'green' => '0;32' ];\n    return sprintf("\\e[%sm", $a_fg[$foreground_color] ) . $str . "\\033[0m";\n}
map_|array_map_
exception_|spl_
ksort_|ksort($a);//in-place sort!
protected_|protected function \|(){}
const_|const CONSTANT = 'str';
ini_get_|$v = ini_get('display_errors');
is_callable_|is_callable([$obj, 'method_name'], false);
str_pad_|str_pad($s, 5, '_', STR_PAD_LEFT);
zf_h_select_|zf_h_select_multi_
array_map_|$values = array_map(function($v) {\n    return '"'.$v.'"';\n}, $a);
apc_store_|cache_
array_filter_assoc_|$a_data = array_filter($a_data, function($v, $k) {\n    return $k == 'b' || $v == 4;\n}, ARRAY_FILTER_USE_BOTH);
zf_url_|$url_ = $this->url($par=['username' => 'aa'], $r_name='default');
instanceof_|if( !($var instanceof ParentClass) ){ }
set_exception_handler_|if( ENV::isPROD() ) {\n    \n    $prev_handler = set_exception_handler(['Bootstrap', '_ExcpLoggerMail']);\n    // es. err handler\n    function exp_hndl_test(Exception $e){  }\n}
zf_h_checkbox_|$this->formCheckbox('opt_in', 'yes', null, ['yes', 'no'] )
if_|if( empty(\|) ) {\n    // do init\n}
zip_|$zip = new \\ZipArchive();\n$file_path = sprintf("/zip/test_%s.zip", date('Ymd_His') );\nif ( $zip->open($file_path, \\ZipArchive::CREATE) !== true ) {\n    $msg = sprintf('Errore: impossibile aprire %s ', $zip_path );\n    throw new Exception($msg);\n}\n$zip->addFromString("testfile.txt" . time(), "#1 This is a test string added as testfilephp.txt.\\n");\n$zip->addFile($target_file_path, "/testfromfile.php");\n$zip->close();
execute_|  public function executeSpese(sfWebRequest $request)\n  {\n\treturn $this->renderText('da implementare');\n  }
coalesce_|$w = $x ?? $y ?? $z;
assert_|if( !is_numeric($n) ) {\n    throw new Exception("VARNAME deve essere in formato numerico, '$n' ricevuto");\n}
date_add_|$date_str = sprintf('2010-09-17');\n$date = new DateTime($date_str);\n$date_period_str = sptintf('P%sD', $i=1); // 'P1D': P1D=Period of 1 day(Y/M/W/D/H/S)\n$date->add(new DateInterval($date_period_str));  \n$str_date = $date->format('Y-m-d');
include_|require_
zf_h_e_|zf_h_escape_
PDO_|class DbAuto_Connection {\n    protected static $db = null;\n    protected static function getConnection() {\n        $registry = Zend_Registry::getInstance();\n        $C = $registry->config->dbauto;\n        try {\n            if (self::$db == null) {\n                self::$db = new PDO(\n                    sprintf('mysql:host=%s;dbname=%', $C->host, $C->dbname ),\n                    $C->username,\n                    $C->password\n                );\n                self::$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n            }\n        } catch (PDOException $e) {\n            echo "DB2 PDO error '".$e->getMessage()."'";\n        }\n    }\n    // permette di lanciare una query diretta sul db, ritorna array records\n    //   SQL: WHERE calories < :calories AND colour = :colour\n    //   $params = [':calories' => $calories, ':colour' => $colour ]\n    public static function query($sql, $params=[] ) {\n        $data = [];\n        self::getConnection();\n        if (self::$db) {\n            $stmt = self::$db->prepare($sql);\n            $res = $stmt->execute( $params );\n            if ($res) {\n                while ($oRow = $stmt->fetch(PDO::FETCH_ASSOC)) {\n                    $data[] = $oRow;\n                }\n            }\n            $stmt->closeCursor();\n        } else {\n            die(__FUNCTION__.' errore connessione mysql');\n        }\n        return $data;\n    }\n}
min_|$i_min = min([0,$x]);
zf_config_|Zend_Registry::get('config')->company->email->support;
Object_|stdClass
constants_|echo '<pre>',var_dump( get_defined_constants(true) ),'</pre>'; // DEBUG\ndie(__FILE__.''.__FUNCTION__);
file_size_|// in bytes, or FALSE\n$bytes = filesize($path);\nfunction human_filesize($bytes, $decimals = 2) {\n  $a_sz = [0=>'B',0=>'K',2=>'M',3=>'G',4=>'T',5=>'P'];\n  $factor = floor((strlen($bytes) - 1) / 3);//quale potenza di 1000\n  $n = $bytes / pow(1024, $factor);\n  return sprintf("%s %s", \n      round($n, $decimals),\n      $a_sz[$factor]\n  );\n}
array_pluck_|pluck_
array_|$\|=[];
filter_var_|filter_
s_|$s_ = '';
math_|bc_
require_|require_once __DIR__.'/\|';
file_get_a_|// ottiene contenuto del file in array di righe da processare in successione\n$a_file_lines = file($file_path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n$process_line = function($line){ return $line; };\nforeach ($a_file_lines as $i => $line) {\n     $a_file_lines[$i] = process_line($line);\n}\n$s_result = implode("\\n", $a_file_lines );\n\n
zf_env_|// 'DEVELOPMENT'|'PRODUCTION' == strtoupper(APPLICATION_ENV)\nBootstrap::isEnvProd() ||  Bootstrap::isEnvDev()
nbsp_|&nbsp;
out_|echo htmlspecialchars($s, ENT_QUOTES);
sql_replace_|REPLACE [LOW_PRIORITY | DELAYED] INTO $tbl_name SET col_name=$val
printf_|pf_
zf_mail_|$mail = new Zend_Mail();\n$mail->setFrom(Zend_Registry::get('config')->email->support);\n$mail->addTo($form->getValue('email'));\n$mail->setSubject("subject");\n// Retrieve the e-mail message text\ninclude "_email_template.phtml";\n$mail->setBodyText($email);\n$mail->send();
__get_|public function __call($name, $arguments) {\n    // Note: value of $name is case sensitive.\n    echo "Calling object method '$name' " . print_r( $arguments, 1). "\\n";\n}
filesize_|file_size_
sp_|sprintf_
filter_char_|filterstr_
var_export_|$str = var_export($data, true);
case_|case \|:\nbreak;
readfile_|$file_path = APP_PATH.'/web/images/image.jpg';\n$type = 'image/jpeg';\nheader('Content-Type:'.$type);\nheader('Content-Length: '.filesize($file_path) );\nreadfile($file_path);\nexit();\n
request_is_ajax_|$is_ajax_request = isset($_SERVER['HTTP_X_REQUESTED_WITH']);
foreach_|foreach($a_ as $k => $v) {\n\|}
assert_char_|if( !ctype_alnum($s) || 8 >= strlen($s) ) {\n    throw new Exception("VARNAME deve essere in formato stringa, '$s' ricevuto ");\n}
use_|use My\\Full\\Classname as Another;\n// this is the same as use My\\Full\\NSname as NSname\nuse My\\Full\\NSname;\n// importing a global class\nuse ArrayObject;
location_|header('Location: http://www.test.it/');\n// $logger->info('reason');\ndie('redirect');
<<<|$\| = <<<__END__\n__END__;
pthreads_|http://nl1.php.net/manual/en/class.thread.php
fork_|\t    $maxt=5;// thread nun\n            for ($x = 1; $x < $maxt; $x++) {\n                switch ($pid = pcntl_fork()) {\n                case -1:\n                    die('could not fork');\n                    break;\n                case 0:\n                    // run child\n                    $local_pid = posix_getpid();\n                    //echo $local_pid;\n                    io_detach();\n\n                    $cl_generator();\n                    echo "Child ".posix_getpid()." completed\\n";\n                    register_shutdown_function(function () {\n                            echo "Child ".posix_getpid()." SIGHUP \\n";\n                            posix_kill(posix_getpid(), SIGHUP);\n                    } );\n                    break;\n                default:\n                    // parent\n                    $local_pid = posix_getpid();\n                    echo "parent($local_pid) waiting child pid($pid): \\n";\n                    pcntl_waitpid($pid, $status);\n                    break;\n                }\n            }\n            // control all child processes gets completed\n            while (pcntl_waitpid(0, $status) != -1) {\n                $status = pcntl_wexitstatus($status);\n                echo "Child $status completed\\n";\n            }
filter_alpha_|filterstr_
zf_user_|$user = Zend_Auth::getInstance()->getIdentity();
jq_main_|$(function(){\n});
list_|list($a, $b) = ['a','b'];
class_|// funzione:\nclass \|{\n    public function __construct(){}\n    public function method(){}\n    public function __toString(){ return __CLASS__; }\n}
chart_bar_|include ("../../jpgraph/jpgraph.php");\ninclude ("../../jpgraph/jpgraph_bar.php");\ninclude ("../../jpgraph/jpgraph_line.php");\n// We need some data\n$datay=[31,44,49,40,24,47,12];\n// Set up the graph\n$graph = new Graph(600,300,"auto");\n$graph->img->SetMargin(60,30,30,40);\n$graph->SetScale("textlin");\n$graph->SetMarginColor("teal");\n$graph->SetShadow();\n// Create the bar pot\n$bplot = new BarPlot($datay);\n$bplot->SetWidth(0.6);\n// Set up color for gradient fill style\n$tcol=[100,100,255];\n$fcol=[255,100,100];\n$bplot->SetFillGradient($fcol,$tcol,GRAD_VERT);\n$bplot->SetFillColor("orange");\n$graph->Add($bplot);\n// Set up the title for the graph\n$graph->title->Set("Sample Bargraph");\n$graph->title->SetColor("yellow");\n$graph->title->SetFont(FF_VERDANA,FS_BOLD,12);\n// Set up color for axis and labels\n$graph->xaxis->SetColor("black","white");\n$graph->yaxis->SetColor("black","white");\n// Set up font for axis\n$graph->xaxis->SetFont(FF_VERDANA,FS_NORMAL,10);\n$graph->yaxis->SetFont(FF_VERDANA,FS_NORMAL,10);\n$graph->yaxis->title->Set("Value Range");\n$graph->yaxis->title->SetColor("white");\n$graph->yaxis->title->SetFont(FF_VERDANA,FS_NORMAL,10);\n// Set up X-axis title (color & font)\n$graph->xaxis->title->Set("item Count");\n$graph->xaxis->title->SetColor("white");\n$graph->xaxis->title->SetFont(FF_VERDANA,FS_NORMAL,10);\n// Finally send the graph to the browser\n$graph->Stroke();
private_|//\nprivate function \|(){ return true; }
str_reg_|if ( preg_match('/1999/', $s) ) {\n    // ok\n}
zf_render_view_|// Render 'foo' instead of current action script\n        $this->_helper->viewRenderer('index');
namespace_|namespace PrjName {\n    use Exception;\n}\nnamespace {\n// global code\n}
__reject_|$a_ = __::reject($a_=[1,2,3], function($n) {\n  return $n % 2 === 0; \n});\n
sleep_|sleep(10);// seconds
isset_|if( !isset(\|)){\n}
hash_sort_|// Sort the multidimensional array\nusort($a_list, function ($rec, $next_rec) {\n        $k = 'column_key';  \n\treturn $rec[$k] > $next_rec[$k];\n});\n     \n
in_array_|in_array( $str, $a_ )
strip_tags_|$txt = strip_tags($txt, $allowed='<p><a>');
while_|while($a=mysql_fetch_array($rs)){\|}
zf_get_view_|$view = Zend_Layout::getMvcInstance()->getView();
dirname_|dirname(__FILE__).'/lib.php'
zf_cache_|zf_cache_get_
__map_|__::map(['one'=>1], function($v, $k) {\n  return $v * 3;\n});
str_contains_|str_pos_
enum_|class Month extends SplEnum {\n    const __default = self::January;\n    \n    const January = 1;\n    const February = 2;\n    const March = 3;\n    const April = 4;\n    const May = 5;\n    const June = 6;\n    const July = 7;\n    const August = 8;\n    const September = 9;\n    const October = 10;\n    const November = 11;\n    const December = 12;\n}\n\necho new Month(Month::June) . PHP_EOL;\n\ntry {\n    new Month(13);\n} catch (UnexpectedValueException $uve) {\n    echo $uve->getMessage() . PHP_EOL;\n}
error_|set_error_handler_\nerror_reporting_\nset_exception_handler_
preg_replace_|$reg_char = '\\,\\;\\-\\+\\*\\/\\(\\)\\[\\]\\:\\.\\!\\?#= ';\n$str = preg_replace('/[^a-zA-Z0-9_]/', '', $str);
explode_|explode( ',', $s\|);
zf_route_regex_|$router->addRoute('fornitori_genlabel', new Zend_Controller_Router_Route_Regex(\n        'fornitori/genlabel/Etichette_federe_(\\d+)_(\\d+)\\.pdf',\n        [\n            'controller' => 'Fornitori',\n            'action' => 'genlabel'\n        ],\n        $mappings=[\n            1 => 'ord_num'  ,\n            2 => 'ord_date' ,\n        ],\n        'fornitori/genlabel/Etichette_federe_%d_%d.pdf'\n));
construct_|public function __construct(){\n   parent::__construct();\n\|}
for_|for( $i=0; $c=count($a); $i < $c; $i++) {\|}
mktime_|$timestamp = mktime($hour=date("H"), $minute=date("i"), $second=date("s"), $month=date("n"), $day=date("j"), $year=date("Y") );
pf_|sprintf_
zf_post_|$this->getRequest()->getPost('name\|');
array_fill_|array_fill($i=0, $n=10 , $v='');
define_|define("\|", "", false);
ol_|<ol class="">\n\|</ol>
exec_|$s_result = `ls -la`;\n// $s_result = trim(shell_exec(sprintf('/usr/bin/ls -la 2>&1',  escapeshellarg($cmdarg) ));\n// return:\n//   returns a line break at the end, use trim()\n//   `1> /dev/null` eliminando stdout si  vede solo l'errore\n//   return NULL if the executed command doesn't output anything, strict comparisons to '' return false\n// trobleshooting:\n//   It is not possible to detect execution failures using this function. exec() should be used\n//   check www-data has rights to files or directories you are accessing\n//   check safemode\n//   check not using an alias \n//   check script is in your path, the error will be logged to error_log\n//   check "memory_limit" php.ini the program memory used is computed for the total\n//   memory-hogging operations use system() instead\n//   to run in the background, the output must be redirected to a file, or will hang until the execution ends\n//   `pwd` e chdir() per settare le directory su cui lavorerà lo script, `cd $dir && $cmd`\n//   $r=getenv("REMOTE_ADDR"); putenv('LANG=en_US.UTF-8'); // to share config \n
filter_|$vvv = filter_var($vvv, FILTER_SANITIZE_NUMBER_INT);//  FILTER_SANITIZE_EMAIL  FILTER_SANITIZE_STRING\nif( false === $vvv ){\n\techo "validation error param: vvv ";\n}\nctype_
dir_exists_|if( file_exists($path_) ) {\n}
apc_clear_cache_|apc_clear_cache($cache_type='user');
json_encode_|json_encode($a, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
array_reduce_|$reduced = array_reduce($a, function($carry_v, $cur_v) {\n    $carry_v *= $cur_v;\n    return $carry_v;\n}, $initial_v='');
obj_|new stdClass()
banchmark_|profile_
assert_int_|if( !is_numeric($num) ) {\n    throw new Exception("num deve essere in formato numerico, '$num' ricevuto");\n}\n\n
filter_float_|$f = filter_var($f, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION|FILTER_FLAG_ALLOW_THOUSAND);
register_shutdown_function_|register_shutdown_function(function (){ \n    echo "script is shuting down";\n});
finally_|finally {\n\|}
m_|method_
css_input_type_|input[type="text"]
spl_|Interfaces\n    Countable\n    OuterIterator\n    RecursiveIterator\n    SeekableIterator\n    SplObserver\n    SplSubject\nClasses\n    AppendIterator\n    ArrayIterator\n    ArrayObject\n    CachingIterator\n    CallbackFilterIterator\n    DirectoryIterator\n    EmptyIterator\n    FilesystemIterator\n    FilterIterator\n    GlobIterator\n    InfiniteIterator\n    IteratorIterator\n    LimitIterator\n    MultipleIterator\n    NoRewindIterator\n    ParentIterator\n    RecursiveArrayIterator\n    RecursiveCachingIterator\n    RecursiveCallbackFilterIterator\n    RecursiveDirectoryIterator\n    RecursiveFilterIterator\n    RecursiveIteratorIterator\n    RecursiveRegexIterator\n    RecursiveTreeIterator\n    RegexIterator\n    SplDoublyLinkedList\n    SplFileInfo\n    SplFileObject\n    SplFixedArray\n    SplHeap\n    SplMinHeap\n    SplMaxHeap\n    SplObjectStorage\n    SplPriorityQueue\n    SplQueue\n    SplStack\n    SplTempFileObject\nException\n    LengthException\n    InvalidArgumentException\n    LogicException\n    BadFunctionCallException\n    BadMethodCallException\n    DomainException\n    RangeException\n    RuntimeException\n    UnderflowException\n    UnexpectedValueException\n    BadFunctionCallException\n    BadMethodCallException\n    OutOfBoundsException\n    OutOfRangeException\n    OverflowException
ok_|ok($result, $expected, $label); // test_
zf_view_|$html = $this->view->render('alternate.phtml');
ex_|throw_
dump_|var_
firebug_|FB::send('test');
argv_|$_SERVER['argv'][1];
memory_limit_|ini_set("memory_limit","256M");
http_auth_|// HTTP basic AUTH\nunction pc_validate($user,$pass) {\n    /* replace with appropriate username and password checking from DB */\n    $users = ['david' => 'fadj&32',\n                   'adam'  => '8HEj838'];\n    if (isset($users[$user]) && ($users[$user] == $pass)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nif (! pc_validate($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW'])) {\n    header('WWW-Authenticate: Basic realm="My Website"');\n    header('HTTP/1.0 401 Unauthorized');\n    echo "You need to enter a valid username and password.";\n    exit;\n}
thread_|pthreads_
array_filter_|$a_data = array_filter($a_data, function ($v){ \n    // false will be skipped\n    return !empty($v); \n});
implode_|implode(',', array_filter($a, function ($s){ return !empty($s); }) );
zf_h_select_multi_|$html_select = $this->formSelect(\n            $name='foo[]',\n            $val=2,\n            $opt=[\n              'class' => 'baz',\n            ],\n            $a_options=[ 1 => 'One',\n              2 => 'Two',\n              3 => 'Three' ]\n);
var_|echo '<pre>',var_dump(\|),'</pre>'; // DEBUG\ndie(__FUNCTION__.'() F:'.__FILE__.' L:'.__LINE__.PHP_EOL ); //echo '<pre>',debug_print_backtrace(),'</pre>';
http_build_query_|$url_data = http_build_query([]);
zf_h_headlink_|<?php \n// setting links in a view script:\n$this->headLink()->appendStylesheet('/styles/basic.css')\n                 ->headLink(['rel' => 'icon',\n                                  'href' => '/img/favicon.ico'],\n                                  'PREPEND')\n                 ->prependStylesheet('/styles/moz.css',\n                                     'screen',\n                                     true,\n                                     ['id' => 'my_stylesheet']);\n  \n// rendering the links in layout\necho $this->headLink() ?>
opt_|$option = array_merge([\n], $opt );\nextract($option);
phpunit_test_|// salva in {$classname}Test.php\nclass {$classname}Test extends PHPUnit_Framework_TestCase {\n    public function test{$testname}(){\n        $this->assertEquals(1, 2);\n    }\n}
gz_extract_|// open file for reading\n$zp = gzopen($filename, "r");\n// read 3 char\necho gzread($zp, 3);\n// output until end of the file and close it.\ngzpassthru($zp);\n// open file and print content (the 2nd time).\nif (readgzfile($filename) != strlen($s)) {\n    echo "Error with zlib functions!";\n}\ngzclose($zp);
replace_|preg_replace('/\\s+?(\\S+)?$/', '',$s);
issetor_|$\|= isset($a['']) ? $a[''] : null;
login_|// simplistic login to protect a web page\n<form method="post" action="login.php">\nUsername: <input type="text" name="username"> <br>\nPassword: <input type="password" name="password"> <br>\n<input type="submit" value="Log In">\n</form>\n\n \nif (pc_validate($_REQUEST['username'],$_REQUEST['password'])) {\n    $_SESSION['login'] = \n        $_REQUEST['username'].','.md5($_REQUEST['username'].$secret_word));\n    error_log('Session id '.session_id().' log in as '.$_REQUEST['username']);\n}\n// verification\nunset($username);\nif ($_SESSION['login']) {\n    list($c_username,$cookie_hash) = explode(',',$_SESSION['login']);\n    if (md5($c_username.$secret_word) == $cookie_hash) {\n        $username = $c_username;\n    } else {\n        print "You have tampered with your session.";\n    }\n}
zf_cache_get_|$cacheEngine = Zend_Registry::get('cache');\n$c_key = '';\nif( ($c_result = $cacheEngine->load($c_key)) === false ) {\n    $c_result = ; // do computation\n    $cacheEngine->save($c_result, $c_key);\n} else {\n    // get from cache\n}\nreturn $c_result;
zf_registry_|if( Zend_Registry::isRegistered('acl') ){\n    $acl = Zend_Registry::get('acl');\n} else {\n    $acl =;\n    Zend_Registry::set('acl', $acl);\n}
base_convert_|base_convert($i, 10, $tobase=36 );
k_|'\|' => '',
__END__|$html = <<<__END__\n\|__END__;\n
rand_|rand(0,100);
config_|$a_config = include 'config/application.config.php';\n<?php\n// config/application.config.php\nreturn [];
header_download_|// inizia output\nfunction binary_download($file_path){\n  header('Content-Description: File Transfer');\n  header('Content-Type: application/octet-stream');\n  header('Content-Transfer-Encoding: binary');\n  header('Content-Disposition: attachment; filename=' . basename($file_path));\n  header('Expires: 0');\n  header('Cache-Control: must-revalidate');\n  header('Pragma: public');\n  header('Content-Length: ' . filesize($file_path));\n  readfile($file_path);\n}\nbinary_download($file_path);\nexit;
file_is_older_|$file_mtime = filemtime($this->xml_file);\nif (time()-$file_mtime > 2 * 3600) {\n    // file older than 2 hours\n} else {\n    // file younger than 2 hours\n}
file_put_contents_|protected function logRequest($isOK, $message, array $errors){\n    $log_msg =  sprintf('%s %s action:%s msg:"%s" errors:%s params:%s %s'.PHP_EOL,\n        date('Y-m-d H:i:s'),\n        $isOK ? 'OK' : 'KO',\n        $action=$this->getRequest()->getActionName(),\n        $message,\n        json_encode($errors),\n        $request = substr(json_encode(array_merge($_GET,$_POST)),0,2000),\n        substr($_SERVER['REQUEST_METHOD'],0,1)\n    );\n    $log_path = APPLICATION_PATH.'/../var/logs/api_requests_'.date('my').'.log';\n    file_put_contents($log_path, $log_msg, (FILE_APPEND | LOCK_EX));\n}\n
asort_|hash_sort_
once_|static $c = 0;\nif( $c === 0 ) {$c++;\n\|\n}
substr_count_|$c = substr_count($str, $usbstr\|);
defined_|defined('MYCONST')
sprintf_|$str = sprintf('%s %d', $str, $int); \n// second: %2$s ; first: %1$s
goto_|GOTO_LABEL:\ngoto GOTO_LABEL; \n\n
error_reporting_|error_reporting(E_ALL); // Report all PHP errors \nini_set('display_errors', '1');\nini_set('html_errors', '1');\n// log app errors\nini_set('log_errors', '1');\nini_set('error_log', __DIR__.'/data/log/PHP_'.date('y_m').'.php' );
typeof_|$var instanceof ParentClass
try_|try {\n\n\|//} catch ( Zend_Controller_Dispatcher_Exception $e) {\n} catch (Exception $e) {\n    $fmt = 'Exception: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    ); \n    Zend_Registry::get('logger')->err(strip_tags($msg));\n    // your UI notify routine\n    die($msg);\n//} finally {\n}\n\n
sort_records_|// Sort the multidimensional array\nusort($results, function ($a, $b) {\n    // Define the custom sort function\n    return $a['some_sub_var'] > $b['some_sub_var'];\n});\n     \n
func_|function golang_like_func($str){\n    return [false, "String is invalid"];\n}\nlist($res, $err) = golang_like_func($str);\nif($err){\n  // use $err\n}\n\n
controller_|// funzione: controller con nomenclatura simile a ZF\nclass BaseController {\n    public function run($uri) {\n        $action = self::resolveAction($uri);\n        if (method_exists($this, $action)) {\n            return $this->$action();\n        } else {\n            return "unimplemented action:$action \\n";\n        }\n    }\n    // logica di composizioe della action\n    public static function resolveAction($uri) {\n        if (empty($uri)) {\n            return '';\n        }\n        $action = str_replace(['/mobile/','/'], '', $uri);\n        $action .= 'Action'; \n        return $action;\n    }\n}\n// esempio uso e azione\nclass AppController extends BaseController {    \n    function loginAction(){}\n}\nok('/mobile/login', 'loginAction');//test resolver\n$controller = new AppController();\ndie( $controller->run($uri = $_SERVER['REQUEST_URI']) );
dir_|glob_
check_|<input type="checkbox" name="<?=setFieldInfoName($currentIndex)?>" value="1" <?=$\|->enabled() ? "checked" : ""?>>
range_|$a_range = range(0, 50, 10);//[10,20,30,40,50]
autoload_|        spl_autoload_register(function ($pClassName) {\n            $path = str_replace('\\\\', DIRECTORY_SEPARATOR, $pClassName);\n            require_once (__DIR__ . DIRECTORY_SEPARATOR . $path . ".php");\n            return true;\n        });
array_map_assoc_|$a_err = array_map(function($k, $v) {\n    return "$k => $v";\n}, array_keys($a_err), array_values($a_err) );
zf_h_escape_|$this->escape($this->str)
tempnam_|tempnam(sys_get_temp_dir(), 'PREFIX');
method_|protected function \|(hint $v){ \nreturn ; \n}
ajax_|request_is_ajax_
set_time_limit_|set_time_limit(0);
sf_|sprintf_
limit_|set_time_limit_\nmemory_limit_
unique_|$a = array_unique($a);
is_|test_
interface_|interface ICommand {\n    // \n    public function run();\n}
captcha_|require_once "../../jpgraph/jpgraph_antispam.php";\n$spam = new AntiSpam();\n// saved to $chars for later verification of correct entry\n$chars = $spam->Rand(8);\n$spam->Stroke() ;
mysql_|mysqli_
str_replace_|str_replace('','',\|);
memoize_|cache_
zf_action_|public function __Action(){\n    $this->view->myval = null;\n}
nl_|PHP_EOL
curl_get_|$c = curl_init('http://www.example.com/directory');\ncurl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($c, CURLOPT_FOLLOWLOCATION, 1);\n// alternative per processare il file\n// curl_setopt($c, CURLOPT_WRITEFUNCTION, function($c,$page) {\n//    $info = curl_getinfo($c);\n//});\n// curl_setopt($c,CURLOPT_FILE);\n//curl_setopt($c, CURLOPT_HTTPHEADER, ['X-Factor: 12', 'My-Header: Bob'] );\n//curl_setopt($c, CURLOPT_VERBOSE, 1);\n//curl_setopt($c, CURLOPT_REFERER, 'http://www.example.com/form.php');\n//curl_setopt($c, CURLOPT_USERAGENT, 'CURL via PHP');\n$page = curl_exec($c);\ncurl_close($c);
whilers_|while ($a = mysql_fetch_assoc($rs)) {\|}
header_json_|header('Content-Type: application/json');
scan_|$n = sscanf($auth, "%d\\t%s %s", $id, $first, $last);
call_user_func_array_|// Call the $foo->bar() method with 2 arguments\n$foo = new foo;\ncall_user_func_array([$foo, "bar"], ["three", "four"] );
collapse_|border-collapse:collapse;
move_uploaded_file_|$b_res = move_uploaded_file($tmp_name, $dest_path);
print_r_|print_r(\|,true);
//--|//----------------------------------------------------------------------------\n//  \|\n//----------------------------------------------------------------------------
php_sapi_name_|if (php_sapi_name() != 'cli') {\n    die("You have to use {$argv[0]} with cli version of php.");\n}
header_|header("Location: $url");
zf_log_|$logger = Zend_Registry::get('logger');\n$logger->info('');\n$logger->warn('');\n$logger->err('');
unlink_|if( unlink($path) ){}
microtime_|$time_from_begin = round(microtime(true) - $_SERVER['REQUEST_TIME_FLOAT'], 4);\n$time_start = microtime(true);\n// long operation here\nvar_dump( microtime(true) - $time_start );\nprofile_
zf_partial_|echo $this->partial('_partial.phtml', [\n    // injiect vars\n    'from' => 'Team Framework',\n] ); \n
zf_dbg_|Zend_Debug::dump($, 'label:');
array_unique_|$a_ = array_unique($a_ , SORT_STRING);
file_get_contents_|$str_content = file_get_contents( realpath( __DIR__ .'/file.txt') );
f_|function(){}
hack_|#!/usr/bin/hhvm -vEval.Jit=1\n<?hh
throw_|$msg = sprintf('Errore %s ', \n\|);\nthrow new Exception($msg);
strategy_|interface ISerializable {\n    public function serialize();\n}\nclass PHPOutput implements ISerializable {\n    public function serialize()    {\n        return serialize($a);\n    }\n}\nclass JsonOutput implements ISerializable {\n    public function serialize() {\n        return json_encode($a);\n    }\n}\n// caller code will use the strategy preferred at runtime\n$serializer = ;// get a serializer at runtime\n$serializer->serialize();\n\n\n
reflection_|$reflect = new ReflectionClass($this);\n$props   = $reflect->getProperties(ReflectionProperty::IS_PUBLIC | ReflectionProperty::IS_PROTECTED);\nforeach ($props as $prop) {\n    print $prop->getName() . "\\n";\n}
command_|// pattern Command\n// definisce un oggetto operazione, assegna le operazioni a una lista, esegue le operazioni nella lista\ninterface ICommand{\n  public funcion execute();\n}\n \nclass Commnad_1 implements ICommand{}\nclass Commnad_2 implements ICommand{}\n \n \nclass Commander {\n  function __constructor(){\n    // i command possono essere caricati a runtime o seguendo logiche opportune\n    $this->commands = [ new Command_1(), new Command_2() ];\n  }\n \n  // esegue i comandi per aggregare un output complesso\n  function operate(){\n    //  l'output può essere di un tipo qualsiasi, dipende dalla logica corrente\n    $output = '';\n    foreach( $this->command as $c ){\n      $output .= $c->execute();\n    }\n    return $output;\n  }\n}
escape_|echo htmlspecialchars($s, ENT_QUOTES);
cache_|define('TTL_FOREVER',  0, false);\ndefine('TTL_H',  60 * 60, false);\ndefine('TTL_8H', 8 * TTL_H, false);\ndefine('TTL_D',  24 * TTL_H, false);\n/* uso:\n$cache_key = '';//__METHOD__.'_'.json_encode(func_get_args());\n$data = cache($cache_key, function() {\n\treturn [];\n});\nreturn $data;\n*/\nfunction cache($cache_key, \\Closure $generator, $ttl_secs = TTL_8H ) {\n    $val = apc_fetch($cache_key);\n    if (false === $val) {\n        $val = $generator();\n        apc_store($cache_key, $val, $ttl_secs );//secs, 0=forever\n    } else {\n        // from cache\n    }\n    return $val;\n}\n
main_|__MAIN__
static_|//\n\tprotected static function \| () {\t\t\nreturn ; \n}
date_default_timezone_set_|date_default_timezone_set('Europe/Rome');
dir_path_|$path_=dirname(__FILE__).'/lib.php'
url_exists_|$file_headers = @get_headers($url = 'http://www.domain.com/somefile.jpg' );\nif( $file_headers[0] == 'HTTP/1.1 404 Not Found' ) {\n    return false;\n}
call_|call_user_func_array_
sapi_|php_sapi_name_
filter_int_|$int = filter_var( \|, FILTER_SANITIZE_NUMBER_INT);
phpunit_assert_|$this->assertEquals($expect, $val, $msg='');\n
e_|<?= escape_\|?>
singleton_|    public static function getInstance() {\n        static $__instance = null;\n        if (null === $__instance) {\n            $__instance = new static();\n        }\n        return $__instance;\n    }\n    // should not circumvent the singleton\n    protected function __construct() { }
strpos_|str_pos_
zf_session_|$session = Zend_Registry::get('session');\n//$session = new Zend_Session_Namespace('_l10n_');\n$session->var = '';
phpunit_assert_true_|$this->assertTrue($val);
log_|file_put_contents_
zf_h_partial_loop_|$model = [\n    ['key' => 'Mammal', 'value' => 'Camel'],\n    ['key' => 'Bird', 'value' => 'Penguin']\n];\necho $this->partialLoop('partialLoop.phtml', $model);
sqlite_|$db = new SQLite3('test.db',SQLITE3_OPEN_CREATE);\nif(!$db){\n    echo $db->lastErrorMsg();\n} else {\n    echo "Opened database successfully\\n";\n}\n\n$sql =<<<EOF\n  CREATE TABLE TEST_TBL\n  (ID INT PRIMARY KEY     NOT NULL,\n  NAME           TEXT    NOT NULL,\n  AGE            INT     NOT NULL,\n  ADDRESS        CHAR(50),\n  NUM            REAL);\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (1, 'Paul', 32, 'California', 20000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (2, 'Allen', 25, 'Texas', 15000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (3, 'Teddy', 23, 'Norway', 20000.00 );\n\n  INSERT INTO TEST_TBL (ID,NAME,AGE,ADDRESS,NUM)\n  VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 );\nEOF;\n//---------\n$ret = $db->exec($sql);\nif(!$ret){\n    echo $db->lastErrorMsg();\n} else {\n    echo "Table created successfully\\n";\n}\n//---------\n// or DELETE from TEST_TBL where ID=2;\n$ret = $db->exec($sql="UPDATE TEST_TBL set NUM = 25000 where ID=1;");\nif(!$ret){\n    echo $db->lastErrorMsg();\n} else {\n    echo $db->changes(), " Record updated successfully\\n";\n}\n//---------\n$ret = $db->query($sql="SELECT * from TEST_TBL;");\nwhile($row = $ret->fetchArray(SQLITE3_ASSOC) ){\n    echo "ID = ". $row['ID'] . "\\n";\n    echo "NAME = ". $row['NAME'] ."\\n";\n    echo "ADDRESS = ". $row['ADDRESS'] ."\\n";\n    echo "NUM =  ".$row['NUM'] ."\\n\\n";\n}\n$db->close();
hash_|if (function_exists("hash_algos") && in_array("sha512", hash_algos())) {\n    $token = hash("sha512", mt_rand(0, mt_getrandmax()));\n}
gz_compress_|$filename = tempnam('/tmp', 'zlibtest') . '.gz';\n$s = "Only a test, test, test, test, test, test, test, test!\\n";\n$zp = gzopen($filename, "w9");// open file for writing with maximum compression\ngzwrite($zp, $s);// write string to file\ngzclose($zp);// close file
function_|//\nfunction \|() {\n    $html = '';\n    $html .= '';\n    return $html;\n}\n
intval_|$i_num = intval($s);
dbg_|var_dump(\|);die();
jq_promise_|jq_deferred_
ob_|ob_start();\n$this->debugDumpParams();\n$dump = ob_get_clean();
extract_|extract($data, $flgs=EXTR_OVERWRITE, $sprefix=null);
date_sub_|date_add_
session_|session_start();  \n$_SESSION['count'] = 0;
mail_|$mail_res = mail($to, $subject, $message);
echo_|echo "\|"; // dbg
sf_get_|$request->getParameter($name);
php_|<?php\n\n\|\n?>
__call_|function __call($name, $args){\n  echo "no def: $name  arity: ".count($args)."\\n";\n}
phpo_|<?=\|;?>
mysqli_|$mysqli = new mysqli("127.0.0.1", $user, $password, $database, 3306 );\nif ($mysqli->connect_errno) {\n    echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;\n}\necho $mysqli->host_info . "\\n";\n\n// Create table doesn't return a resultset  \nif ($mysqli->query("CREATE TEMPORARY TABLE myCity LIKE City") === TRUE) {\n    printf("Table myCity successfully created.\\n");\n}\n\n// Select queries return a resultset  \nif ($result = $mysqli->query("SELECT Name FROM City LIMIT 10")) {\n    printf("Select returned %d rows.\\n", $result->num_rows);\n\n    // free result set \n    $result->close();\n}\n\n// If we have to retrieve large amount of data we use MYSQLI_USE_RESULT \nif ($result = $mysqli->query("SELECT * FROM City", MYSQLI_USE_RESULT)) {\n\n}\n\n$mysqli->close();\n \n \n
jq_submit_|$( "#target" ).submit(function( event ) {\n  alert( "Handler for .submit() called." );\n  event.preventDefault();\n});
zf_layout_|$layout = $this->_helper->layout();\n$layout->setLayout('three-column');
__construct_|public function __construct(){\n    parent::__construct();\n}
redirect_|location_
parse_int_|intval($i)
array_merge_|$a = array_merge( $a_1, $a_2 ...);
gz_|gz_compress_\ngz_extract_
profile_|//--- DBG -----------------------------------------------------------\n// define profile macro\n$__profile = function ( $label, \\Closure $op) {\n    $mt_begin=microtime(true);\n    $res = $op();\n    echo sprintf('<pre>[%s] time:%F ms</pre>',\n        $label,\n        microtime(true)-$mt_begin\n    );\n    return $res;\n};\n//--- end DBG ------------------------------------------------------   \n$__op_result__ = $__profile('__LABEL__', function() use($V) {\n    return __the_operation__; \n} );\nmicrotime_
public_|\t//\n\tpublic function \|(){\n\t  return true;\n\t}
glob_|foreach (glob("*.txt") as $filename) {\n    echo "$filename size " . filesize($filename) . "\\n";\|}
php_cli_server_|#!/usr/bin/env php\n<?php\n$dir = dirname(__FILE__).'/../www';\n\n$port = getFirstOpenPort( $port=8080, $c=10 );\nif( !empty($port) ) {\n    echo "serving http://localhost:$port \\n";\n    `google-chrome http://localhost:$port`;\n    `php -S localhost:$port -t $dir`;// il comando blocca l'esecuzione successiva\n} else {\n    echo 'no port found! '.PHP_EOL;\n}\n// scan a port range and return the first open\nfunction getFirstOpenPort($port=8080, $c=10 ) {\n    $_port=0;\n    for( $i=0; $i < $c; $i++) {\n        $_port = $port + $i;\n        $is_open = portIsOpen($_port);\n        if( $is_open ) {\n            echo $str = sprintf('port:%s open:%d '.PHP_EOL, $_port, $is_open );\n            return $_port;\n        }\n    }\n    return 8080;\n}\n// verifica se una porta locale è aperta o chiusa\nfunction portIsOpen($port) {\n    // '127.0.0.1'\n    $fp = @fsockopen('localhost', $port, $errno, $errstr, $timeout=5);\n    if (!$fp) {\n        // If you're getting a connection refused then the (TCP) port is firewalled.\n        echo $str = sprintf('port:%s ern:%d err:%s'.PHP_EOL, $port, $errno, $errstr);\n        // port is closed or blocked\n        return true;\n    } else {\n        echo("opened $port \\n");\n        // port is open and available\n        fclose($fp);\n        return false;\n    }\n}
else_|else {\|}
set_error_handler_|// defining your own way of handling errors during runtime,\n// you need to do cleanup of data/files when a critical error happens\nset_error_handler(function ($errno, $errstr,  $errfile, $errline, array $errcontext) { \n    \n    // error was suppressed with the @-operator\n    if (0 === error_reporting()) { return false; }\n\n    /* switch ($errno) {\n        case E_NOTICE:\n        case E_USER_NOTICE:\n            $errors = "Notice";\n            break;\n        case E_WARNING:\n        case E_USER_WARNING:\n            // log your warning or transform in exception:\n            $errors = "Warning";\n            break;\n        case E_ERROR:\n        case E_USER_ERROR:\n            $errors = "Fatal Error";\n            break;\n        default:\n            $errors = "Unknown Error";\n            break;\n    } */\n\t// log your warning or transform in exception:\n        throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n\n\t//  is your responsibility to die() if necessary\n\t//  standard PHP error handler is completely bypassed for the error types specified by error_types unless the callback function returns FALSE\n\treturn false;\n}, \n  // on which error report level the user-defined error will be shown. Default is "E_ALL"\n  $on_err_level = self::isEnvProd() ? E_WARNING : E_ALL\n);\n\n
jq_ready_|$(function(){\n    // DOM ready\n\|\n});
file_ext_|$ext = pathinfo($file_path, PATHINFO_EXTENSION);
apc_get_|cache_
zf_get_|$name = $this->getRequest()->getParam('name\|', '');
timing_|profile_
zf_h_partial_|echo $this->partial('_partial.phtml', $data=[\n    'from' => 'Team Framework',\n    'subject' => 'view partials'] );
image_size_|list($width, $height, $type, $attr) = getimagesize("$file_path");
str_match_|str_match($str, $substr)\|// strpos_ preg_match_\n// $str = "The quick brown fox jumps over the lazy dog";\n$contais = 1 === preg_match('/fox/', $str); // returns 1\n
ctype_|$is_ = ctype_alpha($str); // Only letters\n$is_ = ctype_digit($str); // Only numbers\n$is_ = ctype_space($str); // Only whitespace\n$is_ = ctype_print($str); // Only printable characters\n$is_ = ctype_alnum($str); // Numbers or letters
if__|$\| = isset($c) ? $c : null;
filter_str_|filterstr_
border_|border: 1px solid #\|;
strpad_|str_pad_
css_transparent_|background-color:rgba(255,0,0,0.5);
ff_|( \| ) ? ( ) : ( );
a_|$\| = [];
output_handler_|function mangle_email($s) {\n    // elimina email dall'output\n    return preg_replace('/([^@\\s]+)@([-a-z0-9]+\\.)+[a-z]{2,}/is', '<$1@...>', $s);\n}\n// esegue la funzione di pulizzia sull buffer\nob_start('mangle_email');\n// equivalente al settaggio php.ini\n// output_buffering = On\n// output_handler=mangle_email
date_format_|$date = DateTime::createFromFormat('Y-m-d', $last_date);\n\t\techo $date->format('d/m/Y');
php_cli_|#!/usr/bin/env php\n<?php\n
date_|date('Y-m-d H:i:s');
apc_|cache_
if___|$v = $v ?: $def;
defines_|// includono sia quelle create dalle estensioni sia quelle create con la funzione define()\necho '<pre>',print_r(get_defined_constants());\ndie();
redis_cache_|// usa composer per gestire le dipendenze\n//require "predis/autoload.php";\n//Predis\\Autoloader::register();\ntry {\n    $R = new Predis\\Client([\n        //'scheme' => 'tcp',\n        //'host' => 'localhost',\n        //'port' => port,\n        //'password' => 'password',\n        'persistent' => '1'  // persistent!\n    ]);\n} catch (Exception $e) {\n    $fmt = 'Exception Redis Connect: <b>%s</b><br>\n    file:%s line:%s <br>\n    trace:<pre>%s</pre>';\n    $msg = sprintf($fmt,\n        $e->getMessage(),\n        $e->getFile(), $e->getLine(),\n        $e->getTraceAsString()\n    );\n    die($msg);\n}\n$k = 'foo';\nif( $R->exists($k) ){\n    $value = $R->get($k);\n    var_dump($value);\n} else {\n    // $R->set($k, "bar");\n    // $v = json_encode($v);\n    $R->setex($k, 60*60*24, "value" );\n}
zf_flash_|$this->_helper->flashMessenger->addMessage('');
number_format_|number_format($number, 2, ',', '.');
preg_match_|// basic match\n$str = "The quick brown fox jumps over the lazy dog";\n$is = 1 === preg_match('/fox/', $str) ; // returns 1\n$is = 1 === preg_match('/^fox/', $strg) ; // returns 0\n$is = 1 === preg_match('/^The/', $str) ; // returns 1\n$is = 1 === preg_match('/^the/', $str) ; // returns 0\n$is = 1 === preg_match('/dog$/', $str; // returns 1\n$is = 1 === preg_match('/f.x/', $str) ; // returns 1\n\n// adv match\n// returns 1 pattern matches, 0 if not, FALSE if an error \n$num_matches = preg_match('/^[A-Za-z0-9]{5,7}$/', $str, $a_matches, PREG_OFFSET_CAPTURE);\nif(false === $num_matches) {\n    $a_pcre_err=array_flip(get_defined_constants(true)['pcre']);\n    die( preg_last_error() /*.' '.$a_pcre_err[preg_last_error()]*/ );\n} elseif($num_matches===0) {\n    // no matches\n} else {\n    // ok\n}
trait_|trait SayWorld {\n    public function sayHello() {\n        parent::sayHello();\n        echo 'World!';\n    }\n}\nclass MyHelloWorld extends Base {\n    use SayWorld;\n}
[yab]
[lua]
[makefile]
[sas]
[rtf]
[ptl]
[gcbasic]
[xsl]
[moin]
code_|<code bash>\|</code>
quote_|<quote "">\|</quote>
[bibtex]
[hxml]
[modula3]
[perl]
[tsp]
[transact-sql]
[lisp]
[smi-mib]
[actionscript]
[pop11]
[progress]
[jamon]
[ini]
[html]
[go]
var_|fmt.Printf("%v", v) //DBG
array_string_|as_ := [...]string{"7", "8","9"}
err_|if err != nil { panic(err) }
print_|fmt.Printf("Hello %d\\n", 23)\nfmt.Fprint(os.Stdout, "Hello ", 23, "\\n")\nfmt.Println("Hello", 23)\nfmt.Println(fmt.Sprint("Hello ", 23))
switch_|    // switch\n    switch os := runtime.GOOS; os {\n    case "darwin":\n        fmt.Println("OS X.")\n    case "linux":\n        fmt.Println("Linux.")\n    default:\n        fmt.Printf("%s.", os)\n    }
rand_|// import "math/rand" "time"\nrand.Seed(time.Now().UnixNano())\nfmt.Println( rand.Intn(100) )
interface_|type Block interface {\n    BlockSize() int\n    Encrypt(src, dst []byte)\n    Decrypt(src, dst []byte)\n}
ife_|if value, err := pack1.Func1(param1); err != nil {\n}
isset_|cities := map[string]string{"city1": "New York", "city2": "Portland"}\n// ok is boolean\nvalue, ok := cities["city2"] // return value if found or ok=false if not found\nif ok {\n    fmt.Println("value: ", value)\n} else {\n    fmt.Println("key not found")\n}
get_env_|str := os.Getenv("HOME")
file_exists_|// import os\nfile := "file.txt"\nif _, err := os.Stat(file); err == nil {\n    fmt.Println(file, "exist!")\n}
explode_|// import strings\n//str := "ADAM, EVE, JAMES"\na_str := strings.Split(str, ",")
class_|// Simple counter server.\ntype Counter struct {\n    n int\n}\n\nfunc (ctr *Counter) ServeHTTP(w http.ResponseWriter, req *http.Request) {\n    ctr.n++\n    fmt.Fprintf(w, "counter = %d\\n", ctr.n)\n}
float_to_string_|// import strconv\nstr := strconv.FormatFloat(12342323.234232, 'f', 6, 64)
_POST_|R *http.Request\nname := R.FormValue("k")
if_|if v, ok := map[k]; ok { \n    fmt.Println(k, v, " key is present")\n}
map_struct_|m = map[string]Vertex{\n    "Bell Labs": Vertex{X:2, Y:5},\n    "Google":    Vertex{X:5, Y:8},\n}\nfor k, v := range m {\n    fmt.Printf("The value for %s: %d %d \\n", k, v.X, v.Y )\n}
flag_|    var goRoot = "";\n    flag.StringVar(&goRoot, "goroot", goRoot, "Go root directory")
function_|func Fnamw(url string) (string, error) {\n    if ok {\n        return res, nil\n    }\n    return "", fmt.Errorf("not found: %s", url)\n}
str_replace_|// import stings\nstr := strings.Replace(my_str, " ", "", -1)
new_|//for arrays, structs and all value types: returns pinter\nvar f File = new(File)
file_open_|w, err := os.Create("output.txt")\nif err != nil {\n    panic(err)\n}\ndefer w.Close()
make_|//for slices, maps and channels: use make, initilize to zero\n//for arrays, structs and all value types: use new\nvar v  []int = make([]int, 100) // slice int inizializzata a 0 di 100 elementi
struct_|type Circle struct {\nx, y, r float64\n}\nc := new(Circle)\nc := Circle{x: 0, y: 0, r: 5}\nfmt.Println(c.x, c.y, c.r)
echo_|//import "fmt"\nfmt.Println("Hello", 23)
_GET_|R http.Request\nstr := R.URL.Query().Get("k");
mapi_|imap := map[string]int{\n    "a": 1,\n    "b": 2,\n}
file_put_contents_|// import os\nfile, err := os.OpenFile("input.txt", os.O_APPEND|os.O_WRONLY,0600)\nif err != nil {\n    panic(err)\n}\ndefer file.Close()\nif _, err = file.WriteString(" this is the APPENDED text"); err != nil {\n    panic(err)\n}
args_|func myadd(args ...int) int {\n    total := 0\n    for _, v := range args {\n        total += v\n    }\n    return total\n}
argv_|// import "flag"\nflag.Parse() \narg := flag.Arg(0) // get 1st argument
for_|for i := 0; i < len(p); i++ {\n    fmt.Printf("p[%d] == %d\\n", i, p[i])\n}
array_int_|array := [...]int{7, 8, 9}
file_get_contents_|// import "io/ioutil"\nfile, err := ioutil.ReadFile("testfile.txt")\nif err != nil {\n    fmt.Println(err)\n    return\n}\n// out the file content\nfmt.Println(string(file))
method_|func (f *fakeFetcher) Fetch(url string) (body string, urls []string, error) {\n    res, ok := some_method_call();\n    if ok {\n        return res.body, res.urls, nil\n    }\n    return "", nil, fmt.Errorf("not found: %s", url)\n}
md5_|//import "crypto/md5"\nhash := md5.New()\nio.WriteString(hash, my_str)  // append into the hash\nfmt.Printf("%x", hash.Sum(nil)) // get the hash
log_|log.Fatal("$USER not set")
delete_|delete(map, "key")
foreach_|    for k, v := range pow {\n        fmt.Printf("2**%d = %d\\n", k, v)\n    }
unset_|cities := map[string]string{ "city1":"New York", "city2":"Adelaide" };\ndelete(m, k)  // remove element m[k] from map m
main_|/*\nscopo del programma:\n*/\npackage main\nimport (\n    "fmt"\n)\nfunc init(){}\nfunc main() {\n    fmt.Println("Hello, go")\n}
array_|slice1 := []int{1,2,3}
map_|mi := make(map[string]int)\nmi["Answer"] = 42    \nfor k, v := range mi {\n}\n
dir_walk_|// import "os", "path/filepath"\n      dirname := "." + string(filepath.Separator)\n      d, err := os.Open(dirname)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      defer d.Close()\n      files, err := d.Readdir(-1)\n      if err != nil {\n          fmt.Println(err)\n          os.Exit(1)\n      }\n      fmt.Println("Reading "+ dirname)\n      for _, file := range files {\n          if file.Mode().IsRegular() {\n              if filepath.Ext(file.Name()) == ".png" {\n                fmt.Println(file.Name())\n              }\n          }\n      }
[sgml]
[bcel]
[psp]
[antlr]
[PostgreSQL]
[cmake]
[ant]
[assembly-m68k]
[omnimark]
[interlis]
[mxml]
[avro]
[cvs-commit]
[lilypond]
[jsp]
[protobuf]
[foxpro]
[rfc]
[tex]
[mail]
[assembly-macro32]
[svn-commit]
[aspect-j]
[squidconf]
[rview]
[jhtml]
[jedit-actions]
[gradle]
[embperl]
[mysql]
[rd]
[zpt]
[objective-c]
[mqsc]
[lex]
[rust]
[prolog]
[assembly-r2000]
[sdl/pr]
[hex]
[swig]
[javafx]
[rebol]
[s+]
[dsssl]
[forth]
[nqc]
[RPG]
function_|     D calc_int        PR            10I 0\n     D    parm1                       5I 0 VALUE\n      * must match the corresponding prototype\n      * (PI is optional if the SubR does not return and does not have any parameters)\n      * Other def of variables, constants and prototypes, are LOCAL definitions\n      * Calc may refer to both local and global definitions\n      * SubR must contain a RETURN operation\n     P calc_int        B\n     D calc_int        PI            10I 0\n     D    parm1                       5I 0 VALUE\n     D Result          S             10I 0\n      /free\n         Result = parm1 +1;\n         return Result;\n      /end-free\n     P                 E
read_|read(e) File_Name;\nif %error(File_Name);\n    // TODO: error reporting\nelse;\n    dow not %eof(File_Name);\n        // TODO: process record\n        read File_Name;// read next\n    enddo;\nelse;
dou_|dou exit;\n    if cond = 1;\n        exit = *on;\n    else;\nenddo;
free_|/free\n/end-free
setgt_|setgt *Hival FileName;//go to file EOF\nReadP FileName;\ndow not %eof(FileName);\n    // process record\n    ReadP FileName;\nenddo;
sub_|begsr name;\nendsr;
setll_|setll *loval FileName;\ndow (1=1);\n  read FileName;\n  if %eof;\n    leave;\n  endif;\n  if $oo <=0;\n    iter;\n  endif;\nenddo;
chain_|      * tabella di base\n     F intct30L uf a e           k disk    rename(intct0:intct_30) prefix(t_)\n      * DS Key, è automaticamente qualified\n     D OrdRecKeys      ds                  likerec(intct_30:*key)\n\n      /free\n         OrdRecKeys.t_tcoage   = i_coage;\n         OrdRecKeys.t_tanord   = i_anord;//puoi usare campi multipli\n         chain(e) %kds(OrdRecKeys) intct_30;\n         if %error;\n           // TODO: report key not found\n         endif;\n         if %found();\n           // t_tdaord accessibile... elabora il record come in fixed\n         endif;\n      /end-free
atoi_|%unsh()
replace_|\nresult_str = %replace(sustr:s1:%scan(sustr:s1):%len(sustr));
for_|D $i              s              3u 0\nfor $i=1 to %elem(ArrayName);\n// for $i = %elem(ArrayName) downto 1 by 1;\n    ArrayName($i);\n    //iter; leave; \nendfor;\n
h_|     H DECEDIT('0,') DATEDIT(*YMD/)\n     H option(*srcstmt : *nodebugio)\n     H dftactgrp(*no) bnddir('AW')
switch_|    select;\n        when opt = 'A';\n            exsr AddRec;\n        when opt = 'D';\n            exsr DelRec;\n        when opt = 'C';\n            exsr ChgRec;\n    endsl;
try_|monitor;\n\non-error;\n    retval = 'ERROR';\nendmon;
monitor_|monitor;\n    \non-error;\n    retval = 'ERROR';\nendmon;
while_|    dow not *in03;\n    enddo;
sql_select_many_|     D $matM2          ds                  QUALIFIED\n     D  des1                         70a\n     D  des2                         70a\n     * per estrarre tutti i campi \n     D $zntcl        E DS                  QUALIFIED OCCURS( 50 ) INZ\n     D                                     EXTNAME( zntcl00f )\n \n     exec sql select padem1, padem2 into :$MATM2 from MATM200f;\n     if SQLCOD<>0;\n        errore = '1';\n        o_errstr  = 'SQL error SQLCOD: '+%char(SQLCOD) ;\n        o_errn = SQLCOD;\n     endif;
*--|*-----------------------------------------------------------------------
string_|%char() \n// cast a char di I e F
date_|//*ISO: \n//*USA: 12312004\nD date   S    D\ndate = %char( %date(ymd:*ISO) : *USA ); \ndate = %date('040596':*MDY0);// date='1996-04-05'
callpp_|// per usare i prototipi occorrono delle specifiche\nH dftactgrp(*no) bnddir('AW')\n  /copy *libl/srccpy,cpy_protaw\n     // prototipo di funzione, su modulo esterno\n     D aw_getc         pr             1n   EXTPROC('AW_GETC')\n     D   aw_getc_daor                 8p 0 value\n     D   aw_getc_nuor                11p 0 value\n     D   aw_getc_note                30A\n\n       // chiamata di una funzione con prototipo\n       callp aw_getc(da_ord:nu_ord:$awc_note);
copy_|/COPY $lib/$file,$function\n/IF NOT DEFINED $MODNAME\n/DEFINE $MODNAME\n    // code goes here\n/ENDIF
str_pos_|pos = %scan('test':s_email);
dow_|    dow not *in03;\n    enddo;
if_|if ();\nelseif ();\nelse;\nendif;
charat_|pos = %check('@':s_email);
callp_|// prototipo comando esterno\n// uso:\n//       $cmd = 'CHGJOB CCSID(*SYSVAL)';\n//       callp exec(%trim($cmd):%len(%trim($cmd)));\n     D myexec          pr                  extpgm('lib/QCMDEXC')\n     D   ex_cmd                   32702a   const\n     D   ex_cmdlen                   15p 5 const\n\n\n
sql_select_one_|exec SQL  SELECT FName, LName, email INTO :fstname,:lstname,:email\n  FROM  contacts\n    WHERE cstnbr = :client\n    FETCH FIRST ROW ONLY;\nif (SqlCod<>0 or SQLSTATE >= '02000'); \n    // NOT FOUND leavesr;\nelse;  \n    // FOUND\nendif;\n\n
char_replace_|str_dec = %xlate('$.,':' ':'$1,000.11');
strtoupper_|     D U_case          C                   CONST('ABCDEFGHIJKLMNOPQRST-\n     D                                     UVWXYZAEEIOU')\n     D L_Case          C                   CONST('abcdefghijklmnopqrst-\n     D                                     uvwxyzàèéìòù')\n     $$_des = %xlate(l_case:u_case:$$_des);
int_|%int() \n//usa unsh() per float, cast a positivo
[s#]
[fhtml]
[occam]
[objectrexx]
[rpm-spec]
[apdl]
[myghty]
[cplex-lp]
[kotlin]
[scala]
[tcl]
[rcp]
[template-toolkit]
[sip]
[python]
[i4gl]
[clips]
[roff]
[rest]
[stata]
[twiki]
[text]
code_|<code bash>\n\|\n</code>
class_|// funzione:\nclass \|// extends implements\n{\n\n}
limit_|set_time_limit_\nmemory_limit_
call_|PWD=`pwd`\n# or PWD=$(pwd)
printf_|System.out.printf("%s,%.2f", s, f);
glob_|foreach (glob("*.txt") as $filename) {\n    echo "$filename size " . filesize($filename) . "\\n";\n}
[awk]
[verilog]
[outline]
[erlang]
[creole]
i_|//text//
quote_|<quote wikipedia>\n</quote>
h5|===== aaa =====
image_|{{image.png}}
h4|==== aaa ====
h3|=== aaa ===
h2|== aaa ==
h1|= heading1 =
table_||=A |=B |=C |\n| 1 | 2 | 3 |
b_|**Creole**
code_|<code bash>\|</code>
[yaml]
[assembly-ags]
[shellscript]
argv_|# accede al primo argomento passato in input\nif [ -z "$1" ]; then\n    echo usage: $0 directory\n    exit\nfi\nSRCD=$1\necho ${SRCD}
OS_|if [[ `uname` == 'Linux' ]]; then\n   OS=android\nelif [[ `uname` == 'Darwin' ]]; then\n   OS=ios\nfi
if_|if [[ `uname` == 'Linux' ]]; then\n    DB=testdb\n    rm -f /tmp/${DB}\nelif [[ `uname` == 'Darwin' ]]; then\n    DB=test.db\nfi
while_|COUNTER=0\nwhile [  $COUNTER -lt 10 ]; do\n    echo The counter is $COUNTER\n    let COUNTER=COUNTER+1\ndone
let_|VARNAME=string\necho ${VARNAME}
dirname_|DIRNAME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
for_|for i in $( ls ); do\n    echo item: $i\ndone
require_|include_
include_|source _common.sh    # include is in $PATH
now_|NOW=`date +"%m-%d-%Y-%T"`\nmv test_app test_app_${NOW}
date_|NOW=`date +"%m-%d-%Y"`
func_|function cprint() {\n    local text="${2}"\n    local nc='\\033[0m'\n    case "${1}" in\n        black  | bk) color='\\033[0;30m';;\n        red    |  r) color='\\033[1;31m';;\n        green  |  g) color='\\033[1;32m';;\n        yellow |  y) color='\\033[1;33m';;\n        blue   |  b) color='\\033[1;34m';;\n        purple |  p) color='\\033[1;35m';;\n        cyan   |  c) color='\\033[1;36m';;\n        gray   | gr) color='\\033[0;37m';;\n        *) color=''\n    esac\n    printf "${color}${text}${nc}"\n}\n\ncprint r  "colorful!\\n"\ncprint g  "colorful!\\n"\ncprint y  "colorful!\\n"\ncprint b  "colorful!\\n"\ncprint p  "colorful!\\n"\ncprint c  "colorful!\\n"\n\nfunction y_print() { # $1 = string\n    local TEXT="$1"\n    local COLOR='\\033[1;33m'\n    local NC='\\033[0m'\n    printf "${COLOR}${TEXT}${NC}\\n"\n}\n\ny_print "This will be Yellow"
concat_|A="X Y"\nA+="Z"\nA="${B}${C}"\necho "$A"
cli_|#!/usr/bin/php\n<?php\n
[gettext]
[jcl]
[jflex]
[d]
[c]
[coldfusion]
[b]
[maven]
[typoscript]
[scheme]
[dart]
[antlr4]
[texinfo]
[slax]
[assembly-agc]
[java]
ne|nextElement()
Il|SwingUtilities.invokeLater(new Runnable()\n{\n\tpublic void run()\n\t{\n\t\t\|\n\t}\n});
date_|import java.util.Date;\nimport java.util.Formatter;\n\nString name = "";\nDate today = new Date();\nFormatter formatter = new Formatter();    \nformatter.format(" sono le %tT", today);\nSystem.out.println(formatter);
W|while($1)\n{\n\t\|\n}
V|Vector
Fd|for(int $1 = $2 - 1; $1 >= 0; $1--)\n{\n\t\|\n}
serr|System.err.println(\|);
print_|System.out.println(s);
Fc|for(int $1 = 0; $1 < $2.size(); $1++)\n{\n\t$3 \| = ($3)$2.get($1);\n}
Ie|if($1)\n{\n\t|\n}\nelse\n{\n\t\n}\n
VDE|VFS.DirectoryEntry
S|String
JE|JEditTextArea
Fa|for(int $1 = 0; $1 < $2.length; $1++)\n{\n\t$3 \| = $2[$1];\n}
P|public
O|Object
N|$1 $2 = new $1(\|);
gta|getTextArea()
gp|jEdit.getProperty(\|)
I|if($1)\n{\n\t\|\n}
H|Hashtable
F|for(int $1 = 0; $1 < $2; $1++)\n{\n\t\|\n}
Br|BufferedReader $1 = new BufferedReader(\|);
E|Exception
D|do\n{\n\t\|\n}\nwhile($1);
sp|jEdit.setProperty(\|);
Mal|MalformedURLException
C|$1 $2 = ($1)\|
B|Buffer
ogs|import org.gjt.sp.
hme|hasMoreElements()
El|else\n{\n\t\|\n}
IO|IOException
gb|getBuffer()
IN|$1 $2 = ($1)$3.next();
Ei|else if($1)\n{\n\t\|\n}
chs|Box.createHorizontalStrut(\|)
Cget|($1)$2.get($3)
class_|/**\n * funzione\n */\npublic class __class__ {\n    private double amount;\n    public __class__(String owner) {\n        this.owner = owner;\n    }\n}
sbp|jEdit.setBooleanProperty(\|);
cg|Box.createGlue()
logw|Log.log(Log.WARNING,this,\|);
CtoArray|($1[])$2.toArray(new $1[$2.size()])
logn|Log.log(Log.NOTICE,this,\|);
logm|Log.log(Log.MESSAGE,this,\|);
DMTN|DefaultMutableTreeNode
printf_|System.out.printf(" %s,  %.2f ", s, f );
loge|Log.log(Log.ERROR,this,\|);
cvs|Box.createVerticalStrut(\|)
logd|Log.log(Log.DEBUG,this,\|);
sprintf_|String s = String.format("result:%4d", i );\n
WI|while($1.hasNext())\n{\n\t\|\n}
ogsu|import org.gjt.sp.util.
array_list_|Collection<String> l = new ArrayList<String>();\nl.add("");\n\nIterator<String> it=l.iterator();\nwhile(it.hasNext()){ String tmp = it.next(); }
gbp|jEdit.getBooleanProperty(\|)
main_|// mkdir -p it/ev/prj\n// javac MyApp.java\n// java it.ev.prj.MyApp\npackage it.ev.prj;\npublic class MyApp {\npublic static void main(String[] args) {\|}\n}
sout|System.out.println(\|);
map_|Map<Integer, String> hash = new HashMap<Integer, String>();\nhash.put(2, "");
ogsj|import org.gjt.sp.jedit.
[assembly-parrot]
[xml]
[dot]
[rakefile]
[cil]
[powershell]
[postscript]
[logtalk]
[sql-loader]
[redcode]
[literate-haskell]
[renderman-rib]
[doxygen]
[javacc]
[pike]
[ruby]
[applescript]
[ml]
[pascal]
//--|//------------------------------------------------------------------------------
case_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
while_|cds.First;\nwhile(not cds.EOF) do begin\n  cds.Next;\nend;
switch_|Case i of\n     15 : begin\n     end\n     else begin\n     end\nend;
[c#]
[bbj]
[freemarker]
[coffeescript]
[vbscript]
[url]
[visualbasic]
[povray]
[jmk]
[icalendar]
[slate]
[tld]
[shtml]
[haskell]
[gsp]
[hlsl]
[n3]
[typescript]
date_add_|// use moment()\nvar t1 = new Date();\nvar delta = (10 * 60 + 3) * 1000;\nvar t2 = new Date(t1.getTime() + delta);
each_|_.each(a_list, function(v, k, list) {\|});
date_make_|var yr = 1999;\nvar mo = 9;\nvar dy = 10;\nvar hr = 23;\nvar mi = 30;\nvar ss = 0;\nvar t = new Date(yr, mo - 1, dy, hr, mi, ss);
var_|log_
in_array_|_.indexOf([], val) !== -1
_filter_|var a_even = _.filter([1, 2, 3, 4], function(num){ return num % 2 == 0; });
opt_|p_options:{[k: string]:any;}\nvar options = _.extend({         \n    param: true\n}, p_options );
require_|import_\nreference_
log_|console.log( sprintf('%s', aaaa) );\n// console.trace();
date_|moment().format('YYYY-MM-DD HH:mm:ss');
closure_|for (var i = 0; i < 3; i++) {\n    // sulution 1\n    function make_handler(index): () => {\n        var handler = () => {\n            index += 1;\n            return i;\n        }\n        return handler;\n    }\n    // sulution 2\n    (function(index) {\n        console.log('iterator: ' + index);\n    })(i);\n    on_click( make_handler(i) );\n}\n// @see foreach_\n
typeof_|typeof \| !== 'undefined'
for_|for( var i=0; i<a_list.length; i++ ) {\|    var v = a_list[i];\n    (function(local_i, local_v) {\n        // una callback che si riferisca ad $i punterà su i=a_list.length,\n        // usa una closure per riferire il valore corrente\n        // @see foreach_ closure_\n    })(i, v);\n}
throw_|throw new Error("msg");
get_|    private _name: string;\n    get name(): string {\n        return this._name;\n    }\t\n    set name(s: string) {\n        this._name = s; \n    }
import_|import * as Calculations from './Scripts/Calculations';\nreference_
array_values_|_.values(aaa)
isset_|typeof  != 'undefined'\n// !== void 0\n
template_|mustache_
printf_|sprintf_
a_t_|//typed array\nvar type_list = new Array<TheType>();
a_num_|var a_: Array<number> = [1, 2];
bb_model_|app.models.Promotion = Backbone.Model.extend({\n    initialize: function() {\n        // Data.local.promotions.getItemPromotion(BCOART);\n    },\n    defaults: {\n    },\n    validate: function(attrs, options) {\n    }\n});\napp.models.PromotionCollection = Backbone.Collection.extend({\n    model: app.models.Promotion\n});
interface_|interface_rec_\ninterface_func_\ninterface Window { device: IDevice; }\n\n
jq_json_|$.getJSON( "ajax/test.json", function( data ) {\n  var items = [];\n  $.each( data, function( key, val ) {\n    items.push( "<li id='" + key + "'>" + val + "</li>" );\n  });\n \n  $( "<ul/>", {\n    "class": "my-new-list",\n    html: items.join( "" )\n  }).appendTo( "body" );\n});
array_merge_|var a = _.extend(a1, a2);\n// a_val.concat(a_val2); // merge di array sequenziali
try_|try {\n\|} catch(e) {\n    // e.message\n}
interface_rec_|interface IPerson {\n    name: string;\n    descr?: string;\n    methodName(): string;\n}\n
function_|//\nfunction add(x: number): number {\n    return x;\n}
generic_|// Generic functions example\nfunction reverse<T>(list: T[]) : T[] {\n  var reversedList: T[] = [];\n  for (var i = (list.length - 1); i >=0; i--) {\n    reversedList.push(list[i]);\n  }\n  return reversedList;\n}\nvar letters = ['a', 'b', 'c', 'd'];\nvar reversedLetters = reverse<string>(letters); // d, c, b, a\nvar numbers = [1, 2, 3, 4];\nvar reversedNumbers = reverse<number>(numbers); // 4, 3, 2, 1\n\n
callback_|cb_
main_|(function main() {\n\n}());
empty_|_empty_
case_|case 'nnn':\nbreak;
is_array_|_.isArray(aaa)
mustache_|var data_obj = {\n  title: "Joe",\n  calc: function () {\n    return 2 + 4;\n  }\n};\nvar html = Mustache.render("{{title}} spends {{calc}}", data_obj );
bb_find_|this.$('scoped selector');
static_|static member(b:string):string { return ''; }
fifo_lifo_|var stack = [];\nstack.push(2);       // stack is now [2]\nstack.push(5);       // stack is now [2, 5]\nvar i = stack.pop(); // stack is now [2]\nconsole.log(i);      //  5\n\nvar queue = [];\nqueue.push(2);         // queue is now [2]\nqueue.push(5);         // queue is now [2, 5]\nvar i = queue.shift(); // queue is now [5]\nconsole.log(i);        // 2
_empty_|_.isEmpty()
array_|var a_: string[] = ['hello', 'world'];
json_decode_|try{ \n    var obj:any = JSON.parse(json); \n} catch(e) { \n    console.log('JSON parse error:'+e.message); \n}
const_|const MAX_DIM_CHUNK=50; //sqlite limit 999
call_|func.call(thisArg|null, arg1, arg2 );
dict_|dict_js_
interface_func_|interface ICallbackType extends Function { \n  (msg: string): void;  // def firma di una callback\n}\n// inline:  callback: { (pos: number): void }\n// inline2: callback: (pos: number) => void \n
construct_|constructor(public x: number ) { \n  //super();\n}\n//public getX() { return this.x; }\n
profile_|var t_start:number = Date.now();\nvar timeElapsed:number = (Date.now()-t_start);\n"time: "+timeElapsed+" msec"
cb_|successCallback?: (arg1: number)=>void
console_|log_
lambda_|var sqr2: (x: number) => number = (x) => {\n  return x * x;\n};
foreach_|//[1, 2, 3].forEach((item, index, array) => { console.log(item); });\n//for (var key in hash) { if(hash.hasOwnProperty(key) ) { console.log(v); } }\n_each_
dict_js_|var item_list: { [k: string]: Object; } = { };
reg_get_|rx = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nm = rx.exec('2009-06-03');\nyr = m[1];\nmo = m[2];\ndy = m[3];
time_|var t_start:number = Date.now();
dict_bb_|var a_list: _.Dictionary<string> = {};
substr_|str.substring(0,2);
reg_scan_|"dolor sit amet".match(/\\w+/g);
implode_|a_s.join(", ")
now_|moment().format('YYYY-MM-DD hh:mm:ss')
a_str_|var a_: Array<string> = ['a','b'];
bb_view_|// var instance = new Views.__ViewName__({\n//     el: $('#myid'),\n//     model: mymodel\n// });\n// instance.render().delegateEvents();\n\nmodule Views {\n    export class __ViewName__ extends Backbone.View {\n        // TS constructor\n        constructor( opt: any) {\n            // ... init properties\n            super(opt);// BB chiamerà this.initialize(opt);\n            console.log( sprintf('__ViewName__ iconstruct') );\n        }\n        // BB contructor\n        initialize(opt:any) {\n            // UI events update the model, listen the model change, update the view\n            this.listenTo(this.model, 'change', this.render);\n        }\n        render() {\n            var data = this.model.attributes;\n            // subviews: preferibile configurarle per renderle manualmente\n            // this.collection.each(function(m){\n            //     var tmpView = new subView({ model: m });\n            //     this.$el.append(tmpView.render().el);\n            // }, this);\n            var html = '<div class="content">test test</div> ';\n            this.$el.html(html);\n            return this;\n        }\n        events() {\n            return {\n                'click .content': 'onOpen',\n            };\n        }\n        onOpen(event:any) {\n            //this.model.set({ name: $("#name").val()});\n            this.render();\n            alert('test');\n        }\n        // id in cui verrà resa la view come pagina\n        getPageID() { return '__ViewName__'; }\n    }\n}
cache_|var key:string = _.str.sprintf('%s_%s_%s', 'app.adapters.items', searchKey, use_bestsellers );\n        if( MemCache.has(key) ) {\n            results = MemCache.get(key);\n        } else {\n            // compute list\n            results = getItemsFilterd(searchKey, use_bestsellers);\n        }
microtime_|profile_
void_|if ( value === void 0) { value = 0; }
overload_|interface IFoo {\n    bar: {\n        (s: string): number;\n        (n: number): string;\n    }\n}\nclass Foo{\n    public bar(s: string): number;\n    public bar(n: number): string;\n    public bar(arg: any): any {\n        if (typeof(arg) === 'number'){\n            return arg.toString();\n        }\n        if (typeof(arg) === 'string'){\n            return arg.length;\n        }\n    }\n}
stack_|fifo_lifo_
if_|if( typeof_ ) { }
queue_|fifo_lifo_
ceil_|Math.ceil(number)
str_match_|var m = /\\d{4}/.exec(s);\nif (m) {\n  var match:string = m[0];\n}
lifo_|fifo_lifo_
date_parts_|t.getHours();\nt.getMinutes();\nt.getSeconds();
sp_|sprintf_
json_encode_|var str:string = JSON.stringify(obj);
json_parse_|json_decode_
switch_|switch(string) {\n    case 'nnn':\n        teststr();\n    break;\n    default:\n        teststr();\n}
preg_scan_|"dolor sit amet".match(/\\w+/g);
declare_|declare function sprintf(fmt: string, ...args: any[]): string;\n// global var typing\ndeclare var cordova: Cordova;
public_|public \|():boolean {\nreturn true;\n}
array_slice_|array.slice(pos, page_len)
count_|[].length\n//var k_num:number = _.size(hash);
namespace_|namespace Utils {\n    export function log(msg) {\n        console.log(msg);\n    }\n    export function error(msg) {\n        console.error(msg);\n    }\n}
module_|module M {\n    export class C {\n    }\n}
fifo_|fifo_lifo_
func_|function(){}
sprintf_|sprintf('%s/%s', aa, bb )
_each_|_.each(hash, (v, k, list) => { \n\|});
func_get_args_|function test(s: string, ...rest: string[]): void {\n    console.log(s);\n    if (rest.length) {\n        console.log(rest[rest.length - 1]);\n    }\n}
class_|class AClass {\n    constructor(public msg: string) {\n\tsuper(msg);\n    }\n    toString() {\n        return 'Class-'+this.msg ;\n    }\n}\n\nclass BClass extends AClass {\n    private str: string;\n    private el: HTMLElement;\n    private num: number;\n    constructor(m: string) {\n        super("aaa");\n        this.str = m;\n    }\n    public getStr() {\n        return "str: " + this.str;\n    }\n    public static member(b: string): string { return ''; }   \n    // typed callback\n    public save(callback: (n: number) => any): void {\n        callback(42);\n    }\n}
reference_|/// <reference path="jquery.d.ts" />
__END__|var t = `\nmultiline string  ${var}\n`;
replace_|str=str.replace("A", "B");
f__|function \|():void { return; }
type_|type THash = { [k: string]: any; };\ntype TDictionary<T> = { [k: string]: T; };//uso: var d_1:Dictionary<number> = { 'a': 1 };\n/*\n// optionals\ntype TStringOrNumber = string | number;\ntype TText_ = string | { text: string };\n// alias\ntype TObjectStatics = typeof Object;\n// tuple\nexport type TSQLExecTuple = [ string, any[] ];\n// parametricas\ntype TPair<T> = [T, T];\ntype TCoordinates_ = TPair<number>;\ntype TTree<T> = T | { left: Tree<T>, right: Tree<T> };\ntype TNameLookup = Dictionary<string, any>;\n// callbacks\ntype TMyHandler = (myArgument: string) => void;\ntype TCallback<T> = (data: T) => void;\n*/
date_now_|var t:number = (new Date()).getTime() / 1000
unique_|aaa = _.uniq(aaa);\n
str_replace_|s = "do re mi mi mi";\ns.replace(/mi/g, "ma");
method_|protected method():void {\n\n}
cast_|p_index_fields:string|string[]\nif( _.isArray(p_index_fields) ) {\n    var a:string[] = <Array<string>>p_index_fields;\n    index_fields = a.join(', ');\n} else {\n    index_fields = <string>p_index_fields;\n}\n//(<any>this)._bindRoutes();\n
f_|() => {\n    \|\n}
hash_|dict_js_
jq_get_json_|var r:JQueryXHR = $.getJSON(url: string, data?: Object, \n\tfunction(data: any, textStatus: string, jqXHR: JQueryXHR){\n});\n
enum_|const enum Comparison {\n    LessThan = -1,\n    EqualTo = 0,\n    GreaterThan = 1\n}\nvar x:number = Comparison.EqualTo; // Ok, replaced with 0 in emitted code\nvar y:string = Comparison[Comparison.EqualTo];\n
singleton_|// instance = SingletonClass.getInstance();\nclass SingletonClass {\n    private static _instance:SingletonClass = new SingletonClass();\n    public static getInstance():SingletonClass {\n        return SingletonClass._instance;\n    }\n    constructor() {\n\t// enforce singleton\n        if(SingletonClass._instance) {\n            throw new Error("Error: Instantiation failed: Use SingletonClass.getInstance() instead of new.");\n        }\n        SingletonClass._instance = this;\n    }\n}
reg_replace_|str.replace(/[^A-Za-z0-9_]+/g, "_");
[plaintex]
[cobol]
[csv]
[css]
hide_|visibility:hidden;\n/*occupa posto nel layout*/
foreach_|// less 2.1\n@list: "banana", "tomato", "potato", "peach";\n@n: length(@list);\n.loop(@i) when (@i >= 0) {\n    .loop( (@i - 1) );  // recursivem next iteration\n    @value: extract(@list, @i);\n    // code for each iteration\n    body { color:@value; }\n}\n.loop(@n);
shadow_|/* oriz vert blur_radius spread radius */\n                -webkit-box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.5);
dbg_|border: 1px solid #\|;/*dbg*/
gradient_|// use less or sass mixin
show_|display:block;
media_|mediaquery_
remove_|display: none;
mediaquery_|/* 480 768 */\n@media only screen and (max-width : 1024px) {\n}
alpha_|opacity:0.85;\nfilter:alpha(opacity=85);
css_mediaquery_|// if( $device_width >= $x )\n@media only screen and (min-width: 640px  ) { }\n@media only screen and (min-width: 667px  ) { }\n@media only screen and (min-width: 732px  ) { }\n@media only screen and (min-width: 960px  ) { }\n@media only screen and (min-width: 1024px ) { }\n@media only screen and (min-width: 1280px ) { }\n\n// if( $device_width <= $x )\n@media only screen and (max-width: 1280px) { }\n\n
[assembly-x86]
[binsource-agc]
[ans-forth94]
[javascript]
foreach_|a.forEach(function(v,k){\n    // console.log(v);\n});\n// IE<=8 \n// for(var k in a){ if(a.hasOwnProperty(k)){ var v = a[k]; }}
js_require_|js_include_
min_|var n = Math.min(n1,n2);
jq_is_|$( "ul" ).click(function( event ) {\n  var target = $( event.target );\n  if ( target.is( "li" ) ) {\n    target.css( "background-color", "red" );\n  }\n});
yui_ajax_|var t = YAHOO.util.Connect.asyncRequest('GET', url, {\n        success: function(o) {\n            // o.status\n            // o.statusText\n            // o.responseText\n            // o.argument\n        },\n        failure: function(o) { },\n        // Passing an array of arguments to both the success and failure callback\n        argument: [argument1, argument2, argument3]\n    },\n    null /* "new=1&old=2" */\n);
if_|if( $jq_selection.length && !_.isEmpty(o) ) {\|}
_sprintf_|var s = _.str.sprintf('%s', val);
jq_attr_|$(selector).attr(k, v);
jq_build_|$('<div/>', {\n    'id':'myDiv',\n    'class':'myClass',\n    'style':'cursor:pointer;font-weight:bold;',\n    'html':'<span>For HTML</span>',\n    'click':function(){ alert(this.id) },\n    'mouseenter':function(){ $(this).css('color', 'red'); },\n    'mouseleave':function(){ $(this).css('color', 'black'); }\n}).appendTo('body');
reg_get_|var regexp = new RegExp(s_query, 'gi');\nvar res = str.match(regexp);
redirect_|window.location = "http://www.name.com/";
try_|try {\n\|} catch(e){\n        //console.log(e.message); \n\t//alert(format_exception(e));\n} finally {}
jq_ajax_|$.ajax({\n  url: '/data/people.json',\n  type: 'POST',\n  dataType: 'json',\n  success: function( resp_o ) {\n    $( '#target').html( resp_o.name );\n  },\n  error: function( req, status, err ) {\n    console.log( 'something went wrong', status, err );\n  }\n});
_template_|var html = _.template("<%=k%>").call(this, {k: "aa"});
jq_post_|jq_ajax_post_
include_once_|// see require_ require_once_ include_ jq_require_
jq_prop_|var el = $(selector).prop(k, v); // see jq_attr_
sprintf_|_sprintf_
jq_effects_|$(this).show()       ;// Show the selected elements.\n$(this).hide()       ;// Hide the selected elements.\n$(this).fadeIn()     ;// Animate the opacity of the selected elements to 100%.\n$(this).fadeOut()    ;// Animate the opacity of the selected elements to 0%.\n$(this).slideDown()  ;// Display the selected elements with a vertical sliding motion.\n$(this).slideUp()    ;// Hide the selected elements with a vertical sliding motion.\n$(this).slideToggle();// Show or hide the selected elements with a vertical sliding motion
jq_style_|jq_css_
jq_html_|// Load HTML from the server and place into the matched elements\n$("#result").load("ajax/test.html", function() {\n    alert( "Load was performed." );\n});
preg_|reg_replace_
for_|for( var i=0; i<a.length; i++) {\|}
call_|fun.call(this_obj, arg1, arg2, ... );
str_match_|var is_found = 'For more information, see Chapter 3.4.5.1'.match( /(chapter \\d+(\\.\\d)*)/i );\nconsole.log(is_found);
to_array_|var args = Array.prototype.slice.call(arguments);
is_empty_|jq_is_empty_
_map_|var a_=_.map([1, 2, 3], function(num){ return num * 3; }); // [3, 6, 9]\nvar a_=_.map({one: 1, two: 2, three: 3}, function(num, key){ return num * 3; }); // [3, 6, 9]
jq_promise_|/* per una operazione asincrona ritorna .promise(), intercetta il .done() con una callback\n$( "div" ).promise().done(function() {\n     // op Finished!\n});\n$.when( effect() ).done(function() {\n    // op Finished!\n}); */\n\nfunction doSomethingLater( fn, time ) {\n  var dfd = $.Deferred();\n  setTimeout(function() {\n    dfd.resolve( fn() );\n  }, time || 0);\n  return dfd.promise();\n}\nvar success = function( resp ) {\n  $( '#target' ).html( 'it worked' );\n};\nvar err = function( req, status, err ) {\n  $( '#target' ).html( 'it failed' );\n};\nvar dfd = doSomethingLater(function() { /* onTimeOut */ }, 100);\ndfd.then( success, err );\n
include_|LazyLoad.js(['foo.js', 'bar.js', 'baz.js'], function () {\n  alert('all files have been loaded');\n});\n// see require_ require_once_ include_ jq_require_ js_include_
jq_json_|jq_ajax_json_
jq_disable_|// su checkbox\n$('form#form_id #checkid').change(function(){\n    if( this.checked ){\n        $('form#form_id input:text').attr('disabled','disabled');\n    } else {\n        $('form#form_id input:text').removeAttr('disabled');\n    }\n}).trigger('change');\n\n// tutti i submit di una form\n$('form#form_id').map(function(){\n    var selector_btn = 'input[type=button], input[type=submit], :submit';\n    $(this).find(selector_btn).prop('disabled', true);\n});
jq_dom_map_|$("input").map(function(){\n      return $(this).val();\n    }).get().join(", ")
jq_contains_|str_contains_
jq_is_numeric_|var is_num = $.isNumeric( num );
jq_get_|jq_ajax_get_
jq_wrap_all_|$( ".inner" ).wrapAll( "<div class='my_css' />");
str_contains_|var is_containing_x = url.search(/xxx/) != -1;\nvar is_containing_x = /yes/i.test('xxx') ;\nvar is_containing_x = str.toLowerCase().indexOf("xxx) >= 0);
is_object_|function is_object(v) {\n    //One of the quirks of JavaScript is that typeof null returns "object". But it’s not an object. So let’s check for that, too\n    return (v instanceof Object && v.toString() == '[object Object]');\n}
jq_remove_|// elimina dal DOM i nodi selezionati\n$(selector).remove();
jq_wrap_|$("p").slice(1,3).wrap("<i></i>");\n
clo_|func_
factory_|function createObject(name) \n{\n  var privateName = name || "I am private name";\n  var privateMethod = function () {\n    return "result of private"; \n  }\n  return {\n    publicName: "I am public name",\n    publicMethod: function () {\n           alert("privateName is " + privateName + ", privateMethod called: "+ privateMethod()); \n      }\n  }\n}
jq_each_|$.each(associative_array, function(key, value) { \n  alert(key + ': ' + value); \n});
_size_|var a_={one: 1, two: 2, three: 3};// 3\nvar c = _.size(a_);
jq_exists_|jq_hasnode_
substr_|str.substr( beg=0, len=4);
max_|var n = Math.max(n1,n2);
jq_css_|el.css({\n\tbackgroundColor: '#ffe', \n\tborderLeft: '1px solid #ccc' \n}).css('width', function( i) {\n  return i * 50;\n}).css('width', '+=200');
in_array_|var is_present = ["Banana", "Orange"].indexOf("Apple") >= 0; // jq_inarray_
json_encode_|var text = JSON.stringify(data);
log_|console.log(\|);
yui_style_|YAHOO.util.Dom.setStyle(__display_id, 'border', "1px solid "+color );
func_|function(){\n\|}
static_|myclass.method = function() {\n};
jq_ready_|$(function(){\|});
jq_delegate_|$( "table" ).delegate( "td", "click", function() {\n  $( this ).toggleClass( "chosen" );\n});
_empty_|_.isEmpty(|)
date_|function format_date_it(date){\n    var m = date.getMonth() + 1;\n    var str = date.getDate() + "/" + m + "/" + date.getFullYear();\n    return str;\n}\nfunction date_last_week(){\n    var es = (7*24*60*60*1000);//secondi in una settimana\n    var ts = ( (new Date()).getTime() - es );\n    return new Date(ts);\n};\nvar str = format_date_it( date_last_week() );
indexof_|//var a = ['apple','orange','pear'];\nvar is_found = (a.indexOf("orange") != -1);\nvar has_char = str.indexOf('@') === -1;
jq_submit_|$('form').submit(function(e){\n    e.preventDefault();// prevent the default browser behaviour on this case\n    var isErrorFree = true;\n    // custom validation\n    $('input.required, select.required, textarea.required',this).each(function(){\n        if ( validateElement.isValid(this) == false ){\n            isErrorFree = false;\n        };\n    });\n    if (isErrorFree){ \n\t// disable multiple submissions\n        $(this).find('button, input[type=submit]').attr('disabled', 'disabled');\n\t// send data\n\tvar a_ = $(this).serializeArray();\n\t$.post( url, data, callback, type );\n    }\n    return isErrorFree;\n});\n\n
jq_checked_|$(":checkbox").is(':checked')
define_|define(["my/dependency"],\n    function(dependency) {\n        // private code\n        return function() {\n            // public code\n        }\n    }\n);
jq_foreach_|$.each(a, function(i,key){\|});
json_|var data = JSON.parse(text);\nvar text = JSON.stringify(data);
_reduce_|var sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);// 6
jq_is_empty_|jQuery.isEmptyObject({}); // true\njQuery.isEmptyObject({ foo: "bar" }); // false
timestamp_|var now = new Date().getTime().toString();
jq_extend_|var settings = $.extend({ test: 1 }, opt);\n
jq_form_validate_|// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js\n// https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/additional-methods.min.js\n// @see http://jqueryvalidation.org/\n$().ready(function() {\n    // Selecting the form and defining validation method\n    $("#form").validate({\n        // Passing the object with custom rules\n        rules : {\n            // login - is the name of an input in the form\n            login : {\n              // Setting login to be required\n              required : true\n            },\n            email : {\n                required : true,\n                // Setting email pattern for email input\n                email : true\n            },\n            password : {\n                required : true,\n                // Setting minimum and maximum lengths of a password\n                minlength : 5,\n                maxlength : 8\n            }\n        },\n        // Setting error messages for the fields\n        messages: {\n            login: "Enter you login",\n            password: {\n                required: "Enter your password",\n                minlength: "Minimum password length is 5",\n                maxlength: "Maximum password length is 8"\n            },\n            email: "Enter you email"\n        },\n        // Setting submit handler for the form\n        submitHandler: function(form) {\n            form.submit();\n        }\n    });\n});
jq_target_|$('').click(function(e){\nvar el = jQuery(e.target).closest('tr');\n});
jq_get_json_|var r: JQueryXHR = $.getJSON(url: string, data?: Object, function(data: any, textStatus: string, jqXHR: JQueryXHR){\n\n});\n
jq_find_|$( 'li' )\n.find( 'span' )\n.attr( 'title', 'Hover over me' )\n.click(function() {\n    $( this ).addClass( 'clicked' );\n});
jq_by_attribute_|var el = $("[attribute='value']");
now_|var now_ts = (new Date).getTime();//timestamp
jq_data_|data-hidden="true" data-options='{"name":"John"}'\n$("div").data("hidden") === true;\n$("div").data("options").name === "John";
merge_|jq_merge_
jq_serialize_|// URL-encoded notation\nvar url_data = $('form').serialize();\n// array [{ name: "a", value: "1" }]\nvar a_data   = $('form').serializeArray();\n
jq_mouse_over_|$('div').mouseover(function() {\n    $(this).addClass('blue-bg');\n}).mouseleave(function(){\n    $(this).find('.content').fadeOut();\n});
require_|require(["jquery", "undercore"], function($, _) {\n        // $ && _ are available\|\n});\n// see require_ require_once_ include_ jq_require_
extend_|jq_extend_
trim_|var s = $.trim(str);
jq_end_|$( "ul.first" )\n  .find( ".foo" )\n    .css( "background-color", "red" )\n  .end()  // returs a query object\n  .find( ".bar" )\n    .css( "background-color", "green" );
str_replace_|var str = 'John Smith'.replace(/(\\w+)\\s(\\w+)/, '$2, $1');
jq_unique_|var a_unique = $.unique( a_ );
isset_|typeof != 'undefined'\n//  !== void 0
jq_filter_|$(".parent").find(".bar").filter("p");
f_|func_
//--|\|//------------------------------------------------------------------------------
switch_|switch(\|) {\n  case : \n  break;\n  default: \n    //istruzioni \n}
ceil_|var n = Math.ceil(7.004); // 8
rand_|// Returns a random integer between min (included) and max (included)\n// Using Math.round() will give you a non-uniform distribution!\nfunction getRandomIntInclusive(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nvar n = Math.random();// between 0 (inclusive) and 1 (exclusive)\n
require_once_|// see require_ require_once_ include_ jq_require_
jq_hover_|jQuery('#something').hover(\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 1, 1000 )\n.animate( {height:500}, 1000 );\n},\nfunction(){\njQuery(this).stop(true)\n.fadeTo( 0.8, 1000 )\n.animate( {height:200}, 1000 );\n}\n);\n
method_|    method: function() {\n    },
prompt_|var s = prompt("question","default");\nif ( s!=null && s!="" ) {\n}
filter_|var _a = a.filter(function(v){\n    return v.name === "test";\n});
is_numeric_|jq_is_numeric_
join_|array.join(',');
jq_inarray_|var a_ = [ "8", "9", "10", 10 + "" ];\nvar is_ = $.inArray( 10, a_ );
jq_append_|$('<div/>').append(text).css({}).appendTo('#log');\n$('<option/>').attr('value',optionValue).text(optionName).appendTo('#colors');\n// jq_build_\n
jq_checkbox_|$( 'input:checkbox(:not(:disabled))' ).prop( 'checked', 'checked' );
lastIndexOf_|-1 !== window.location.pathname.lastIndexOf('/lampa_Orders/');
unique_|jq_unique_
jq_ajax_multiple_|$.when(\n    getTweets('austintexasgov'),\n    getTweets('greenling_com'),\n    getTweets('themomandpops')\n).done(function(atxArgs, greenlingArgs, momandpopsArgs) {\n    var allTweets = [].concat(atxArgs[0]).concat(greenlingArgs[0]).concat(momandpopsArgs[0]);    \n    alert(sortedTweets);\n});\nvar getTweets = function(user) {\n    var url = 'http://twitter.com/status/user_timeline/' + user + '.json';\n    return $.get(url, { count: 5 }, null, 'jsonp');\n}\n
jq_ajax_setup_|//\n// ajax loading indicator\nvar el_loading = $('<div/>').attr('id','loading').text('loading...').css({\n    display: 'none',\n    position: 'fixed',\n    top: '0',\n    right: '0',\n    padding: '10px',\n    border: '1 px solid #ccc',\n    backgroundColor: 'rgba(255,255,255, 0.4)',\n}).appendTo(document.body);\n\n$( document ).ajaxStart(function () {\n    el_loading.show();\n});\n$( document ).ajaxStop(function () {\n    el_loading.hide('slow');\n});\n// intercetta gli eventi jquery ajax per logging\n$(document).ajaxComplete(function() {\n    console.log( "Triggered ajaxComplete handler." );\n});\n$(document).ajaxError(function() {\n    console.log( "Triggered ajaxError handler." );\n});\n$(document).ajaxSend(function() {\n    console.log( "Triggered ajaxSend handler." );\n});\n$(document).ajaxSuccess(function() {\n    console.log( "Triggered ajaxSuccess handler." );\n});
proxy_|jq_proxy_
replace_|s = s.replace("old","new");
jq_insert_|$( "h2" ).insertAfter( $( ".container" ) );
apply_|fun.apply(this_obj, array_arguments );
jq_load_|// it and all sub-elements have been completely loaded\n$('#book').load(function() {\n\n});
jq_key_press_|<input type="text"><span id="test_out">0</span> \n<script type="text/javascript">\nvar i = 0;\n$(function(){\n    $("input").keypress(function(){\n        $("#test_out").text(i += 1);\n    });\n});\n</script>\n
object_|var T = {\n    name: "a", \n    say: function() {\n        alert(this.a); \n    }\n};
while_|while( true ){\|}
template_|_template_
jq_fade_|if (el.is(':visible')) {\nel.fadeOut('slow');\n} else {\nel.fadeIn('slow');\n}
var_|console.log(\|);
url_decode_|var v="JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B";// "JavaScript_шеллы"\nvar v = decodeURIComponent(v);
reg_test_|var re_email = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-]{2,})+\.)+([a-zA-Z0-9]{2,})+$/;\n if ( _.isEmpty(str) || !re_email.test(str)  ) { } else { }
jq_grep_|var a_res_months = $.grep(a_months, function(v, i) {\n    return ( v.indexOf('J') == 0 );\n});\n
jq_by_name_|var email = $("input[name='email']").val();
jq_select_|// lavorare con una select\n// al change di un selct variare le options di una select dipendente\n$('#cod_linea').change(function(){\n           var f = $('#form_item_search');\n           var select = $(this);\n           var val = select.find('option:selected').val()\n           console.log(val);\n           $.ajax({\n               url: '<?=$url_ajax_options?>',\n               type: 'POST',\n               dataType: 'json',\n               data: f.serialize(),\n               success: function( resp_o ) {\n                   console.log(resp_o);\n                   var select_col = $('#cod_collection');\n                   // select_col.empty(); // remove old options\n                   $(select_col).find('option:gt(0)').remove(); // remove all options, but not the first\n\n                   $.each(resp_o , function(i, rec) {\n                           //console.log( rec );\n                           //console.log( rec['ADESCR'] );                           \n                           var html_value =  rec['ANUCOL'];\n                           var html_label =  rec['AAACOL'];\n                           select_col.append($("<option></option>").attr("value", html_value).text(html_label));\n                   });\n               },\n               error: function( req, status, err ) {\n                   console.log( 'something went wrong', status, err );\n               }\n    });\n});\n
jq_deferred_|jq_promise_
settimeout_|var timer = window.setTimeout(function(params){\n    console.log(params);\n}, 500, params);\nwindow.clearTimeout(timer);
interval_|var intervalID = window.setInterval(function(){}, 500); \nclearInterval(intervalID);
jq_scroll_|// todo!
js_log_|console.log();
jq_hasnode_|if( $('#selector').length > 0 ) {}
bind_|fun.bind(this_obj , arg1, arg2 ... );
js_include_|function include(js_url){\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = js_url;\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x);\n}
byid_|var el = document.getElementById('id');
reduce_|var _a = a.reduce(function(carry, v) {\n    carry = carry + v;\n    return carry;\n}, (var initial=0) );
_count_|_size_
is_array_|$.isArray(\|)
is_string_|_.isString(myVar)\n// typeof myVar === 'string' || myVar instanceof String
jq_merge_|var a = $.merge( [1,2], [3,4] ); // jq_extend_
jq_empty_|// rm all child nodes\n$(selector).empty();
jq_require_|// Load a JavaScript file from the server using a GET HTTP request, then execute it \nvar r:JQueryXHR = $.getScript(url: string, function(script: string, textStatus: string, jqXHR: JQueryXHR){ \n\n});
is_function_|jq_is_function_
jq_ajax_post_|var jqxhr = $.post("ajax/test.html", {k:v}, function( data ) {\n  \tconsole.log( data );   \n}, 'json') \n  .done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
jq_map_|var a = $.map( [2,3,4], function(n){\n   return n*2;\n});//[4, 6, 8]
jq_click_|$('form input:checkbox').live('click', function(e){\ne.preventDefault();\n        \|});
typeof_|isset_
jq_isnode_|if( $('#selector').length > 0 ) {}
console_|console.log(\|);
reg_replace_|var str = str_result.replace(new RegExp('[a-z]', 'g'), '_');
function_|function(){\n\|}
throw_|throw new Error(msg);
stop_|e.stopPropagation();//bubbling\ne.preventDefault();
jq_filter_f_|$('li').filter(function(index) {\n  return $('strong', this).length == 1;\n}).css('background-color', 'red');
floor_|var n = Math.floor( 45.95 ); //  45
regexp_|var re = /\\w+/;\nvar re_m = regex.exec(text);\nconsole.log(re_m[1]); \n// str_match_ str_replace_
module_|module = function() {\n  // ... module privates and aliases\n\n  // public\n  return {\n    // ... module constants\n    init: function() {\n      return this;\n    },\n\n  };\n}().init();
jq_selector_|jq_selector_list_
jq_ajax_get_|var jqxhr = $.get( '/data/people.html', function( html ){\n  $( '#target' ).html( html );\n}).done(function(req) {\n    console.log( "jqxhr success" );\n  })\n  .fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n  })\n  .always(function() {\n    console.log( "jqxhr finished" );\n});
count_|[].length
jq_ajax_json_|var jqxhr = $.getJSON("/controller/action", { k: v },\n   function(json){\n     console.log("JSON Data: " + json.name);\n}).fail(function(req, status, err) {\n    console.log( "jqxhr error:"+status+' '+err );\n});
map_|var _a = a.map(function(v,k){\n    v.name = '"'+v.name+'"';\n    return v;\n});
jq_rm_|jq_remove_
jq_dom_node_|var dom_node = $( "li" ).get( 0 );\nconsole.log( dom_node+' '+$.type(dom_node) );
jq_animate_|$( this ).animate({\n    left: '+=50', // increase by 50\n    opacity: 0.25,\n    fontSize: '12px' //camelcase when prop name like "font-size"\n  },  300,  function() {\n    // executes when the animation is done\n  }\n);\n.stop(); // will stop currently running animations \n.delay(milliseconds); // will pause before the execution of the next animation method
localstorage_|if(typeof localStorage !== "undefined") {\n    // update key\n    var = key = 'clickcount';\n    if ( typeof localStorage[key] !== "undefined" ) {\n        localStorage[key] = localStorage[key] + 1;\n    } else {\n        localStorage[key] = 1;\n    }\n    // eliminare dati:\n    // localStorage[key] = null;\n    // localStorage.removeItem(key);\n}\n
_each_|_.each(hash, function(v, k, list){ });
except_|throw "errormsg\|";
timeout_|setTimeout(function(){ alert("Hello"); }, 300);
jq_selector_list_|/*\n    All                         *   \n                                :animated \n    Attribute Contains Prefix   [name|=  value  ]\n    Attribute Contains          [name*=  value  ]\n    Attribute Contains Word     [name~=  value  ]\n    Attribute Ends With         [name$=  value  ]\n    Attribute Equals            [name=  value  ]\n    Attribute Not Equal         [name!=  value  ]\n    Attribute Starts With       [name^=  value  ]\n                                :button\n                                :checkbox \n                                :checked \n    Child                       parent > child   \n    Class                       .class   \n                                :contains   \n                                :disabled \n                                :empty \n                                :enabled \n                                :eq   \n                                :even \n                                :file \n                                :first-child \n                                :first-of-type \n                                :first \n                                :focus \n                                :gt   \n    Has Attribute               [name]\n                                :has   \n                                :header \n                                :hidden \n    ID                          #id   \n                                :image \n                                :input \n                                :lang   \n                                :last-child \n                                :last-of-type \n                                :last \n                                :lt   \n    Multiple Attribute          [name=value][name2=value2″]\n    Multiple                    selector1, 2, N   \n    Next Adjacent               prev + next   \n    Next Siblings               prev ~ siblings   \n                                :not   \n                                :nth-child   \n                                :nth-last-child   \n                                :nth-last-of-type   \n                                :nth-of-type   \n                                :odd \n                                :only-child \n                                :only-of-type \n                                :parent \n                                :password \n                                :radio \n                                :reset \n                                :root \n                                :selected \n                                :submit \n                                :target \n                                :text \n                                :visible \n*/\n
sort_|var a_ = [1, 10, 2, 21]; \na_.sort(); // [1, 10, 2, 21]
json_decode_|try {  \n    var o_ = $.parseJSON(json_str);\n} catch(e) { \n    console.log(e.message); \n}
json_parse_|JSON.parse(text);
url_encode_|var s = encodeURIComponent(v);
class_|// funzione:\nvar Greeter = (function () {\n    // constructor\n    function Greeter(message) {\n        // public\n        this.greeting = message || 'default';\n        // privileged\n        this.publicMethod = function() {\n            alert(privateName + " get from public method!"); \n        }    \t\n    }\n    // public methods\n    Greeter.prototype.greet = function () {\n        return "Hello, " + this.greeting;\n    };\n    // private\n    var privateVar = message || "default"; \n    var privateMethod = function() {\n        return privateVar; \n    }\n    \n    return Greeter;\n})();\n// instance\n// var o = new Greeter("txt");\n
jq_slide_|if (el.height() > 0) {\nel.animate({ height : 0 });\n} else {\nel.animate({ height : '100%' });\n}
jq_is_function_|if ( $.isFunction( settings.onShow ) ) {\nsettings.onShow.call(this);\n}\n
jq_make_array_|// Returns a NodeList\nvar elems = document.getElementsByTagName( "div" );\n// Convert the NodeList to an Array\nvar arr = jQuery.makeArray( elems );\n// Use an Array method on list of dom elements\narr.reverse();\n$( arr ).appendTo( document.body );
jq_proxy_|// Execute you.test() in the context of the `you` object\n// no matter where it is called\n// i.e. the `this` keyword will refer to `you`\nvar youClick = $.proxy( you.func_name, you );\n// this === "person"\n$(selector).on("click", youClick );
unset_|delete obj['index'];
[uscript]
[gnuplot]
[xq]
